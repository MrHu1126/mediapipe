// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: mediapipe/framework/stream_handler.proto

package mediapipe;

public final class StreamHandler {
  private StreamHandler() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface InputStreamHandlerConfigOrBuilder extends
      // @@protoc_insertion_point(interface_extends:mediapipe.InputStreamHandlerConfig)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Name of the registered input stream handler class.
     * </pre>
     *
     * <code>optional string input_stream_handler = 1 [default = "DefaultInputStreamHandler"];</code>
     */
    boolean hasInputStreamHandler();
    /**
     * <pre>
     * Name of the registered input stream handler class.
     * </pre>
     *
     * <code>optional string input_stream_handler = 1 [default = "DefaultInputStreamHandler"];</code>
     */
    java.lang.String getInputStreamHandler();
    /**
     * <pre>
     * Name of the registered input stream handler class.
     * </pre>
     *
     * <code>optional string input_stream_handler = 1 [default = "DefaultInputStreamHandler"];</code>
     */
    com.google.protobuf.ByteString
        getInputStreamHandlerBytes();

    /**
     * <pre>
     * Options for the input stream handler.
     * </pre>
     *
     * <code>optional .mediapipe.MediaPipeOptions options = 3;</code>
     */
    boolean hasOptions();
    /**
     * <pre>
     * Options for the input stream handler.
     * </pre>
     *
     * <code>optional .mediapipe.MediaPipeOptions options = 3;</code>
     */
    mediapipe.MediapipeOptions.MediaPipeOptions getOptions();
    /**
     * <pre>
     * Options for the input stream handler.
     * </pre>
     *
     * <code>optional .mediapipe.MediaPipeOptions options = 3;</code>
     */
    mediapipe.MediapipeOptions.MediaPipeOptionsOrBuilder getOptionsOrBuilder();
  }
  /**
   * <pre>
   * Settings specifying an input stream handler.
   * </pre>
   *
   * Protobuf type {@code mediapipe.InputStreamHandlerConfig}
   */
  public  static final class InputStreamHandlerConfig extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:mediapipe.InputStreamHandlerConfig)
      InputStreamHandlerConfigOrBuilder {
    // Use InputStreamHandlerConfig.newBuilder() to construct.
    private InputStreamHandlerConfig(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private InputStreamHandlerConfig() {
      inputStreamHandler_ = "DefaultInputStreamHandler";
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private InputStreamHandlerConfig(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000001;
              inputStreamHandler_ = bs;
              break;
            }
            case 26: {
              mediapipe.MediapipeOptions.MediaPipeOptions.Builder subBuilder = null;
              if (((bitField0_ & 0x00000002) == 0x00000002)) {
                subBuilder = options_.toBuilder();
              }
              options_ = input.readMessage(mediapipe.MediapipeOptions.MediaPipeOptions.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(options_);
                options_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000002;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return mediapipe.StreamHandler.internal_static_mediapipe_InputStreamHandlerConfig_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return mediapipe.StreamHandler.internal_static_mediapipe_InputStreamHandlerConfig_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              mediapipe.StreamHandler.InputStreamHandlerConfig.class, mediapipe.StreamHandler.InputStreamHandlerConfig.Builder.class);
    }

    private int bitField0_;
    public static final int INPUT_STREAM_HANDLER_FIELD_NUMBER = 1;
    private volatile java.lang.Object inputStreamHandler_;
    /**
     * <pre>
     * Name of the registered input stream handler class.
     * </pre>
     *
     * <code>optional string input_stream_handler = 1 [default = "DefaultInputStreamHandler"];</code>
     */
    public boolean hasInputStreamHandler() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <pre>
     * Name of the registered input stream handler class.
     * </pre>
     *
     * <code>optional string input_stream_handler = 1 [default = "DefaultInputStreamHandler"];</code>
     */
    public java.lang.String getInputStreamHandler() {
      java.lang.Object ref = inputStreamHandler_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          inputStreamHandler_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     * Name of the registered input stream handler class.
     * </pre>
     *
     * <code>optional string input_stream_handler = 1 [default = "DefaultInputStreamHandler"];</code>
     */
    public com.google.protobuf.ByteString
        getInputStreamHandlerBytes() {
      java.lang.Object ref = inputStreamHandler_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        inputStreamHandler_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int OPTIONS_FIELD_NUMBER = 3;
    private mediapipe.MediapipeOptions.MediaPipeOptions options_;
    /**
     * <pre>
     * Options for the input stream handler.
     * </pre>
     *
     * <code>optional .mediapipe.MediaPipeOptions options = 3;</code>
     */
    public boolean hasOptions() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <pre>
     * Options for the input stream handler.
     * </pre>
     *
     * <code>optional .mediapipe.MediaPipeOptions options = 3;</code>
     */
    public mediapipe.MediapipeOptions.MediaPipeOptions getOptions() {
      return options_ == null ? mediapipe.MediapipeOptions.MediaPipeOptions.getDefaultInstance() : options_;
    }
    /**
     * <pre>
     * Options for the input stream handler.
     * </pre>
     *
     * <code>optional .mediapipe.MediaPipeOptions options = 3;</code>
     */
    public mediapipe.MediapipeOptions.MediaPipeOptionsOrBuilder getOptionsOrBuilder() {
      return options_ == null ? mediapipe.MediapipeOptions.MediaPipeOptions.getDefaultInstance() : options_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (hasOptions()) {
        if (!getOptions().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, inputStreamHandler_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(3, getOptions());
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, inputStreamHandler_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getOptions());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof mediapipe.StreamHandler.InputStreamHandlerConfig)) {
        return super.equals(obj);
      }
      mediapipe.StreamHandler.InputStreamHandlerConfig other = (mediapipe.StreamHandler.InputStreamHandlerConfig) obj;

      boolean result = true;
      result = result && (hasInputStreamHandler() == other.hasInputStreamHandler());
      if (hasInputStreamHandler()) {
        result = result && getInputStreamHandler()
            .equals(other.getInputStreamHandler());
      }
      result = result && (hasOptions() == other.hasOptions());
      if (hasOptions()) {
        result = result && getOptions()
            .equals(other.getOptions());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      if (hasInputStreamHandler()) {
        hash = (37 * hash) + INPUT_STREAM_HANDLER_FIELD_NUMBER;
        hash = (53 * hash) + getInputStreamHandler().hashCode();
      }
      if (hasOptions()) {
        hash = (37 * hash) + OPTIONS_FIELD_NUMBER;
        hash = (53 * hash) + getOptions().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static mediapipe.StreamHandler.InputStreamHandlerConfig parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static mediapipe.StreamHandler.InputStreamHandlerConfig parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static mediapipe.StreamHandler.InputStreamHandlerConfig parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static mediapipe.StreamHandler.InputStreamHandlerConfig parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static mediapipe.StreamHandler.InputStreamHandlerConfig parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static mediapipe.StreamHandler.InputStreamHandlerConfig parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static mediapipe.StreamHandler.InputStreamHandlerConfig parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static mediapipe.StreamHandler.InputStreamHandlerConfig parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static mediapipe.StreamHandler.InputStreamHandlerConfig parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static mediapipe.StreamHandler.InputStreamHandlerConfig parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(mediapipe.StreamHandler.InputStreamHandlerConfig prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Settings specifying an input stream handler.
     * </pre>
     *
     * Protobuf type {@code mediapipe.InputStreamHandlerConfig}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:mediapipe.InputStreamHandlerConfig)
        mediapipe.StreamHandler.InputStreamHandlerConfigOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return mediapipe.StreamHandler.internal_static_mediapipe_InputStreamHandlerConfig_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return mediapipe.StreamHandler.internal_static_mediapipe_InputStreamHandlerConfig_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                mediapipe.StreamHandler.InputStreamHandlerConfig.class, mediapipe.StreamHandler.InputStreamHandlerConfig.Builder.class);
      }

      // Construct using mediapipe.StreamHandler.InputStreamHandlerConfig.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getOptionsFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        inputStreamHandler_ = "DefaultInputStreamHandler";
        bitField0_ = (bitField0_ & ~0x00000001);
        if (optionsBuilder_ == null) {
          options_ = null;
        } else {
          optionsBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return mediapipe.StreamHandler.internal_static_mediapipe_InputStreamHandlerConfig_descriptor;
      }

      public mediapipe.StreamHandler.InputStreamHandlerConfig getDefaultInstanceForType() {
        return mediapipe.StreamHandler.InputStreamHandlerConfig.getDefaultInstance();
      }

      public mediapipe.StreamHandler.InputStreamHandlerConfig build() {
        mediapipe.StreamHandler.InputStreamHandlerConfig result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public mediapipe.StreamHandler.InputStreamHandlerConfig buildPartial() {
        mediapipe.StreamHandler.InputStreamHandlerConfig result = new mediapipe.StreamHandler.InputStreamHandlerConfig(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.inputStreamHandler_ = inputStreamHandler_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        if (optionsBuilder_ == null) {
          result.options_ = options_;
        } else {
          result.options_ = optionsBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof mediapipe.StreamHandler.InputStreamHandlerConfig) {
          return mergeFrom((mediapipe.StreamHandler.InputStreamHandlerConfig)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(mediapipe.StreamHandler.InputStreamHandlerConfig other) {
        if (other == mediapipe.StreamHandler.InputStreamHandlerConfig.getDefaultInstance()) return this;
        if (other.hasInputStreamHandler()) {
          bitField0_ |= 0x00000001;
          inputStreamHandler_ = other.inputStreamHandler_;
          onChanged();
        }
        if (other.hasOptions()) {
          mergeOptions(other.getOptions());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        if (hasOptions()) {
          if (!getOptions().isInitialized()) {
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        mediapipe.StreamHandler.InputStreamHandlerConfig parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (mediapipe.StreamHandler.InputStreamHandlerConfig) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object inputStreamHandler_ = "DefaultInputStreamHandler";
      /**
       * <pre>
       * Name of the registered input stream handler class.
       * </pre>
       *
       * <code>optional string input_stream_handler = 1 [default = "DefaultInputStreamHandler"];</code>
       */
      public boolean hasInputStreamHandler() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <pre>
       * Name of the registered input stream handler class.
       * </pre>
       *
       * <code>optional string input_stream_handler = 1 [default = "DefaultInputStreamHandler"];</code>
       */
      public java.lang.String getInputStreamHandler() {
        java.lang.Object ref = inputStreamHandler_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            inputStreamHandler_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Name of the registered input stream handler class.
       * </pre>
       *
       * <code>optional string input_stream_handler = 1 [default = "DefaultInputStreamHandler"];</code>
       */
      public com.google.protobuf.ByteString
          getInputStreamHandlerBytes() {
        java.lang.Object ref = inputStreamHandler_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          inputStreamHandler_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Name of the registered input stream handler class.
       * </pre>
       *
       * <code>optional string input_stream_handler = 1 [default = "DefaultInputStreamHandler"];</code>
       */
      public Builder setInputStreamHandler(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        inputStreamHandler_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Name of the registered input stream handler class.
       * </pre>
       *
       * <code>optional string input_stream_handler = 1 [default = "DefaultInputStreamHandler"];</code>
       */
      public Builder clearInputStreamHandler() {
        bitField0_ = (bitField0_ & ~0x00000001);
        inputStreamHandler_ = getDefaultInstance().getInputStreamHandler();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Name of the registered input stream handler class.
       * </pre>
       *
       * <code>optional string input_stream_handler = 1 [default = "DefaultInputStreamHandler"];</code>
       */
      public Builder setInputStreamHandlerBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        inputStreamHandler_ = value;
        onChanged();
        return this;
      }

      private mediapipe.MediapipeOptions.MediaPipeOptions options_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          mediapipe.MediapipeOptions.MediaPipeOptions, mediapipe.MediapipeOptions.MediaPipeOptions.Builder, mediapipe.MediapipeOptions.MediaPipeOptionsOrBuilder> optionsBuilder_;
      /**
       * <pre>
       * Options for the input stream handler.
       * </pre>
       *
       * <code>optional .mediapipe.MediaPipeOptions options = 3;</code>
       */
      public boolean hasOptions() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <pre>
       * Options for the input stream handler.
       * </pre>
       *
       * <code>optional .mediapipe.MediaPipeOptions options = 3;</code>
       */
      public mediapipe.MediapipeOptions.MediaPipeOptions getOptions() {
        if (optionsBuilder_ == null) {
          return options_ == null ? mediapipe.MediapipeOptions.MediaPipeOptions.getDefaultInstance() : options_;
        } else {
          return optionsBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Options for the input stream handler.
       * </pre>
       *
       * <code>optional .mediapipe.MediaPipeOptions options = 3;</code>
       */
      public Builder setOptions(mediapipe.MediapipeOptions.MediaPipeOptions value) {
        if (optionsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          options_ = value;
          onChanged();
        } else {
          optionsBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <pre>
       * Options for the input stream handler.
       * </pre>
       *
       * <code>optional .mediapipe.MediaPipeOptions options = 3;</code>
       */
      public Builder setOptions(
          mediapipe.MediapipeOptions.MediaPipeOptions.Builder builderForValue) {
        if (optionsBuilder_ == null) {
          options_ = builderForValue.build();
          onChanged();
        } else {
          optionsBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <pre>
       * Options for the input stream handler.
       * </pre>
       *
       * <code>optional .mediapipe.MediaPipeOptions options = 3;</code>
       */
      public Builder mergeOptions(mediapipe.MediapipeOptions.MediaPipeOptions value) {
        if (optionsBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              options_ != null &&
              options_ != mediapipe.MediapipeOptions.MediaPipeOptions.getDefaultInstance()) {
            options_ =
              mediapipe.MediapipeOptions.MediaPipeOptions.newBuilder(options_).mergeFrom(value).buildPartial();
          } else {
            options_ = value;
          }
          onChanged();
        } else {
          optionsBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <pre>
       * Options for the input stream handler.
       * </pre>
       *
       * <code>optional .mediapipe.MediaPipeOptions options = 3;</code>
       */
      public Builder clearOptions() {
        if (optionsBuilder_ == null) {
          options_ = null;
          onChanged();
        } else {
          optionsBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      /**
       * <pre>
       * Options for the input stream handler.
       * </pre>
       *
       * <code>optional .mediapipe.MediaPipeOptions options = 3;</code>
       */
      public mediapipe.MediapipeOptions.MediaPipeOptions.Builder getOptionsBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getOptionsFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Options for the input stream handler.
       * </pre>
       *
       * <code>optional .mediapipe.MediaPipeOptions options = 3;</code>
       */
      public mediapipe.MediapipeOptions.MediaPipeOptionsOrBuilder getOptionsOrBuilder() {
        if (optionsBuilder_ != null) {
          return optionsBuilder_.getMessageOrBuilder();
        } else {
          return options_ == null ?
              mediapipe.MediapipeOptions.MediaPipeOptions.getDefaultInstance() : options_;
        }
      }
      /**
       * <pre>
       * Options for the input stream handler.
       * </pre>
       *
       * <code>optional .mediapipe.MediaPipeOptions options = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          mediapipe.MediapipeOptions.MediaPipeOptions, mediapipe.MediapipeOptions.MediaPipeOptions.Builder, mediapipe.MediapipeOptions.MediaPipeOptionsOrBuilder> 
          getOptionsFieldBuilder() {
        if (optionsBuilder_ == null) {
          optionsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              mediapipe.MediapipeOptions.MediaPipeOptions, mediapipe.MediapipeOptions.MediaPipeOptions.Builder, mediapipe.MediapipeOptions.MediaPipeOptionsOrBuilder>(
                  getOptions(),
                  getParentForChildren(),
                  isClean());
          options_ = null;
        }
        return optionsBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:mediapipe.InputStreamHandlerConfig)
    }

    // @@protoc_insertion_point(class_scope:mediapipe.InputStreamHandlerConfig)
    private static final mediapipe.StreamHandler.InputStreamHandlerConfig DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new mediapipe.StreamHandler.InputStreamHandlerConfig();
    }

    public static mediapipe.StreamHandler.InputStreamHandlerConfig getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<InputStreamHandlerConfig>
        PARSER = new com.google.protobuf.AbstractParser<InputStreamHandlerConfig>() {
      public InputStreamHandlerConfig parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new InputStreamHandlerConfig(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<InputStreamHandlerConfig> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<InputStreamHandlerConfig> getParserForType() {
      return PARSER;
    }

    public mediapipe.StreamHandler.InputStreamHandlerConfig getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface OutputStreamHandlerConfigOrBuilder extends
      // @@protoc_insertion_point(interface_extends:mediapipe.OutputStreamHandlerConfig)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Name of the registered output stream handler class.
     * </pre>
     *
     * <code>optional string output_stream_handler = 1 [default = "InOrderOutputStreamHandler"];</code>
     */
    boolean hasOutputStreamHandler();
    /**
     * <pre>
     * Name of the registered output stream handler class.
     * </pre>
     *
     * <code>optional string output_stream_handler = 1 [default = "InOrderOutputStreamHandler"];</code>
     */
    java.lang.String getOutputStreamHandler();
    /**
     * <pre>
     * Name of the registered output stream handler class.
     * </pre>
     *
     * <code>optional string output_stream_handler = 1 [default = "InOrderOutputStreamHandler"];</code>
     */
    com.google.protobuf.ByteString
        getOutputStreamHandlerBytes();

    /**
     * <pre>
     * Names of the input side packets for the handler specifically and distinct
     * from the side packets for the calculator (but could be shared).
     * </pre>
     *
     * <code>repeated string input_side_packet = 2;</code>
     */
    java.util.List<java.lang.String>
        getInputSidePacketList();
    /**
     * <pre>
     * Names of the input side packets for the handler specifically and distinct
     * from the side packets for the calculator (but could be shared).
     * </pre>
     *
     * <code>repeated string input_side_packet = 2;</code>
     */
    int getInputSidePacketCount();
    /**
     * <pre>
     * Names of the input side packets for the handler specifically and distinct
     * from the side packets for the calculator (but could be shared).
     * </pre>
     *
     * <code>repeated string input_side_packet = 2;</code>
     */
    java.lang.String getInputSidePacket(int index);
    /**
     * <pre>
     * Names of the input side packets for the handler specifically and distinct
     * from the side packets for the calculator (but could be shared).
     * </pre>
     *
     * <code>repeated string input_side_packet = 2;</code>
     */
    com.google.protobuf.ByteString
        getInputSidePacketBytes(int index);

    /**
     * <pre>
     * Options for the output stream handler.
     * </pre>
     *
     * <code>optional .mediapipe.MediaPipeOptions options = 3;</code>
     */
    boolean hasOptions();
    /**
     * <pre>
     * Options for the output stream handler.
     * </pre>
     *
     * <code>optional .mediapipe.MediaPipeOptions options = 3;</code>
     */
    mediapipe.MediapipeOptions.MediaPipeOptions getOptions();
    /**
     * <pre>
     * Options for the output stream handler.
     * </pre>
     *
     * <code>optional .mediapipe.MediaPipeOptions options = 3;</code>
     */
    mediapipe.MediapipeOptions.MediaPipeOptionsOrBuilder getOptionsOrBuilder();
  }
  /**
   * <pre>
   * Settings specifying an output stream handler.
   * </pre>
   *
   * Protobuf type {@code mediapipe.OutputStreamHandlerConfig}
   */
  public  static final class OutputStreamHandlerConfig extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:mediapipe.OutputStreamHandlerConfig)
      OutputStreamHandlerConfigOrBuilder {
    // Use OutputStreamHandlerConfig.newBuilder() to construct.
    private OutputStreamHandlerConfig(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private OutputStreamHandlerConfig() {
      outputStreamHandler_ = "InOrderOutputStreamHandler";
      inputSidePacket_ = com.google.protobuf.LazyStringArrayList.EMPTY;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private OutputStreamHandlerConfig(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000001;
              outputStreamHandler_ = bs;
              break;
            }
            case 18: {
              com.google.protobuf.ByteString bs = input.readBytes();
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                inputSidePacket_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00000002;
              }
              inputSidePacket_.add(bs);
              break;
            }
            case 26: {
              mediapipe.MediapipeOptions.MediaPipeOptions.Builder subBuilder = null;
              if (((bitField0_ & 0x00000002) == 0x00000002)) {
                subBuilder = options_.toBuilder();
              }
              options_ = input.readMessage(mediapipe.MediapipeOptions.MediaPipeOptions.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(options_);
                options_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000002;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          inputSidePacket_ = inputSidePacket_.getUnmodifiableView();
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return mediapipe.StreamHandler.internal_static_mediapipe_OutputStreamHandlerConfig_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return mediapipe.StreamHandler.internal_static_mediapipe_OutputStreamHandlerConfig_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              mediapipe.StreamHandler.OutputStreamHandlerConfig.class, mediapipe.StreamHandler.OutputStreamHandlerConfig.Builder.class);
    }

    private int bitField0_;
    public static final int OUTPUT_STREAM_HANDLER_FIELD_NUMBER = 1;
    private volatile java.lang.Object outputStreamHandler_;
    /**
     * <pre>
     * Name of the registered output stream handler class.
     * </pre>
     *
     * <code>optional string output_stream_handler = 1 [default = "InOrderOutputStreamHandler"];</code>
     */
    public boolean hasOutputStreamHandler() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <pre>
     * Name of the registered output stream handler class.
     * </pre>
     *
     * <code>optional string output_stream_handler = 1 [default = "InOrderOutputStreamHandler"];</code>
     */
    public java.lang.String getOutputStreamHandler() {
      java.lang.Object ref = outputStreamHandler_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          outputStreamHandler_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     * Name of the registered output stream handler class.
     * </pre>
     *
     * <code>optional string output_stream_handler = 1 [default = "InOrderOutputStreamHandler"];</code>
     */
    public com.google.protobuf.ByteString
        getOutputStreamHandlerBytes() {
      java.lang.Object ref = outputStreamHandler_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        outputStreamHandler_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int INPUT_SIDE_PACKET_FIELD_NUMBER = 2;
    private com.google.protobuf.LazyStringList inputSidePacket_;
    /**
     * <pre>
     * Names of the input side packets for the handler specifically and distinct
     * from the side packets for the calculator (but could be shared).
     * </pre>
     *
     * <code>repeated string input_side_packet = 2;</code>
     */
    public com.google.protobuf.ProtocolStringList
        getInputSidePacketList() {
      return inputSidePacket_;
    }
    /**
     * <pre>
     * Names of the input side packets for the handler specifically and distinct
     * from the side packets for the calculator (but could be shared).
     * </pre>
     *
     * <code>repeated string input_side_packet = 2;</code>
     */
    public int getInputSidePacketCount() {
      return inputSidePacket_.size();
    }
    /**
     * <pre>
     * Names of the input side packets for the handler specifically and distinct
     * from the side packets for the calculator (but could be shared).
     * </pre>
     *
     * <code>repeated string input_side_packet = 2;</code>
     */
    public java.lang.String getInputSidePacket(int index) {
      return inputSidePacket_.get(index);
    }
    /**
     * <pre>
     * Names of the input side packets for the handler specifically and distinct
     * from the side packets for the calculator (but could be shared).
     * </pre>
     *
     * <code>repeated string input_side_packet = 2;</code>
     */
    public com.google.protobuf.ByteString
        getInputSidePacketBytes(int index) {
      return inputSidePacket_.getByteString(index);
    }

    public static final int OPTIONS_FIELD_NUMBER = 3;
    private mediapipe.MediapipeOptions.MediaPipeOptions options_;
    /**
     * <pre>
     * Options for the output stream handler.
     * </pre>
     *
     * <code>optional .mediapipe.MediaPipeOptions options = 3;</code>
     */
    public boolean hasOptions() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <pre>
     * Options for the output stream handler.
     * </pre>
     *
     * <code>optional .mediapipe.MediaPipeOptions options = 3;</code>
     */
    public mediapipe.MediapipeOptions.MediaPipeOptions getOptions() {
      return options_ == null ? mediapipe.MediapipeOptions.MediaPipeOptions.getDefaultInstance() : options_;
    }
    /**
     * <pre>
     * Options for the output stream handler.
     * </pre>
     *
     * <code>optional .mediapipe.MediaPipeOptions options = 3;</code>
     */
    public mediapipe.MediapipeOptions.MediaPipeOptionsOrBuilder getOptionsOrBuilder() {
      return options_ == null ? mediapipe.MediapipeOptions.MediaPipeOptions.getDefaultInstance() : options_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (hasOptions()) {
        if (!getOptions().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, outputStreamHandler_);
      }
      for (int i = 0; i < inputSidePacket_.size(); i++) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, inputSidePacket_.getRaw(i));
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(3, getOptions());
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, outputStreamHandler_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < inputSidePacket_.size(); i++) {
          dataSize += computeStringSizeNoTag(inputSidePacket_.getRaw(i));
        }
        size += dataSize;
        size += 1 * getInputSidePacketList().size();
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getOptions());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof mediapipe.StreamHandler.OutputStreamHandlerConfig)) {
        return super.equals(obj);
      }
      mediapipe.StreamHandler.OutputStreamHandlerConfig other = (mediapipe.StreamHandler.OutputStreamHandlerConfig) obj;

      boolean result = true;
      result = result && (hasOutputStreamHandler() == other.hasOutputStreamHandler());
      if (hasOutputStreamHandler()) {
        result = result && getOutputStreamHandler()
            .equals(other.getOutputStreamHandler());
      }
      result = result && getInputSidePacketList()
          .equals(other.getInputSidePacketList());
      result = result && (hasOptions() == other.hasOptions());
      if (hasOptions()) {
        result = result && getOptions()
            .equals(other.getOptions());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      if (hasOutputStreamHandler()) {
        hash = (37 * hash) + OUTPUT_STREAM_HANDLER_FIELD_NUMBER;
        hash = (53 * hash) + getOutputStreamHandler().hashCode();
      }
      if (getInputSidePacketCount() > 0) {
        hash = (37 * hash) + INPUT_SIDE_PACKET_FIELD_NUMBER;
        hash = (53 * hash) + getInputSidePacketList().hashCode();
      }
      if (hasOptions()) {
        hash = (37 * hash) + OPTIONS_FIELD_NUMBER;
        hash = (53 * hash) + getOptions().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static mediapipe.StreamHandler.OutputStreamHandlerConfig parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static mediapipe.StreamHandler.OutputStreamHandlerConfig parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static mediapipe.StreamHandler.OutputStreamHandlerConfig parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static mediapipe.StreamHandler.OutputStreamHandlerConfig parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static mediapipe.StreamHandler.OutputStreamHandlerConfig parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static mediapipe.StreamHandler.OutputStreamHandlerConfig parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static mediapipe.StreamHandler.OutputStreamHandlerConfig parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static mediapipe.StreamHandler.OutputStreamHandlerConfig parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static mediapipe.StreamHandler.OutputStreamHandlerConfig parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static mediapipe.StreamHandler.OutputStreamHandlerConfig parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(mediapipe.StreamHandler.OutputStreamHandlerConfig prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Settings specifying an output stream handler.
     * </pre>
     *
     * Protobuf type {@code mediapipe.OutputStreamHandlerConfig}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:mediapipe.OutputStreamHandlerConfig)
        mediapipe.StreamHandler.OutputStreamHandlerConfigOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return mediapipe.StreamHandler.internal_static_mediapipe_OutputStreamHandlerConfig_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return mediapipe.StreamHandler.internal_static_mediapipe_OutputStreamHandlerConfig_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                mediapipe.StreamHandler.OutputStreamHandlerConfig.class, mediapipe.StreamHandler.OutputStreamHandlerConfig.Builder.class);
      }

      // Construct using mediapipe.StreamHandler.OutputStreamHandlerConfig.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getOptionsFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        outputStreamHandler_ = "InOrderOutputStreamHandler";
        bitField0_ = (bitField0_ & ~0x00000001);
        inputSidePacket_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000002);
        if (optionsBuilder_ == null) {
          options_ = null;
        } else {
          optionsBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return mediapipe.StreamHandler.internal_static_mediapipe_OutputStreamHandlerConfig_descriptor;
      }

      public mediapipe.StreamHandler.OutputStreamHandlerConfig getDefaultInstanceForType() {
        return mediapipe.StreamHandler.OutputStreamHandlerConfig.getDefaultInstance();
      }

      public mediapipe.StreamHandler.OutputStreamHandlerConfig build() {
        mediapipe.StreamHandler.OutputStreamHandlerConfig result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public mediapipe.StreamHandler.OutputStreamHandlerConfig buildPartial() {
        mediapipe.StreamHandler.OutputStreamHandlerConfig result = new mediapipe.StreamHandler.OutputStreamHandlerConfig(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.outputStreamHandler_ = outputStreamHandler_;
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          inputSidePacket_ = inputSidePacket_.getUnmodifiableView();
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.inputSidePacket_ = inputSidePacket_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000002;
        }
        if (optionsBuilder_ == null) {
          result.options_ = options_;
        } else {
          result.options_ = optionsBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof mediapipe.StreamHandler.OutputStreamHandlerConfig) {
          return mergeFrom((mediapipe.StreamHandler.OutputStreamHandlerConfig)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(mediapipe.StreamHandler.OutputStreamHandlerConfig other) {
        if (other == mediapipe.StreamHandler.OutputStreamHandlerConfig.getDefaultInstance()) return this;
        if (other.hasOutputStreamHandler()) {
          bitField0_ |= 0x00000001;
          outputStreamHandler_ = other.outputStreamHandler_;
          onChanged();
        }
        if (!other.inputSidePacket_.isEmpty()) {
          if (inputSidePacket_.isEmpty()) {
            inputSidePacket_ = other.inputSidePacket_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureInputSidePacketIsMutable();
            inputSidePacket_.addAll(other.inputSidePacket_);
          }
          onChanged();
        }
        if (other.hasOptions()) {
          mergeOptions(other.getOptions());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        if (hasOptions()) {
          if (!getOptions().isInitialized()) {
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        mediapipe.StreamHandler.OutputStreamHandlerConfig parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (mediapipe.StreamHandler.OutputStreamHandlerConfig) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object outputStreamHandler_ = "InOrderOutputStreamHandler";
      /**
       * <pre>
       * Name of the registered output stream handler class.
       * </pre>
       *
       * <code>optional string output_stream_handler = 1 [default = "InOrderOutputStreamHandler"];</code>
       */
      public boolean hasOutputStreamHandler() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <pre>
       * Name of the registered output stream handler class.
       * </pre>
       *
       * <code>optional string output_stream_handler = 1 [default = "InOrderOutputStreamHandler"];</code>
       */
      public java.lang.String getOutputStreamHandler() {
        java.lang.Object ref = outputStreamHandler_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            outputStreamHandler_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Name of the registered output stream handler class.
       * </pre>
       *
       * <code>optional string output_stream_handler = 1 [default = "InOrderOutputStreamHandler"];</code>
       */
      public com.google.protobuf.ByteString
          getOutputStreamHandlerBytes() {
        java.lang.Object ref = outputStreamHandler_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          outputStreamHandler_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Name of the registered output stream handler class.
       * </pre>
       *
       * <code>optional string output_stream_handler = 1 [default = "InOrderOutputStreamHandler"];</code>
       */
      public Builder setOutputStreamHandler(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        outputStreamHandler_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Name of the registered output stream handler class.
       * </pre>
       *
       * <code>optional string output_stream_handler = 1 [default = "InOrderOutputStreamHandler"];</code>
       */
      public Builder clearOutputStreamHandler() {
        bitField0_ = (bitField0_ & ~0x00000001);
        outputStreamHandler_ = getDefaultInstance().getOutputStreamHandler();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Name of the registered output stream handler class.
       * </pre>
       *
       * <code>optional string output_stream_handler = 1 [default = "InOrderOutputStreamHandler"];</code>
       */
      public Builder setOutputStreamHandlerBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        outputStreamHandler_ = value;
        onChanged();
        return this;
      }

      private com.google.protobuf.LazyStringList inputSidePacket_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureInputSidePacketIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          inputSidePacket_ = new com.google.protobuf.LazyStringArrayList(inputSidePacket_);
          bitField0_ |= 0x00000002;
         }
      }
      /**
       * <pre>
       * Names of the input side packets for the handler specifically and distinct
       * from the side packets for the calculator (but could be shared).
       * </pre>
       *
       * <code>repeated string input_side_packet = 2;</code>
       */
      public com.google.protobuf.ProtocolStringList
          getInputSidePacketList() {
        return inputSidePacket_.getUnmodifiableView();
      }
      /**
       * <pre>
       * Names of the input side packets for the handler specifically and distinct
       * from the side packets for the calculator (but could be shared).
       * </pre>
       *
       * <code>repeated string input_side_packet = 2;</code>
       */
      public int getInputSidePacketCount() {
        return inputSidePacket_.size();
      }
      /**
       * <pre>
       * Names of the input side packets for the handler specifically and distinct
       * from the side packets for the calculator (but could be shared).
       * </pre>
       *
       * <code>repeated string input_side_packet = 2;</code>
       */
      public java.lang.String getInputSidePacket(int index) {
        return inputSidePacket_.get(index);
      }
      /**
       * <pre>
       * Names of the input side packets for the handler specifically and distinct
       * from the side packets for the calculator (but could be shared).
       * </pre>
       *
       * <code>repeated string input_side_packet = 2;</code>
       */
      public com.google.protobuf.ByteString
          getInputSidePacketBytes(int index) {
        return inputSidePacket_.getByteString(index);
      }
      /**
       * <pre>
       * Names of the input side packets for the handler specifically and distinct
       * from the side packets for the calculator (but could be shared).
       * </pre>
       *
       * <code>repeated string input_side_packet = 2;</code>
       */
      public Builder setInputSidePacket(
          int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureInputSidePacketIsMutable();
        inputSidePacket_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Names of the input side packets for the handler specifically and distinct
       * from the side packets for the calculator (but could be shared).
       * </pre>
       *
       * <code>repeated string input_side_packet = 2;</code>
       */
      public Builder addInputSidePacket(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureInputSidePacketIsMutable();
        inputSidePacket_.add(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Names of the input side packets for the handler specifically and distinct
       * from the side packets for the calculator (but could be shared).
       * </pre>
       *
       * <code>repeated string input_side_packet = 2;</code>
       */
      public Builder addAllInputSidePacket(
          java.lang.Iterable<java.lang.String> values) {
        ensureInputSidePacketIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, inputSidePacket_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Names of the input side packets for the handler specifically and distinct
       * from the side packets for the calculator (but could be shared).
       * </pre>
       *
       * <code>repeated string input_side_packet = 2;</code>
       */
      public Builder clearInputSidePacket() {
        inputSidePacket_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Names of the input side packets for the handler specifically and distinct
       * from the side packets for the calculator (but could be shared).
       * </pre>
       *
       * <code>repeated string input_side_packet = 2;</code>
       */
      public Builder addInputSidePacketBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureInputSidePacketIsMutable();
        inputSidePacket_.add(value);
        onChanged();
        return this;
      }

      private mediapipe.MediapipeOptions.MediaPipeOptions options_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          mediapipe.MediapipeOptions.MediaPipeOptions, mediapipe.MediapipeOptions.MediaPipeOptions.Builder, mediapipe.MediapipeOptions.MediaPipeOptionsOrBuilder> optionsBuilder_;
      /**
       * <pre>
       * Options for the output stream handler.
       * </pre>
       *
       * <code>optional .mediapipe.MediaPipeOptions options = 3;</code>
       */
      public boolean hasOptions() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <pre>
       * Options for the output stream handler.
       * </pre>
       *
       * <code>optional .mediapipe.MediaPipeOptions options = 3;</code>
       */
      public mediapipe.MediapipeOptions.MediaPipeOptions getOptions() {
        if (optionsBuilder_ == null) {
          return options_ == null ? mediapipe.MediapipeOptions.MediaPipeOptions.getDefaultInstance() : options_;
        } else {
          return optionsBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Options for the output stream handler.
       * </pre>
       *
       * <code>optional .mediapipe.MediaPipeOptions options = 3;</code>
       */
      public Builder setOptions(mediapipe.MediapipeOptions.MediaPipeOptions value) {
        if (optionsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          options_ = value;
          onChanged();
        } else {
          optionsBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <pre>
       * Options for the output stream handler.
       * </pre>
       *
       * <code>optional .mediapipe.MediaPipeOptions options = 3;</code>
       */
      public Builder setOptions(
          mediapipe.MediapipeOptions.MediaPipeOptions.Builder builderForValue) {
        if (optionsBuilder_ == null) {
          options_ = builderForValue.build();
          onChanged();
        } else {
          optionsBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <pre>
       * Options for the output stream handler.
       * </pre>
       *
       * <code>optional .mediapipe.MediaPipeOptions options = 3;</code>
       */
      public Builder mergeOptions(mediapipe.MediapipeOptions.MediaPipeOptions value) {
        if (optionsBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004) &&
              options_ != null &&
              options_ != mediapipe.MediapipeOptions.MediaPipeOptions.getDefaultInstance()) {
            options_ =
              mediapipe.MediapipeOptions.MediaPipeOptions.newBuilder(options_).mergeFrom(value).buildPartial();
          } else {
            options_ = value;
          }
          onChanged();
        } else {
          optionsBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <pre>
       * Options for the output stream handler.
       * </pre>
       *
       * <code>optional .mediapipe.MediaPipeOptions options = 3;</code>
       */
      public Builder clearOptions() {
        if (optionsBuilder_ == null) {
          options_ = null;
          onChanged();
        } else {
          optionsBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      /**
       * <pre>
       * Options for the output stream handler.
       * </pre>
       *
       * <code>optional .mediapipe.MediaPipeOptions options = 3;</code>
       */
      public mediapipe.MediapipeOptions.MediaPipeOptions.Builder getOptionsBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getOptionsFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Options for the output stream handler.
       * </pre>
       *
       * <code>optional .mediapipe.MediaPipeOptions options = 3;</code>
       */
      public mediapipe.MediapipeOptions.MediaPipeOptionsOrBuilder getOptionsOrBuilder() {
        if (optionsBuilder_ != null) {
          return optionsBuilder_.getMessageOrBuilder();
        } else {
          return options_ == null ?
              mediapipe.MediapipeOptions.MediaPipeOptions.getDefaultInstance() : options_;
        }
      }
      /**
       * <pre>
       * Options for the output stream handler.
       * </pre>
       *
       * <code>optional .mediapipe.MediaPipeOptions options = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          mediapipe.MediapipeOptions.MediaPipeOptions, mediapipe.MediapipeOptions.MediaPipeOptions.Builder, mediapipe.MediapipeOptions.MediaPipeOptionsOrBuilder> 
          getOptionsFieldBuilder() {
        if (optionsBuilder_ == null) {
          optionsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              mediapipe.MediapipeOptions.MediaPipeOptions, mediapipe.MediapipeOptions.MediaPipeOptions.Builder, mediapipe.MediapipeOptions.MediaPipeOptionsOrBuilder>(
                  getOptions(),
                  getParentForChildren(),
                  isClean());
          options_ = null;
        }
        return optionsBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:mediapipe.OutputStreamHandlerConfig)
    }

    // @@protoc_insertion_point(class_scope:mediapipe.OutputStreamHandlerConfig)
    private static final mediapipe.StreamHandler.OutputStreamHandlerConfig DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new mediapipe.StreamHandler.OutputStreamHandlerConfig();
    }

    public static mediapipe.StreamHandler.OutputStreamHandlerConfig getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<OutputStreamHandlerConfig>
        PARSER = new com.google.protobuf.AbstractParser<OutputStreamHandlerConfig>() {
      public OutputStreamHandlerConfig parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new OutputStreamHandlerConfig(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<OutputStreamHandlerConfig> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<OutputStreamHandlerConfig> getParserForType() {
      return PARSER;
    }

    public mediapipe.StreamHandler.OutputStreamHandlerConfig getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_mediapipe_InputStreamHandlerConfig_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_mediapipe_InputStreamHandlerConfig_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_mediapipe_OutputStreamHandlerConfig_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_mediapipe_OutputStreamHandlerConfig_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n(mediapipe/framework/stream_handler.pro" +
      "to\022\tmediapipe\032+mediapipe/framework/media" +
      "pipe_options.proto\"\201\001\n\030InputStreamHandle" +
      "rConfig\0227\n\024input_stream_handler\030\001 \001(\t:\031D" +
      "efaultInputStreamHandler\022,\n\007options\030\003 \001(" +
      "\0132\033.mediapipe.MediaPipeOptions\"\237\001\n\031Outpu" +
      "tStreamHandlerConfig\0229\n\025output_stream_ha" +
      "ndler\030\001 \001(\t:\032InOrderOutputStreamHandler\022" +
      "\031\n\021input_side_packet\030\002 \003(\t\022,\n\007options\030\003 " +
      "\001(\0132\033.mediapipe.MediaPipeOptions"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          mediapipe.MediapipeOptions.getDescriptor(),
        }, assigner);
    internal_static_mediapipe_InputStreamHandlerConfig_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_mediapipe_InputStreamHandlerConfig_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_mediapipe_InputStreamHandlerConfig_descriptor,
        new java.lang.String[] { "InputStreamHandler", "Options", });
    internal_static_mediapipe_OutputStreamHandlerConfig_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_mediapipe_OutputStreamHandlerConfig_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_mediapipe_OutputStreamHandlerConfig_descriptor,
        new java.lang.String[] { "OutputStreamHandler", "InputSidePacket", "Options", });
    mediapipe.MediapipeOptions.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
