// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: mediapipe/framework/calculator_profile.proto

package com.google.mediapipe.proto;

public final class CalculatorProfileProto {
  private CalculatorProfileProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface TimeHistogramOrBuilder extends
      // @@protoc_insertion_point(interface_extends:mediapipe.TimeHistogram)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Total time (in microseconds).
     * </pre>
     *
     * <code>optional int64 total = 1 [default = 0];</code>
     */
    boolean hasTotal();
    /**
     * <pre>
     * Total time (in microseconds).
     * </pre>
     *
     * <code>optional int64 total = 1 [default = 0];</code>
     */
    long getTotal();

    /**
     * <pre>
     * Size of the runtimes histogram intervals (in microseconds) to generate the
     * histogram of the Process() time. The last interval extends to +inf.
     * </pre>
     *
     * <code>optional int64 interval_size_usec = 2 [default = 1000000];</code>
     */
    boolean hasIntervalSizeUsec();
    /**
     * <pre>
     * Size of the runtimes histogram intervals (in microseconds) to generate the
     * histogram of the Process() time. The last interval extends to +inf.
     * </pre>
     *
     * <code>optional int64 interval_size_usec = 2 [default = 1000000];</code>
     */
    long getIntervalSizeUsec();

    /**
     * <pre>
     * Number of intervals to generate the histogram of the Process() runtime.
     * </pre>
     *
     * <code>optional int64 num_intervals = 3 [default = 1];</code>
     */
    boolean hasNumIntervals();
    /**
     * <pre>
     * Number of intervals to generate the histogram of the Process() runtime.
     * </pre>
     *
     * <code>optional int64 num_intervals = 3 [default = 1];</code>
     */
    long getNumIntervals();

    /**
     * <pre>
     * Number of calls in each interval.
     * </pre>
     *
     * <code>repeated int64 count = 4;</code>
     */
    java.util.List<java.lang.Long> getCountList();
    /**
     * <pre>
     * Number of calls in each interval.
     * </pre>
     *
     * <code>repeated int64 count = 4;</code>
     */
    int getCountCount();
    /**
     * <pre>
     * Number of calls in each interval.
     * </pre>
     *
     * <code>repeated int64 count = 4;</code>
     */
    long getCount(int index);
  }
  /**
   * <pre>
   * Stores the profiling information.
   * It is the responsibility of the user of this message to make sure the 'total'
   * field and the interval information (num, size and count) are in a valid
   * state and all get updated together.
   * Each interval of the histogram is closed on the lower range and open on the
   * higher end. An example histogram with interval_size=1000 and num_interval=3
   * will have the following intervals:
   * - First interval = [0, 1000)
   * - Second interval = [1000, 2000)
   * - Third interval = [2000, +inf)
   * IMPORTANT: If You add any new field, update CalculatorProfiler::Reset()
   * accordingly.
   * </pre>
   *
   * Protobuf type {@code mediapipe.TimeHistogram}
   */
  public  static final class TimeHistogram extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:mediapipe.TimeHistogram)
      TimeHistogramOrBuilder {
    // Use TimeHistogram.newBuilder() to construct.
    private TimeHistogram(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private TimeHistogram() {
      total_ = 0L;
      intervalSizeUsec_ = 1000000L;
      numIntervals_ = 1L;
      count_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private TimeHistogram(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              total_ = input.readInt64();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              intervalSizeUsec_ = input.readInt64();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              numIntervals_ = input.readInt64();
              break;
            }
            case 32: {
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                count_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x00000008;
              }
              count_.add(input.readInt64());
              break;
            }
            case 34: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008) && input.getBytesUntilLimit() > 0) {
                count_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x00000008;
              }
              while (input.getBytesUntilLimit() > 0) {
                count_.add(input.readInt64());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
          count_ = java.util.Collections.unmodifiableList(count_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.google.mediapipe.proto.CalculatorProfileProto.internal_static_mediapipe_TimeHistogram_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.mediapipe.proto.CalculatorProfileProto.internal_static_mediapipe_TimeHistogram_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.mediapipe.proto.CalculatorProfileProto.TimeHistogram.class, com.google.mediapipe.proto.CalculatorProfileProto.TimeHistogram.Builder.class);
    }

    private int bitField0_;
    public static final int TOTAL_FIELD_NUMBER = 1;
    private long total_;
    /**
     * <pre>
     * Total time (in microseconds).
     * </pre>
     *
     * <code>optional int64 total = 1 [default = 0];</code>
     */
    public boolean hasTotal() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <pre>
     * Total time (in microseconds).
     * </pre>
     *
     * <code>optional int64 total = 1 [default = 0];</code>
     */
    public long getTotal() {
      return total_;
    }

    public static final int INTERVAL_SIZE_USEC_FIELD_NUMBER = 2;
    private long intervalSizeUsec_;
    /**
     * <pre>
     * Size of the runtimes histogram intervals (in microseconds) to generate the
     * histogram of the Process() time. The last interval extends to +inf.
     * </pre>
     *
     * <code>optional int64 interval_size_usec = 2 [default = 1000000];</code>
     */
    public boolean hasIntervalSizeUsec() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <pre>
     * Size of the runtimes histogram intervals (in microseconds) to generate the
     * histogram of the Process() time. The last interval extends to +inf.
     * </pre>
     *
     * <code>optional int64 interval_size_usec = 2 [default = 1000000];</code>
     */
    public long getIntervalSizeUsec() {
      return intervalSizeUsec_;
    }

    public static final int NUM_INTERVALS_FIELD_NUMBER = 3;
    private long numIntervals_;
    /**
     * <pre>
     * Number of intervals to generate the histogram of the Process() runtime.
     * </pre>
     *
     * <code>optional int64 num_intervals = 3 [default = 1];</code>
     */
    public boolean hasNumIntervals() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <pre>
     * Number of intervals to generate the histogram of the Process() runtime.
     * </pre>
     *
     * <code>optional int64 num_intervals = 3 [default = 1];</code>
     */
    public long getNumIntervals() {
      return numIntervals_;
    }

    public static final int COUNT_FIELD_NUMBER = 4;
    private java.util.List<java.lang.Long> count_;
    /**
     * <pre>
     * Number of calls in each interval.
     * </pre>
     *
     * <code>repeated int64 count = 4;</code>
     */
    public java.util.List<java.lang.Long>
        getCountList() {
      return count_;
    }
    /**
     * <pre>
     * Number of calls in each interval.
     * </pre>
     *
     * <code>repeated int64 count = 4;</code>
     */
    public int getCountCount() {
      return count_.size();
    }
    /**
     * <pre>
     * Number of calls in each interval.
     * </pre>
     *
     * <code>repeated int64 count = 4;</code>
     */
    public long getCount(int index) {
      return count_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt64(1, total_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt64(2, intervalSizeUsec_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt64(3, numIntervals_);
      }
      for (int i = 0; i < count_.size(); i++) {
        output.writeInt64(4, count_.get(i));
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, total_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(2, intervalSizeUsec_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(3, numIntervals_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < count_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt64SizeNoTag(count_.get(i));
        }
        size += dataSize;
        size += 1 * getCountList().size();
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.google.mediapipe.proto.CalculatorProfileProto.TimeHistogram)) {
        return super.equals(obj);
      }
      com.google.mediapipe.proto.CalculatorProfileProto.TimeHistogram other = (com.google.mediapipe.proto.CalculatorProfileProto.TimeHistogram) obj;

      boolean result = true;
      result = result && (hasTotal() == other.hasTotal());
      if (hasTotal()) {
        result = result && (getTotal()
            == other.getTotal());
      }
      result = result && (hasIntervalSizeUsec() == other.hasIntervalSizeUsec());
      if (hasIntervalSizeUsec()) {
        result = result && (getIntervalSizeUsec()
            == other.getIntervalSizeUsec());
      }
      result = result && (hasNumIntervals() == other.hasNumIntervals());
      if (hasNumIntervals()) {
        result = result && (getNumIntervals()
            == other.getNumIntervals());
      }
      result = result && getCountList()
          .equals(other.getCountList());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      if (hasTotal()) {
        hash = (37 * hash) + TOTAL_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getTotal());
      }
      if (hasIntervalSizeUsec()) {
        hash = (37 * hash) + INTERVAL_SIZE_USEC_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getIntervalSizeUsec());
      }
      if (hasNumIntervals()) {
        hash = (37 * hash) + NUM_INTERVALS_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getNumIntervals());
      }
      if (getCountCount() > 0) {
        hash = (37 * hash) + COUNT_FIELD_NUMBER;
        hash = (53 * hash) + getCountList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.google.mediapipe.proto.CalculatorProfileProto.TimeHistogram parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.mediapipe.proto.CalculatorProfileProto.TimeHistogram parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.mediapipe.proto.CalculatorProfileProto.TimeHistogram parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.mediapipe.proto.CalculatorProfileProto.TimeHistogram parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.mediapipe.proto.CalculatorProfileProto.TimeHistogram parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.google.mediapipe.proto.CalculatorProfileProto.TimeHistogram parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.google.mediapipe.proto.CalculatorProfileProto.TimeHistogram parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.google.mediapipe.proto.CalculatorProfileProto.TimeHistogram parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.google.mediapipe.proto.CalculatorProfileProto.TimeHistogram parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.google.mediapipe.proto.CalculatorProfileProto.TimeHistogram parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.google.mediapipe.proto.CalculatorProfileProto.TimeHistogram prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Stores the profiling information.
     * It is the responsibility of the user of this message to make sure the 'total'
     * field and the interval information (num, size and count) are in a valid
     * state and all get updated together.
     * Each interval of the histogram is closed on the lower range and open on the
     * higher end. An example histogram with interval_size=1000 and num_interval=3
     * will have the following intervals:
     * - First interval = [0, 1000)
     * - Second interval = [1000, 2000)
     * - Third interval = [2000, +inf)
     * IMPORTANT: If You add any new field, update CalculatorProfiler::Reset()
     * accordingly.
     * </pre>
     *
     * Protobuf type {@code mediapipe.TimeHistogram}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:mediapipe.TimeHistogram)
        com.google.mediapipe.proto.CalculatorProfileProto.TimeHistogramOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.google.mediapipe.proto.CalculatorProfileProto.internal_static_mediapipe_TimeHistogram_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.google.mediapipe.proto.CalculatorProfileProto.internal_static_mediapipe_TimeHistogram_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.google.mediapipe.proto.CalculatorProfileProto.TimeHistogram.class, com.google.mediapipe.proto.CalculatorProfileProto.TimeHistogram.Builder.class);
      }

      // Construct using com.google.mediapipe.proto.CalculatorProfileProto.TimeHistogram.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        total_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        intervalSizeUsec_ = 1000000L;
        bitField0_ = (bitField0_ & ~0x00000002);
        numIntervals_ = 1L;
        bitField0_ = (bitField0_ & ~0x00000004);
        count_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.google.mediapipe.proto.CalculatorProfileProto.internal_static_mediapipe_TimeHistogram_descriptor;
      }

      public com.google.mediapipe.proto.CalculatorProfileProto.TimeHistogram getDefaultInstanceForType() {
        return com.google.mediapipe.proto.CalculatorProfileProto.TimeHistogram.getDefaultInstance();
      }

      public com.google.mediapipe.proto.CalculatorProfileProto.TimeHistogram build() {
        com.google.mediapipe.proto.CalculatorProfileProto.TimeHistogram result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.google.mediapipe.proto.CalculatorProfileProto.TimeHistogram buildPartial() {
        com.google.mediapipe.proto.CalculatorProfileProto.TimeHistogram result = new com.google.mediapipe.proto.CalculatorProfileProto.TimeHistogram(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.total_ = total_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.intervalSizeUsec_ = intervalSizeUsec_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.numIntervals_ = numIntervals_;
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          count_ = java.util.Collections.unmodifiableList(count_);
          bitField0_ = (bitField0_ & ~0x00000008);
        }
        result.count_ = count_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.google.mediapipe.proto.CalculatorProfileProto.TimeHistogram) {
          return mergeFrom((com.google.mediapipe.proto.CalculatorProfileProto.TimeHistogram)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.google.mediapipe.proto.CalculatorProfileProto.TimeHistogram other) {
        if (other == com.google.mediapipe.proto.CalculatorProfileProto.TimeHistogram.getDefaultInstance()) return this;
        if (other.hasTotal()) {
          setTotal(other.getTotal());
        }
        if (other.hasIntervalSizeUsec()) {
          setIntervalSizeUsec(other.getIntervalSizeUsec());
        }
        if (other.hasNumIntervals()) {
          setNumIntervals(other.getNumIntervals());
        }
        if (!other.count_.isEmpty()) {
          if (count_.isEmpty()) {
            count_ = other.count_;
            bitField0_ = (bitField0_ & ~0x00000008);
          } else {
            ensureCountIsMutable();
            count_.addAll(other.count_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.mediapipe.proto.CalculatorProfileProto.TimeHistogram parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.google.mediapipe.proto.CalculatorProfileProto.TimeHistogram) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private long total_ ;
      /**
       * <pre>
       * Total time (in microseconds).
       * </pre>
       *
       * <code>optional int64 total = 1 [default = 0];</code>
       */
      public boolean hasTotal() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <pre>
       * Total time (in microseconds).
       * </pre>
       *
       * <code>optional int64 total = 1 [default = 0];</code>
       */
      public long getTotal() {
        return total_;
      }
      /**
       * <pre>
       * Total time (in microseconds).
       * </pre>
       *
       * <code>optional int64 total = 1 [default = 0];</code>
       */
      public Builder setTotal(long value) {
        bitField0_ |= 0x00000001;
        total_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Total time (in microseconds).
       * </pre>
       *
       * <code>optional int64 total = 1 [default = 0];</code>
       */
      public Builder clearTotal() {
        bitField0_ = (bitField0_ & ~0x00000001);
        total_ = 0L;
        onChanged();
        return this;
      }

      private long intervalSizeUsec_ = 1000000L;
      /**
       * <pre>
       * Size of the runtimes histogram intervals (in microseconds) to generate the
       * histogram of the Process() time. The last interval extends to +inf.
       * </pre>
       *
       * <code>optional int64 interval_size_usec = 2 [default = 1000000];</code>
       */
      public boolean hasIntervalSizeUsec() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <pre>
       * Size of the runtimes histogram intervals (in microseconds) to generate the
       * histogram of the Process() time. The last interval extends to +inf.
       * </pre>
       *
       * <code>optional int64 interval_size_usec = 2 [default = 1000000];</code>
       */
      public long getIntervalSizeUsec() {
        return intervalSizeUsec_;
      }
      /**
       * <pre>
       * Size of the runtimes histogram intervals (in microseconds) to generate the
       * histogram of the Process() time. The last interval extends to +inf.
       * </pre>
       *
       * <code>optional int64 interval_size_usec = 2 [default = 1000000];</code>
       */
      public Builder setIntervalSizeUsec(long value) {
        bitField0_ |= 0x00000002;
        intervalSizeUsec_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Size of the runtimes histogram intervals (in microseconds) to generate the
       * histogram of the Process() time. The last interval extends to +inf.
       * </pre>
       *
       * <code>optional int64 interval_size_usec = 2 [default = 1000000];</code>
       */
      public Builder clearIntervalSizeUsec() {
        bitField0_ = (bitField0_ & ~0x00000002);
        intervalSizeUsec_ = 1000000L;
        onChanged();
        return this;
      }

      private long numIntervals_ = 1L;
      /**
       * <pre>
       * Number of intervals to generate the histogram of the Process() runtime.
       * </pre>
       *
       * <code>optional int64 num_intervals = 3 [default = 1];</code>
       */
      public boolean hasNumIntervals() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <pre>
       * Number of intervals to generate the histogram of the Process() runtime.
       * </pre>
       *
       * <code>optional int64 num_intervals = 3 [default = 1];</code>
       */
      public long getNumIntervals() {
        return numIntervals_;
      }
      /**
       * <pre>
       * Number of intervals to generate the histogram of the Process() runtime.
       * </pre>
       *
       * <code>optional int64 num_intervals = 3 [default = 1];</code>
       */
      public Builder setNumIntervals(long value) {
        bitField0_ |= 0x00000004;
        numIntervals_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Number of intervals to generate the histogram of the Process() runtime.
       * </pre>
       *
       * <code>optional int64 num_intervals = 3 [default = 1];</code>
       */
      public Builder clearNumIntervals() {
        bitField0_ = (bitField0_ & ~0x00000004);
        numIntervals_ = 1L;
        onChanged();
        return this;
      }

      private java.util.List<java.lang.Long> count_ = java.util.Collections.emptyList();
      private void ensureCountIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          count_ = new java.util.ArrayList<java.lang.Long>(count_);
          bitField0_ |= 0x00000008;
         }
      }
      /**
       * <pre>
       * Number of calls in each interval.
       * </pre>
       *
       * <code>repeated int64 count = 4;</code>
       */
      public java.util.List<java.lang.Long>
          getCountList() {
        return java.util.Collections.unmodifiableList(count_);
      }
      /**
       * <pre>
       * Number of calls in each interval.
       * </pre>
       *
       * <code>repeated int64 count = 4;</code>
       */
      public int getCountCount() {
        return count_.size();
      }
      /**
       * <pre>
       * Number of calls in each interval.
       * </pre>
       *
       * <code>repeated int64 count = 4;</code>
       */
      public long getCount(int index) {
        return count_.get(index);
      }
      /**
       * <pre>
       * Number of calls in each interval.
       * </pre>
       *
       * <code>repeated int64 count = 4;</code>
       */
      public Builder setCount(
          int index, long value) {
        ensureCountIsMutable();
        count_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Number of calls in each interval.
       * </pre>
       *
       * <code>repeated int64 count = 4;</code>
       */
      public Builder addCount(long value) {
        ensureCountIsMutable();
        count_.add(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Number of calls in each interval.
       * </pre>
       *
       * <code>repeated int64 count = 4;</code>
       */
      public Builder addAllCount(
          java.lang.Iterable<? extends java.lang.Long> values) {
        ensureCountIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, count_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Number of calls in each interval.
       * </pre>
       *
       * <code>repeated int64 count = 4;</code>
       */
      public Builder clearCount() {
        count_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:mediapipe.TimeHistogram)
    }

    // @@protoc_insertion_point(class_scope:mediapipe.TimeHistogram)
    private static final com.google.mediapipe.proto.CalculatorProfileProto.TimeHistogram DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.google.mediapipe.proto.CalculatorProfileProto.TimeHistogram();
    }

    public static com.google.mediapipe.proto.CalculatorProfileProto.TimeHistogram getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<TimeHistogram>
        PARSER = new com.google.protobuf.AbstractParser<TimeHistogram>() {
      public TimeHistogram parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new TimeHistogram(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<TimeHistogram> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<TimeHistogram> getParserForType() {
      return PARSER;
    }

    public com.google.mediapipe.proto.CalculatorProfileProto.TimeHistogram getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface StreamProfileOrBuilder extends
      // @@protoc_insertion_point(interface_extends:mediapipe.StreamProfile)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Stream name.
     * </pre>
     *
     * <code>optional string name = 1;</code>
     */
    boolean hasName();
    /**
     * <pre>
     * Stream name.
     * </pre>
     *
     * <code>optional string name = 1;</code>
     */
    java.lang.String getName();
    /**
     * <pre>
     * Stream name.
     * </pre>
     *
     * <code>optional string name = 1;</code>
     */
    com.google.protobuf.ByteString
        getNameBytes();

    /**
     * <pre>
     * If true, than this is a back edge input stream and won't be profiled.
     * </pre>
     *
     * <code>optional bool back_edge = 2 [default = false];</code>
     */
    boolean hasBackEdge();
    /**
     * <pre>
     * If true, than this is a back edge input stream and won't be profiled.
     * </pre>
     *
     * <code>optional bool back_edge = 2 [default = false];</code>
     */
    boolean getBackEdge();

    /**
     * <pre>
     * Total and histogram of the time that this stream took.
     * </pre>
     *
     * <code>optional .mediapipe.TimeHistogram latency = 3;</code>
     */
    boolean hasLatency();
    /**
     * <pre>
     * Total and histogram of the time that this stream took.
     * </pre>
     *
     * <code>optional .mediapipe.TimeHistogram latency = 3;</code>
     */
    com.google.mediapipe.proto.CalculatorProfileProto.TimeHistogram getLatency();
    /**
     * <pre>
     * Total and histogram of the time that this stream took.
     * </pre>
     *
     * <code>optional .mediapipe.TimeHistogram latency = 3;</code>
     */
    com.google.mediapipe.proto.CalculatorProfileProto.TimeHistogramOrBuilder getLatencyOrBuilder();
  }
  /**
   * <pre>
   * Stores the profiling information of a stream.
   * </pre>
   *
   * Protobuf type {@code mediapipe.StreamProfile}
   */
  public  static final class StreamProfile extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:mediapipe.StreamProfile)
      StreamProfileOrBuilder {
    // Use StreamProfile.newBuilder() to construct.
    private StreamProfile(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private StreamProfile() {
      name_ = "";
      backEdge_ = false;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private StreamProfile(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000001;
              name_ = bs;
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              backEdge_ = input.readBool();
              break;
            }
            case 26: {
              com.google.mediapipe.proto.CalculatorProfileProto.TimeHistogram.Builder subBuilder = null;
              if (((bitField0_ & 0x00000004) == 0x00000004)) {
                subBuilder = latency_.toBuilder();
              }
              latency_ = input.readMessage(com.google.mediapipe.proto.CalculatorProfileProto.TimeHistogram.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(latency_);
                latency_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000004;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.google.mediapipe.proto.CalculatorProfileProto.internal_static_mediapipe_StreamProfile_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.mediapipe.proto.CalculatorProfileProto.internal_static_mediapipe_StreamProfile_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.mediapipe.proto.CalculatorProfileProto.StreamProfile.class, com.google.mediapipe.proto.CalculatorProfileProto.StreamProfile.Builder.class);
    }

    private int bitField0_;
    public static final int NAME_FIELD_NUMBER = 1;
    private volatile java.lang.Object name_;
    /**
     * <pre>
     * Stream name.
     * </pre>
     *
     * <code>optional string name = 1;</code>
     */
    public boolean hasName() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <pre>
     * Stream name.
     * </pre>
     *
     * <code>optional string name = 1;</code>
     */
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          name_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     * Stream name.
     * </pre>
     *
     * <code>optional string name = 1;</code>
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int BACK_EDGE_FIELD_NUMBER = 2;
    private boolean backEdge_;
    /**
     * <pre>
     * If true, than this is a back edge input stream and won't be profiled.
     * </pre>
     *
     * <code>optional bool back_edge = 2 [default = false];</code>
     */
    public boolean hasBackEdge() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <pre>
     * If true, than this is a back edge input stream and won't be profiled.
     * </pre>
     *
     * <code>optional bool back_edge = 2 [default = false];</code>
     */
    public boolean getBackEdge() {
      return backEdge_;
    }

    public static final int LATENCY_FIELD_NUMBER = 3;
    private com.google.mediapipe.proto.CalculatorProfileProto.TimeHistogram latency_;
    /**
     * <pre>
     * Total and histogram of the time that this stream took.
     * </pre>
     *
     * <code>optional .mediapipe.TimeHistogram latency = 3;</code>
     */
    public boolean hasLatency() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <pre>
     * Total and histogram of the time that this stream took.
     * </pre>
     *
     * <code>optional .mediapipe.TimeHistogram latency = 3;</code>
     */
    public com.google.mediapipe.proto.CalculatorProfileProto.TimeHistogram getLatency() {
      return latency_ == null ? com.google.mediapipe.proto.CalculatorProfileProto.TimeHistogram.getDefaultInstance() : latency_;
    }
    /**
     * <pre>
     * Total and histogram of the time that this stream took.
     * </pre>
     *
     * <code>optional .mediapipe.TimeHistogram latency = 3;</code>
     */
    public com.google.mediapipe.proto.CalculatorProfileProto.TimeHistogramOrBuilder getLatencyOrBuilder() {
      return latency_ == null ? com.google.mediapipe.proto.CalculatorProfileProto.TimeHistogram.getDefaultInstance() : latency_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, name_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBool(2, backEdge_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeMessage(3, getLatency());
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, name_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(2, backEdge_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getLatency());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.google.mediapipe.proto.CalculatorProfileProto.StreamProfile)) {
        return super.equals(obj);
      }
      com.google.mediapipe.proto.CalculatorProfileProto.StreamProfile other = (com.google.mediapipe.proto.CalculatorProfileProto.StreamProfile) obj;

      boolean result = true;
      result = result && (hasName() == other.hasName());
      if (hasName()) {
        result = result && getName()
            .equals(other.getName());
      }
      result = result && (hasBackEdge() == other.hasBackEdge());
      if (hasBackEdge()) {
        result = result && (getBackEdge()
            == other.getBackEdge());
      }
      result = result && (hasLatency() == other.hasLatency());
      if (hasLatency()) {
        result = result && getLatency()
            .equals(other.getLatency());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      if (hasName()) {
        hash = (37 * hash) + NAME_FIELD_NUMBER;
        hash = (53 * hash) + getName().hashCode();
      }
      if (hasBackEdge()) {
        hash = (37 * hash) + BACK_EDGE_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getBackEdge());
      }
      if (hasLatency()) {
        hash = (37 * hash) + LATENCY_FIELD_NUMBER;
        hash = (53 * hash) + getLatency().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.google.mediapipe.proto.CalculatorProfileProto.StreamProfile parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.mediapipe.proto.CalculatorProfileProto.StreamProfile parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.mediapipe.proto.CalculatorProfileProto.StreamProfile parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.mediapipe.proto.CalculatorProfileProto.StreamProfile parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.mediapipe.proto.CalculatorProfileProto.StreamProfile parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.google.mediapipe.proto.CalculatorProfileProto.StreamProfile parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.google.mediapipe.proto.CalculatorProfileProto.StreamProfile parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.google.mediapipe.proto.CalculatorProfileProto.StreamProfile parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.google.mediapipe.proto.CalculatorProfileProto.StreamProfile parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.google.mediapipe.proto.CalculatorProfileProto.StreamProfile parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.google.mediapipe.proto.CalculatorProfileProto.StreamProfile prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Stores the profiling information of a stream.
     * </pre>
     *
     * Protobuf type {@code mediapipe.StreamProfile}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:mediapipe.StreamProfile)
        com.google.mediapipe.proto.CalculatorProfileProto.StreamProfileOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.google.mediapipe.proto.CalculatorProfileProto.internal_static_mediapipe_StreamProfile_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.google.mediapipe.proto.CalculatorProfileProto.internal_static_mediapipe_StreamProfile_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.google.mediapipe.proto.CalculatorProfileProto.StreamProfile.class, com.google.mediapipe.proto.CalculatorProfileProto.StreamProfile.Builder.class);
      }

      // Construct using com.google.mediapipe.proto.CalculatorProfileProto.StreamProfile.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getLatencyFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        name_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        backEdge_ = false;
        bitField0_ = (bitField0_ & ~0x00000002);
        if (latencyBuilder_ == null) {
          latency_ = null;
        } else {
          latencyBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.google.mediapipe.proto.CalculatorProfileProto.internal_static_mediapipe_StreamProfile_descriptor;
      }

      public com.google.mediapipe.proto.CalculatorProfileProto.StreamProfile getDefaultInstanceForType() {
        return com.google.mediapipe.proto.CalculatorProfileProto.StreamProfile.getDefaultInstance();
      }

      public com.google.mediapipe.proto.CalculatorProfileProto.StreamProfile build() {
        com.google.mediapipe.proto.CalculatorProfileProto.StreamProfile result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.google.mediapipe.proto.CalculatorProfileProto.StreamProfile buildPartial() {
        com.google.mediapipe.proto.CalculatorProfileProto.StreamProfile result = new com.google.mediapipe.proto.CalculatorProfileProto.StreamProfile(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.name_ = name_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.backEdge_ = backEdge_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        if (latencyBuilder_ == null) {
          result.latency_ = latency_;
        } else {
          result.latency_ = latencyBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.google.mediapipe.proto.CalculatorProfileProto.StreamProfile) {
          return mergeFrom((com.google.mediapipe.proto.CalculatorProfileProto.StreamProfile)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.google.mediapipe.proto.CalculatorProfileProto.StreamProfile other) {
        if (other == com.google.mediapipe.proto.CalculatorProfileProto.StreamProfile.getDefaultInstance()) return this;
        if (other.hasName()) {
          bitField0_ |= 0x00000001;
          name_ = other.name_;
          onChanged();
        }
        if (other.hasBackEdge()) {
          setBackEdge(other.getBackEdge());
        }
        if (other.hasLatency()) {
          mergeLatency(other.getLatency());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.mediapipe.proto.CalculatorProfileProto.StreamProfile parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.google.mediapipe.proto.CalculatorProfileProto.StreamProfile) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object name_ = "";
      /**
       * <pre>
       * Stream name.
       * </pre>
       *
       * <code>optional string name = 1;</code>
       */
      public boolean hasName() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <pre>
       * Stream name.
       * </pre>
       *
       * <code>optional string name = 1;</code>
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            name_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Stream name.
       * </pre>
       *
       * <code>optional string name = 1;</code>
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Stream name.
       * </pre>
       *
       * <code>optional string name = 1;</code>
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Stream name.
       * </pre>
       *
       * <code>optional string name = 1;</code>
       */
      public Builder clearName() {
        bitField0_ = (bitField0_ & ~0x00000001);
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Stream name.
       * </pre>
       *
       * <code>optional string name = 1;</code>
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        name_ = value;
        onChanged();
        return this;
      }

      private boolean backEdge_ ;
      /**
       * <pre>
       * If true, than this is a back edge input stream and won't be profiled.
       * </pre>
       *
       * <code>optional bool back_edge = 2 [default = false];</code>
       */
      public boolean hasBackEdge() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <pre>
       * If true, than this is a back edge input stream and won't be profiled.
       * </pre>
       *
       * <code>optional bool back_edge = 2 [default = false];</code>
       */
      public boolean getBackEdge() {
        return backEdge_;
      }
      /**
       * <pre>
       * If true, than this is a back edge input stream and won't be profiled.
       * </pre>
       *
       * <code>optional bool back_edge = 2 [default = false];</code>
       */
      public Builder setBackEdge(boolean value) {
        bitField0_ |= 0x00000002;
        backEdge_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * If true, than this is a back edge input stream and won't be profiled.
       * </pre>
       *
       * <code>optional bool back_edge = 2 [default = false];</code>
       */
      public Builder clearBackEdge() {
        bitField0_ = (bitField0_ & ~0x00000002);
        backEdge_ = false;
        onChanged();
        return this;
      }

      private com.google.mediapipe.proto.CalculatorProfileProto.TimeHistogram latency_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.mediapipe.proto.CalculatorProfileProto.TimeHistogram, com.google.mediapipe.proto.CalculatorProfileProto.TimeHistogram.Builder, com.google.mediapipe.proto.CalculatorProfileProto.TimeHistogramOrBuilder> latencyBuilder_;
      /**
       * <pre>
       * Total and histogram of the time that this stream took.
       * </pre>
       *
       * <code>optional .mediapipe.TimeHistogram latency = 3;</code>
       */
      public boolean hasLatency() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <pre>
       * Total and histogram of the time that this stream took.
       * </pre>
       *
       * <code>optional .mediapipe.TimeHistogram latency = 3;</code>
       */
      public com.google.mediapipe.proto.CalculatorProfileProto.TimeHistogram getLatency() {
        if (latencyBuilder_ == null) {
          return latency_ == null ? com.google.mediapipe.proto.CalculatorProfileProto.TimeHistogram.getDefaultInstance() : latency_;
        } else {
          return latencyBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Total and histogram of the time that this stream took.
       * </pre>
       *
       * <code>optional .mediapipe.TimeHistogram latency = 3;</code>
       */
      public Builder setLatency(com.google.mediapipe.proto.CalculatorProfileProto.TimeHistogram value) {
        if (latencyBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          latency_ = value;
          onChanged();
        } else {
          latencyBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <pre>
       * Total and histogram of the time that this stream took.
       * </pre>
       *
       * <code>optional .mediapipe.TimeHistogram latency = 3;</code>
       */
      public Builder setLatency(
          com.google.mediapipe.proto.CalculatorProfileProto.TimeHistogram.Builder builderForValue) {
        if (latencyBuilder_ == null) {
          latency_ = builderForValue.build();
          onChanged();
        } else {
          latencyBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <pre>
       * Total and histogram of the time that this stream took.
       * </pre>
       *
       * <code>optional .mediapipe.TimeHistogram latency = 3;</code>
       */
      public Builder mergeLatency(com.google.mediapipe.proto.CalculatorProfileProto.TimeHistogram value) {
        if (latencyBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004) &&
              latency_ != null &&
              latency_ != com.google.mediapipe.proto.CalculatorProfileProto.TimeHistogram.getDefaultInstance()) {
            latency_ =
              com.google.mediapipe.proto.CalculatorProfileProto.TimeHistogram.newBuilder(latency_).mergeFrom(value).buildPartial();
          } else {
            latency_ = value;
          }
          onChanged();
        } else {
          latencyBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <pre>
       * Total and histogram of the time that this stream took.
       * </pre>
       *
       * <code>optional .mediapipe.TimeHistogram latency = 3;</code>
       */
      public Builder clearLatency() {
        if (latencyBuilder_ == null) {
          latency_ = null;
          onChanged();
        } else {
          latencyBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      /**
       * <pre>
       * Total and histogram of the time that this stream took.
       * </pre>
       *
       * <code>optional .mediapipe.TimeHistogram latency = 3;</code>
       */
      public com.google.mediapipe.proto.CalculatorProfileProto.TimeHistogram.Builder getLatencyBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getLatencyFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Total and histogram of the time that this stream took.
       * </pre>
       *
       * <code>optional .mediapipe.TimeHistogram latency = 3;</code>
       */
      public com.google.mediapipe.proto.CalculatorProfileProto.TimeHistogramOrBuilder getLatencyOrBuilder() {
        if (latencyBuilder_ != null) {
          return latencyBuilder_.getMessageOrBuilder();
        } else {
          return latency_ == null ?
              com.google.mediapipe.proto.CalculatorProfileProto.TimeHistogram.getDefaultInstance() : latency_;
        }
      }
      /**
       * <pre>
       * Total and histogram of the time that this stream took.
       * </pre>
       *
       * <code>optional .mediapipe.TimeHistogram latency = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.mediapipe.proto.CalculatorProfileProto.TimeHistogram, com.google.mediapipe.proto.CalculatorProfileProto.TimeHistogram.Builder, com.google.mediapipe.proto.CalculatorProfileProto.TimeHistogramOrBuilder> 
          getLatencyFieldBuilder() {
        if (latencyBuilder_ == null) {
          latencyBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.mediapipe.proto.CalculatorProfileProto.TimeHistogram, com.google.mediapipe.proto.CalculatorProfileProto.TimeHistogram.Builder, com.google.mediapipe.proto.CalculatorProfileProto.TimeHistogramOrBuilder>(
                  getLatency(),
                  getParentForChildren(),
                  isClean());
          latency_ = null;
        }
        return latencyBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:mediapipe.StreamProfile)
    }

    // @@protoc_insertion_point(class_scope:mediapipe.StreamProfile)
    private static final com.google.mediapipe.proto.CalculatorProfileProto.StreamProfile DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.google.mediapipe.proto.CalculatorProfileProto.StreamProfile();
    }

    public static com.google.mediapipe.proto.CalculatorProfileProto.StreamProfile getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<StreamProfile>
        PARSER = new com.google.protobuf.AbstractParser<StreamProfile>() {
      public StreamProfile parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new StreamProfile(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<StreamProfile> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<StreamProfile> getParserForType() {
      return PARSER;
    }

    public com.google.mediapipe.proto.CalculatorProfileProto.StreamProfile getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CalculatorProfileOrBuilder extends
      // @@protoc_insertion_point(interface_extends:mediapipe.CalculatorProfile)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * The calculator name.
     * </pre>
     *
     * <code>optional string name = 1;</code>
     */
    boolean hasName();
    /**
     * <pre>
     * The calculator name.
     * </pre>
     *
     * <code>optional string name = 1;</code>
     */
    java.lang.String getName();
    /**
     * <pre>
     * The calculator name.
     * </pre>
     *
     * <code>optional string name = 1;</code>
     */
    com.google.protobuf.ByteString
        getNameBytes();

    /**
     * <pre>
     * Total time the calculator spent on Open (in microseconds).
     * </pre>
     *
     * <code>optional int64 open_runtime = 2 [default = 0];</code>
     */
    boolean hasOpenRuntime();
    /**
     * <pre>
     * Total time the calculator spent on Open (in microseconds).
     * </pre>
     *
     * <code>optional int64 open_runtime = 2 [default = 0];</code>
     */
    long getOpenRuntime();

    /**
     * <pre>
     * Total time the calculator spent on Close (in microseconds).
     * </pre>
     *
     * <code>optional int64 close_runtime = 3 [default = 0];</code>
     */
    boolean hasCloseRuntime();
    /**
     * <pre>
     * Total time the calculator spent on Close (in microseconds).
     * </pre>
     *
     * <code>optional int64 close_runtime = 3 [default = 0];</code>
     */
    long getCloseRuntime();

    /**
     * <pre>
     * Total and histogram of the time that the calculator spent on the Process()
     * (in microseconds).
     * </pre>
     *
     * <code>optional .mediapipe.TimeHistogram process_runtime = 4;</code>
     */
    boolean hasProcessRuntime();
    /**
     * <pre>
     * Total and histogram of the time that the calculator spent on the Process()
     * (in microseconds).
     * </pre>
     *
     * <code>optional .mediapipe.TimeHistogram process_runtime = 4;</code>
     */
    com.google.mediapipe.proto.CalculatorProfileProto.TimeHistogram getProcessRuntime();
    /**
     * <pre>
     * Total and histogram of the time that the calculator spent on the Process()
     * (in microseconds).
     * </pre>
     *
     * <code>optional .mediapipe.TimeHistogram process_runtime = 4;</code>
     */
    com.google.mediapipe.proto.CalculatorProfileProto.TimeHistogramOrBuilder getProcessRuntimeOrBuilder();

    /**
     * <pre>
     * Total and histogram of the time that the input latency, ie. difference
     * between input timestamp and process call time.
     * (in microseconds).
     * </pre>
     *
     * <code>optional .mediapipe.TimeHistogram process_input_latency = 5;</code>
     */
    boolean hasProcessInputLatency();
    /**
     * <pre>
     * Total and histogram of the time that the input latency, ie. difference
     * between input timestamp and process call time.
     * (in microseconds).
     * </pre>
     *
     * <code>optional .mediapipe.TimeHistogram process_input_latency = 5;</code>
     */
    com.google.mediapipe.proto.CalculatorProfileProto.TimeHistogram getProcessInputLatency();
    /**
     * <pre>
     * Total and histogram of the time that the input latency, ie. difference
     * between input timestamp and process call time.
     * (in microseconds).
     * </pre>
     *
     * <code>optional .mediapipe.TimeHistogram process_input_latency = 5;</code>
     */
    com.google.mediapipe.proto.CalculatorProfileProto.TimeHistogramOrBuilder getProcessInputLatencyOrBuilder();

    /**
     * <pre>
     * Total and histogram of the time that the output latency, ie. difference
     * between input timestamp and process finished time.
     * </pre>
     *
     * <code>optional .mediapipe.TimeHistogram process_output_latency = 6;</code>
     */
    boolean hasProcessOutputLatency();
    /**
     * <pre>
     * Total and histogram of the time that the output latency, ie. difference
     * between input timestamp and process finished time.
     * </pre>
     *
     * <code>optional .mediapipe.TimeHistogram process_output_latency = 6;</code>
     */
    com.google.mediapipe.proto.CalculatorProfileProto.TimeHistogram getProcessOutputLatency();
    /**
     * <pre>
     * Total and histogram of the time that the output latency, ie. difference
     * between input timestamp and process finished time.
     * </pre>
     *
     * <code>optional .mediapipe.TimeHistogram process_output_latency = 6;</code>
     */
    com.google.mediapipe.proto.CalculatorProfileProto.TimeHistogramOrBuilder getProcessOutputLatencyOrBuilder();

    /**
     * <pre>
     * Total and histogram of the time that input streams of this calculator took.
     * </pre>
     *
     * <code>repeated .mediapipe.StreamProfile input_stream_profiles = 7;</code>
     */
    java.util.List<com.google.mediapipe.proto.CalculatorProfileProto.StreamProfile> 
        getInputStreamProfilesList();
    /**
     * <pre>
     * Total and histogram of the time that input streams of this calculator took.
     * </pre>
     *
     * <code>repeated .mediapipe.StreamProfile input_stream_profiles = 7;</code>
     */
    com.google.mediapipe.proto.CalculatorProfileProto.StreamProfile getInputStreamProfiles(int index);
    /**
     * <pre>
     * Total and histogram of the time that input streams of this calculator took.
     * </pre>
     *
     * <code>repeated .mediapipe.StreamProfile input_stream_profiles = 7;</code>
     */
    int getInputStreamProfilesCount();
    /**
     * <pre>
     * Total and histogram of the time that input streams of this calculator took.
     * </pre>
     *
     * <code>repeated .mediapipe.StreamProfile input_stream_profiles = 7;</code>
     */
    java.util.List<? extends com.google.mediapipe.proto.CalculatorProfileProto.StreamProfileOrBuilder> 
        getInputStreamProfilesOrBuilderList();
    /**
     * <pre>
     * Total and histogram of the time that input streams of this calculator took.
     * </pre>
     *
     * <code>repeated .mediapipe.StreamProfile input_stream_profiles = 7;</code>
     */
    com.google.mediapipe.proto.CalculatorProfileProto.StreamProfileOrBuilder getInputStreamProfilesOrBuilder(
        int index);
  }
  /**
   * <pre>
   * Stores the profiling information for a calculator node.
   * All the times are in microseconds.
   * </pre>
   *
   * Protobuf type {@code mediapipe.CalculatorProfile}
   */
  public  static final class CalculatorProfile extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:mediapipe.CalculatorProfile)
      CalculatorProfileOrBuilder {
    // Use CalculatorProfile.newBuilder() to construct.
    private CalculatorProfile(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private CalculatorProfile() {
      name_ = "";
      openRuntime_ = 0L;
      closeRuntime_ = 0L;
      inputStreamProfiles_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private CalculatorProfile(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000001;
              name_ = bs;
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              openRuntime_ = input.readInt64();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              closeRuntime_ = input.readInt64();
              break;
            }
            case 34: {
              com.google.mediapipe.proto.CalculatorProfileProto.TimeHistogram.Builder subBuilder = null;
              if (((bitField0_ & 0x00000008) == 0x00000008)) {
                subBuilder = processRuntime_.toBuilder();
              }
              processRuntime_ = input.readMessage(com.google.mediapipe.proto.CalculatorProfileProto.TimeHistogram.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(processRuntime_);
                processRuntime_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000008;
              break;
            }
            case 42: {
              com.google.mediapipe.proto.CalculatorProfileProto.TimeHistogram.Builder subBuilder = null;
              if (((bitField0_ & 0x00000010) == 0x00000010)) {
                subBuilder = processInputLatency_.toBuilder();
              }
              processInputLatency_ = input.readMessage(com.google.mediapipe.proto.CalculatorProfileProto.TimeHistogram.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(processInputLatency_);
                processInputLatency_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000010;
              break;
            }
            case 50: {
              com.google.mediapipe.proto.CalculatorProfileProto.TimeHistogram.Builder subBuilder = null;
              if (((bitField0_ & 0x00000020) == 0x00000020)) {
                subBuilder = processOutputLatency_.toBuilder();
              }
              processOutputLatency_ = input.readMessage(com.google.mediapipe.proto.CalculatorProfileProto.TimeHistogram.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(processOutputLatency_);
                processOutputLatency_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000020;
              break;
            }
            case 58: {
              if (!((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
                inputStreamProfiles_ = new java.util.ArrayList<com.google.mediapipe.proto.CalculatorProfileProto.StreamProfile>();
                mutable_bitField0_ |= 0x00000040;
              }
              inputStreamProfiles_.add(
                  input.readMessage(com.google.mediapipe.proto.CalculatorProfileProto.StreamProfile.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
          inputStreamProfiles_ = java.util.Collections.unmodifiableList(inputStreamProfiles_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.google.mediapipe.proto.CalculatorProfileProto.internal_static_mediapipe_CalculatorProfile_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.mediapipe.proto.CalculatorProfileProto.internal_static_mediapipe_CalculatorProfile_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.mediapipe.proto.CalculatorProfileProto.CalculatorProfile.class, com.google.mediapipe.proto.CalculatorProfileProto.CalculatorProfile.Builder.class);
    }

    private int bitField0_;
    public static final int NAME_FIELD_NUMBER = 1;
    private volatile java.lang.Object name_;
    /**
     * <pre>
     * The calculator name.
     * </pre>
     *
     * <code>optional string name = 1;</code>
     */
    public boolean hasName() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <pre>
     * The calculator name.
     * </pre>
     *
     * <code>optional string name = 1;</code>
     */
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          name_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     * The calculator name.
     * </pre>
     *
     * <code>optional string name = 1;</code>
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int OPEN_RUNTIME_FIELD_NUMBER = 2;
    private long openRuntime_;
    /**
     * <pre>
     * Total time the calculator spent on Open (in microseconds).
     * </pre>
     *
     * <code>optional int64 open_runtime = 2 [default = 0];</code>
     */
    public boolean hasOpenRuntime() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <pre>
     * Total time the calculator spent on Open (in microseconds).
     * </pre>
     *
     * <code>optional int64 open_runtime = 2 [default = 0];</code>
     */
    public long getOpenRuntime() {
      return openRuntime_;
    }

    public static final int CLOSE_RUNTIME_FIELD_NUMBER = 3;
    private long closeRuntime_;
    /**
     * <pre>
     * Total time the calculator spent on Close (in microseconds).
     * </pre>
     *
     * <code>optional int64 close_runtime = 3 [default = 0];</code>
     */
    public boolean hasCloseRuntime() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <pre>
     * Total time the calculator spent on Close (in microseconds).
     * </pre>
     *
     * <code>optional int64 close_runtime = 3 [default = 0];</code>
     */
    public long getCloseRuntime() {
      return closeRuntime_;
    }

    public static final int PROCESS_RUNTIME_FIELD_NUMBER = 4;
    private com.google.mediapipe.proto.CalculatorProfileProto.TimeHistogram processRuntime_;
    /**
     * <pre>
     * Total and histogram of the time that the calculator spent on the Process()
     * (in microseconds).
     * </pre>
     *
     * <code>optional .mediapipe.TimeHistogram process_runtime = 4;</code>
     */
    public boolean hasProcessRuntime() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <pre>
     * Total and histogram of the time that the calculator spent on the Process()
     * (in microseconds).
     * </pre>
     *
     * <code>optional .mediapipe.TimeHistogram process_runtime = 4;</code>
     */
    public com.google.mediapipe.proto.CalculatorProfileProto.TimeHistogram getProcessRuntime() {
      return processRuntime_ == null ? com.google.mediapipe.proto.CalculatorProfileProto.TimeHistogram.getDefaultInstance() : processRuntime_;
    }
    /**
     * <pre>
     * Total and histogram of the time that the calculator spent on the Process()
     * (in microseconds).
     * </pre>
     *
     * <code>optional .mediapipe.TimeHistogram process_runtime = 4;</code>
     */
    public com.google.mediapipe.proto.CalculatorProfileProto.TimeHistogramOrBuilder getProcessRuntimeOrBuilder() {
      return processRuntime_ == null ? com.google.mediapipe.proto.CalculatorProfileProto.TimeHistogram.getDefaultInstance() : processRuntime_;
    }

    public static final int PROCESS_INPUT_LATENCY_FIELD_NUMBER = 5;
    private com.google.mediapipe.proto.CalculatorProfileProto.TimeHistogram processInputLatency_;
    /**
     * <pre>
     * Total and histogram of the time that the input latency, ie. difference
     * between input timestamp and process call time.
     * (in microseconds).
     * </pre>
     *
     * <code>optional .mediapipe.TimeHistogram process_input_latency = 5;</code>
     */
    public boolean hasProcessInputLatency() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <pre>
     * Total and histogram of the time that the input latency, ie. difference
     * between input timestamp and process call time.
     * (in microseconds).
     * </pre>
     *
     * <code>optional .mediapipe.TimeHistogram process_input_latency = 5;</code>
     */
    public com.google.mediapipe.proto.CalculatorProfileProto.TimeHistogram getProcessInputLatency() {
      return processInputLatency_ == null ? com.google.mediapipe.proto.CalculatorProfileProto.TimeHistogram.getDefaultInstance() : processInputLatency_;
    }
    /**
     * <pre>
     * Total and histogram of the time that the input latency, ie. difference
     * between input timestamp and process call time.
     * (in microseconds).
     * </pre>
     *
     * <code>optional .mediapipe.TimeHistogram process_input_latency = 5;</code>
     */
    public com.google.mediapipe.proto.CalculatorProfileProto.TimeHistogramOrBuilder getProcessInputLatencyOrBuilder() {
      return processInputLatency_ == null ? com.google.mediapipe.proto.CalculatorProfileProto.TimeHistogram.getDefaultInstance() : processInputLatency_;
    }

    public static final int PROCESS_OUTPUT_LATENCY_FIELD_NUMBER = 6;
    private com.google.mediapipe.proto.CalculatorProfileProto.TimeHistogram processOutputLatency_;
    /**
     * <pre>
     * Total and histogram of the time that the output latency, ie. difference
     * between input timestamp and process finished time.
     * </pre>
     *
     * <code>optional .mediapipe.TimeHistogram process_output_latency = 6;</code>
     */
    public boolean hasProcessOutputLatency() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <pre>
     * Total and histogram of the time that the output latency, ie. difference
     * between input timestamp and process finished time.
     * </pre>
     *
     * <code>optional .mediapipe.TimeHistogram process_output_latency = 6;</code>
     */
    public com.google.mediapipe.proto.CalculatorProfileProto.TimeHistogram getProcessOutputLatency() {
      return processOutputLatency_ == null ? com.google.mediapipe.proto.CalculatorProfileProto.TimeHistogram.getDefaultInstance() : processOutputLatency_;
    }
    /**
     * <pre>
     * Total and histogram of the time that the output latency, ie. difference
     * between input timestamp and process finished time.
     * </pre>
     *
     * <code>optional .mediapipe.TimeHistogram process_output_latency = 6;</code>
     */
    public com.google.mediapipe.proto.CalculatorProfileProto.TimeHistogramOrBuilder getProcessOutputLatencyOrBuilder() {
      return processOutputLatency_ == null ? com.google.mediapipe.proto.CalculatorProfileProto.TimeHistogram.getDefaultInstance() : processOutputLatency_;
    }

    public static final int INPUT_STREAM_PROFILES_FIELD_NUMBER = 7;
    private java.util.List<com.google.mediapipe.proto.CalculatorProfileProto.StreamProfile> inputStreamProfiles_;
    /**
     * <pre>
     * Total and histogram of the time that input streams of this calculator took.
     * </pre>
     *
     * <code>repeated .mediapipe.StreamProfile input_stream_profiles = 7;</code>
     */
    public java.util.List<com.google.mediapipe.proto.CalculatorProfileProto.StreamProfile> getInputStreamProfilesList() {
      return inputStreamProfiles_;
    }
    /**
     * <pre>
     * Total and histogram of the time that input streams of this calculator took.
     * </pre>
     *
     * <code>repeated .mediapipe.StreamProfile input_stream_profiles = 7;</code>
     */
    public java.util.List<? extends com.google.mediapipe.proto.CalculatorProfileProto.StreamProfileOrBuilder> 
        getInputStreamProfilesOrBuilderList() {
      return inputStreamProfiles_;
    }
    /**
     * <pre>
     * Total and histogram of the time that input streams of this calculator took.
     * </pre>
     *
     * <code>repeated .mediapipe.StreamProfile input_stream_profiles = 7;</code>
     */
    public int getInputStreamProfilesCount() {
      return inputStreamProfiles_.size();
    }
    /**
     * <pre>
     * Total and histogram of the time that input streams of this calculator took.
     * </pre>
     *
     * <code>repeated .mediapipe.StreamProfile input_stream_profiles = 7;</code>
     */
    public com.google.mediapipe.proto.CalculatorProfileProto.StreamProfile getInputStreamProfiles(int index) {
      return inputStreamProfiles_.get(index);
    }
    /**
     * <pre>
     * Total and histogram of the time that input streams of this calculator took.
     * </pre>
     *
     * <code>repeated .mediapipe.StreamProfile input_stream_profiles = 7;</code>
     */
    public com.google.mediapipe.proto.CalculatorProfileProto.StreamProfileOrBuilder getInputStreamProfilesOrBuilder(
        int index) {
      return inputStreamProfiles_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, name_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt64(2, openRuntime_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt64(3, closeRuntime_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeMessage(4, getProcessRuntime());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeMessage(5, getProcessInputLatency());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeMessage(6, getProcessOutputLatency());
      }
      for (int i = 0; i < inputStreamProfiles_.size(); i++) {
        output.writeMessage(7, inputStreamProfiles_.get(i));
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, name_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(2, openRuntime_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(3, closeRuntime_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getProcessRuntime());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, getProcessInputLatency());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, getProcessOutputLatency());
      }
      for (int i = 0; i < inputStreamProfiles_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, inputStreamProfiles_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.google.mediapipe.proto.CalculatorProfileProto.CalculatorProfile)) {
        return super.equals(obj);
      }
      com.google.mediapipe.proto.CalculatorProfileProto.CalculatorProfile other = (com.google.mediapipe.proto.CalculatorProfileProto.CalculatorProfile) obj;

      boolean result = true;
      result = result && (hasName() == other.hasName());
      if (hasName()) {
        result = result && getName()
            .equals(other.getName());
      }
      result = result && (hasOpenRuntime() == other.hasOpenRuntime());
      if (hasOpenRuntime()) {
        result = result && (getOpenRuntime()
            == other.getOpenRuntime());
      }
      result = result && (hasCloseRuntime() == other.hasCloseRuntime());
      if (hasCloseRuntime()) {
        result = result && (getCloseRuntime()
            == other.getCloseRuntime());
      }
      result = result && (hasProcessRuntime() == other.hasProcessRuntime());
      if (hasProcessRuntime()) {
        result = result && getProcessRuntime()
            .equals(other.getProcessRuntime());
      }
      result = result && (hasProcessInputLatency() == other.hasProcessInputLatency());
      if (hasProcessInputLatency()) {
        result = result && getProcessInputLatency()
            .equals(other.getProcessInputLatency());
      }
      result = result && (hasProcessOutputLatency() == other.hasProcessOutputLatency());
      if (hasProcessOutputLatency()) {
        result = result && getProcessOutputLatency()
            .equals(other.getProcessOutputLatency());
      }
      result = result && getInputStreamProfilesList()
          .equals(other.getInputStreamProfilesList());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      if (hasName()) {
        hash = (37 * hash) + NAME_FIELD_NUMBER;
        hash = (53 * hash) + getName().hashCode();
      }
      if (hasOpenRuntime()) {
        hash = (37 * hash) + OPEN_RUNTIME_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getOpenRuntime());
      }
      if (hasCloseRuntime()) {
        hash = (37 * hash) + CLOSE_RUNTIME_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getCloseRuntime());
      }
      if (hasProcessRuntime()) {
        hash = (37 * hash) + PROCESS_RUNTIME_FIELD_NUMBER;
        hash = (53 * hash) + getProcessRuntime().hashCode();
      }
      if (hasProcessInputLatency()) {
        hash = (37 * hash) + PROCESS_INPUT_LATENCY_FIELD_NUMBER;
        hash = (53 * hash) + getProcessInputLatency().hashCode();
      }
      if (hasProcessOutputLatency()) {
        hash = (37 * hash) + PROCESS_OUTPUT_LATENCY_FIELD_NUMBER;
        hash = (53 * hash) + getProcessOutputLatency().hashCode();
      }
      if (getInputStreamProfilesCount() > 0) {
        hash = (37 * hash) + INPUT_STREAM_PROFILES_FIELD_NUMBER;
        hash = (53 * hash) + getInputStreamProfilesList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.google.mediapipe.proto.CalculatorProfileProto.CalculatorProfile parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.mediapipe.proto.CalculatorProfileProto.CalculatorProfile parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.mediapipe.proto.CalculatorProfileProto.CalculatorProfile parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.mediapipe.proto.CalculatorProfileProto.CalculatorProfile parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.mediapipe.proto.CalculatorProfileProto.CalculatorProfile parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.google.mediapipe.proto.CalculatorProfileProto.CalculatorProfile parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.google.mediapipe.proto.CalculatorProfileProto.CalculatorProfile parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.google.mediapipe.proto.CalculatorProfileProto.CalculatorProfile parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.google.mediapipe.proto.CalculatorProfileProto.CalculatorProfile parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.google.mediapipe.proto.CalculatorProfileProto.CalculatorProfile parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.google.mediapipe.proto.CalculatorProfileProto.CalculatorProfile prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Stores the profiling information for a calculator node.
     * All the times are in microseconds.
     * </pre>
     *
     * Protobuf type {@code mediapipe.CalculatorProfile}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:mediapipe.CalculatorProfile)
        com.google.mediapipe.proto.CalculatorProfileProto.CalculatorProfileOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.google.mediapipe.proto.CalculatorProfileProto.internal_static_mediapipe_CalculatorProfile_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.google.mediapipe.proto.CalculatorProfileProto.internal_static_mediapipe_CalculatorProfile_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.google.mediapipe.proto.CalculatorProfileProto.CalculatorProfile.class, com.google.mediapipe.proto.CalculatorProfileProto.CalculatorProfile.Builder.class);
      }

      // Construct using com.google.mediapipe.proto.CalculatorProfileProto.CalculatorProfile.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getProcessRuntimeFieldBuilder();
          getProcessInputLatencyFieldBuilder();
          getProcessOutputLatencyFieldBuilder();
          getInputStreamProfilesFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        name_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        openRuntime_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000002);
        closeRuntime_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000004);
        if (processRuntimeBuilder_ == null) {
          processRuntime_ = null;
        } else {
          processRuntimeBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        if (processInputLatencyBuilder_ == null) {
          processInputLatency_ = null;
        } else {
          processInputLatencyBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000010);
        if (processOutputLatencyBuilder_ == null) {
          processOutputLatency_ = null;
        } else {
          processOutputLatencyBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000020);
        if (inputStreamProfilesBuilder_ == null) {
          inputStreamProfiles_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000040);
        } else {
          inputStreamProfilesBuilder_.clear();
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.google.mediapipe.proto.CalculatorProfileProto.internal_static_mediapipe_CalculatorProfile_descriptor;
      }

      public com.google.mediapipe.proto.CalculatorProfileProto.CalculatorProfile getDefaultInstanceForType() {
        return com.google.mediapipe.proto.CalculatorProfileProto.CalculatorProfile.getDefaultInstance();
      }

      public com.google.mediapipe.proto.CalculatorProfileProto.CalculatorProfile build() {
        com.google.mediapipe.proto.CalculatorProfileProto.CalculatorProfile result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.google.mediapipe.proto.CalculatorProfileProto.CalculatorProfile buildPartial() {
        com.google.mediapipe.proto.CalculatorProfileProto.CalculatorProfile result = new com.google.mediapipe.proto.CalculatorProfileProto.CalculatorProfile(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.name_ = name_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.openRuntime_ = openRuntime_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.closeRuntime_ = closeRuntime_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        if (processRuntimeBuilder_ == null) {
          result.processRuntime_ = processRuntime_;
        } else {
          result.processRuntime_ = processRuntimeBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        if (processInputLatencyBuilder_ == null) {
          result.processInputLatency_ = processInputLatency_;
        } else {
          result.processInputLatency_ = processInputLatencyBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        if (processOutputLatencyBuilder_ == null) {
          result.processOutputLatency_ = processOutputLatency_;
        } else {
          result.processOutputLatency_ = processOutputLatencyBuilder_.build();
        }
        if (inputStreamProfilesBuilder_ == null) {
          if (((bitField0_ & 0x00000040) == 0x00000040)) {
            inputStreamProfiles_ = java.util.Collections.unmodifiableList(inputStreamProfiles_);
            bitField0_ = (bitField0_ & ~0x00000040);
          }
          result.inputStreamProfiles_ = inputStreamProfiles_;
        } else {
          result.inputStreamProfiles_ = inputStreamProfilesBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.google.mediapipe.proto.CalculatorProfileProto.CalculatorProfile) {
          return mergeFrom((com.google.mediapipe.proto.CalculatorProfileProto.CalculatorProfile)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.google.mediapipe.proto.CalculatorProfileProto.CalculatorProfile other) {
        if (other == com.google.mediapipe.proto.CalculatorProfileProto.CalculatorProfile.getDefaultInstance()) return this;
        if (other.hasName()) {
          bitField0_ |= 0x00000001;
          name_ = other.name_;
          onChanged();
        }
        if (other.hasOpenRuntime()) {
          setOpenRuntime(other.getOpenRuntime());
        }
        if (other.hasCloseRuntime()) {
          setCloseRuntime(other.getCloseRuntime());
        }
        if (other.hasProcessRuntime()) {
          mergeProcessRuntime(other.getProcessRuntime());
        }
        if (other.hasProcessInputLatency()) {
          mergeProcessInputLatency(other.getProcessInputLatency());
        }
        if (other.hasProcessOutputLatency()) {
          mergeProcessOutputLatency(other.getProcessOutputLatency());
        }
        if (inputStreamProfilesBuilder_ == null) {
          if (!other.inputStreamProfiles_.isEmpty()) {
            if (inputStreamProfiles_.isEmpty()) {
              inputStreamProfiles_ = other.inputStreamProfiles_;
              bitField0_ = (bitField0_ & ~0x00000040);
            } else {
              ensureInputStreamProfilesIsMutable();
              inputStreamProfiles_.addAll(other.inputStreamProfiles_);
            }
            onChanged();
          }
        } else {
          if (!other.inputStreamProfiles_.isEmpty()) {
            if (inputStreamProfilesBuilder_.isEmpty()) {
              inputStreamProfilesBuilder_.dispose();
              inputStreamProfilesBuilder_ = null;
              inputStreamProfiles_ = other.inputStreamProfiles_;
              bitField0_ = (bitField0_ & ~0x00000040);
              inputStreamProfilesBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getInputStreamProfilesFieldBuilder() : null;
            } else {
              inputStreamProfilesBuilder_.addAllMessages(other.inputStreamProfiles_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.mediapipe.proto.CalculatorProfileProto.CalculatorProfile parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.google.mediapipe.proto.CalculatorProfileProto.CalculatorProfile) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object name_ = "";
      /**
       * <pre>
       * The calculator name.
       * </pre>
       *
       * <code>optional string name = 1;</code>
       */
      public boolean hasName() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <pre>
       * The calculator name.
       * </pre>
       *
       * <code>optional string name = 1;</code>
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            name_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The calculator name.
       * </pre>
       *
       * <code>optional string name = 1;</code>
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The calculator name.
       * </pre>
       *
       * <code>optional string name = 1;</code>
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The calculator name.
       * </pre>
       *
       * <code>optional string name = 1;</code>
       */
      public Builder clearName() {
        bitField0_ = (bitField0_ & ~0x00000001);
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The calculator name.
       * </pre>
       *
       * <code>optional string name = 1;</code>
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        name_ = value;
        onChanged();
        return this;
      }

      private long openRuntime_ ;
      /**
       * <pre>
       * Total time the calculator spent on Open (in microseconds).
       * </pre>
       *
       * <code>optional int64 open_runtime = 2 [default = 0];</code>
       */
      public boolean hasOpenRuntime() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <pre>
       * Total time the calculator spent on Open (in microseconds).
       * </pre>
       *
       * <code>optional int64 open_runtime = 2 [default = 0];</code>
       */
      public long getOpenRuntime() {
        return openRuntime_;
      }
      /**
       * <pre>
       * Total time the calculator spent on Open (in microseconds).
       * </pre>
       *
       * <code>optional int64 open_runtime = 2 [default = 0];</code>
       */
      public Builder setOpenRuntime(long value) {
        bitField0_ |= 0x00000002;
        openRuntime_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Total time the calculator spent on Open (in microseconds).
       * </pre>
       *
       * <code>optional int64 open_runtime = 2 [default = 0];</code>
       */
      public Builder clearOpenRuntime() {
        bitField0_ = (bitField0_ & ~0x00000002);
        openRuntime_ = 0L;
        onChanged();
        return this;
      }

      private long closeRuntime_ ;
      /**
       * <pre>
       * Total time the calculator spent on Close (in microseconds).
       * </pre>
       *
       * <code>optional int64 close_runtime = 3 [default = 0];</code>
       */
      public boolean hasCloseRuntime() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <pre>
       * Total time the calculator spent on Close (in microseconds).
       * </pre>
       *
       * <code>optional int64 close_runtime = 3 [default = 0];</code>
       */
      public long getCloseRuntime() {
        return closeRuntime_;
      }
      /**
       * <pre>
       * Total time the calculator spent on Close (in microseconds).
       * </pre>
       *
       * <code>optional int64 close_runtime = 3 [default = 0];</code>
       */
      public Builder setCloseRuntime(long value) {
        bitField0_ |= 0x00000004;
        closeRuntime_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Total time the calculator spent on Close (in microseconds).
       * </pre>
       *
       * <code>optional int64 close_runtime = 3 [default = 0];</code>
       */
      public Builder clearCloseRuntime() {
        bitField0_ = (bitField0_ & ~0x00000004);
        closeRuntime_ = 0L;
        onChanged();
        return this;
      }

      private com.google.mediapipe.proto.CalculatorProfileProto.TimeHistogram processRuntime_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.mediapipe.proto.CalculatorProfileProto.TimeHistogram, com.google.mediapipe.proto.CalculatorProfileProto.TimeHistogram.Builder, com.google.mediapipe.proto.CalculatorProfileProto.TimeHistogramOrBuilder> processRuntimeBuilder_;
      /**
       * <pre>
       * Total and histogram of the time that the calculator spent on the Process()
       * (in microseconds).
       * </pre>
       *
       * <code>optional .mediapipe.TimeHistogram process_runtime = 4;</code>
       */
      public boolean hasProcessRuntime() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <pre>
       * Total and histogram of the time that the calculator spent on the Process()
       * (in microseconds).
       * </pre>
       *
       * <code>optional .mediapipe.TimeHistogram process_runtime = 4;</code>
       */
      public com.google.mediapipe.proto.CalculatorProfileProto.TimeHistogram getProcessRuntime() {
        if (processRuntimeBuilder_ == null) {
          return processRuntime_ == null ? com.google.mediapipe.proto.CalculatorProfileProto.TimeHistogram.getDefaultInstance() : processRuntime_;
        } else {
          return processRuntimeBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Total and histogram of the time that the calculator spent on the Process()
       * (in microseconds).
       * </pre>
       *
       * <code>optional .mediapipe.TimeHistogram process_runtime = 4;</code>
       */
      public Builder setProcessRuntime(com.google.mediapipe.proto.CalculatorProfileProto.TimeHistogram value) {
        if (processRuntimeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          processRuntime_ = value;
          onChanged();
        } else {
          processRuntimeBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <pre>
       * Total and histogram of the time that the calculator spent on the Process()
       * (in microseconds).
       * </pre>
       *
       * <code>optional .mediapipe.TimeHistogram process_runtime = 4;</code>
       */
      public Builder setProcessRuntime(
          com.google.mediapipe.proto.CalculatorProfileProto.TimeHistogram.Builder builderForValue) {
        if (processRuntimeBuilder_ == null) {
          processRuntime_ = builderForValue.build();
          onChanged();
        } else {
          processRuntimeBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <pre>
       * Total and histogram of the time that the calculator spent on the Process()
       * (in microseconds).
       * </pre>
       *
       * <code>optional .mediapipe.TimeHistogram process_runtime = 4;</code>
       */
      public Builder mergeProcessRuntime(com.google.mediapipe.proto.CalculatorProfileProto.TimeHistogram value) {
        if (processRuntimeBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008) &&
              processRuntime_ != null &&
              processRuntime_ != com.google.mediapipe.proto.CalculatorProfileProto.TimeHistogram.getDefaultInstance()) {
            processRuntime_ =
              com.google.mediapipe.proto.CalculatorProfileProto.TimeHistogram.newBuilder(processRuntime_).mergeFrom(value).buildPartial();
          } else {
            processRuntime_ = value;
          }
          onChanged();
        } else {
          processRuntimeBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <pre>
       * Total and histogram of the time that the calculator spent on the Process()
       * (in microseconds).
       * </pre>
       *
       * <code>optional .mediapipe.TimeHistogram process_runtime = 4;</code>
       */
      public Builder clearProcessRuntime() {
        if (processRuntimeBuilder_ == null) {
          processRuntime_ = null;
          onChanged();
        } else {
          processRuntimeBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }
      /**
       * <pre>
       * Total and histogram of the time that the calculator spent on the Process()
       * (in microseconds).
       * </pre>
       *
       * <code>optional .mediapipe.TimeHistogram process_runtime = 4;</code>
       */
      public com.google.mediapipe.proto.CalculatorProfileProto.TimeHistogram.Builder getProcessRuntimeBuilder() {
        bitField0_ |= 0x00000008;
        onChanged();
        return getProcessRuntimeFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Total and histogram of the time that the calculator spent on the Process()
       * (in microseconds).
       * </pre>
       *
       * <code>optional .mediapipe.TimeHistogram process_runtime = 4;</code>
       */
      public com.google.mediapipe.proto.CalculatorProfileProto.TimeHistogramOrBuilder getProcessRuntimeOrBuilder() {
        if (processRuntimeBuilder_ != null) {
          return processRuntimeBuilder_.getMessageOrBuilder();
        } else {
          return processRuntime_ == null ?
              com.google.mediapipe.proto.CalculatorProfileProto.TimeHistogram.getDefaultInstance() : processRuntime_;
        }
      }
      /**
       * <pre>
       * Total and histogram of the time that the calculator spent on the Process()
       * (in microseconds).
       * </pre>
       *
       * <code>optional .mediapipe.TimeHistogram process_runtime = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.mediapipe.proto.CalculatorProfileProto.TimeHistogram, com.google.mediapipe.proto.CalculatorProfileProto.TimeHistogram.Builder, com.google.mediapipe.proto.CalculatorProfileProto.TimeHistogramOrBuilder> 
          getProcessRuntimeFieldBuilder() {
        if (processRuntimeBuilder_ == null) {
          processRuntimeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.mediapipe.proto.CalculatorProfileProto.TimeHistogram, com.google.mediapipe.proto.CalculatorProfileProto.TimeHistogram.Builder, com.google.mediapipe.proto.CalculatorProfileProto.TimeHistogramOrBuilder>(
                  getProcessRuntime(),
                  getParentForChildren(),
                  isClean());
          processRuntime_ = null;
        }
        return processRuntimeBuilder_;
      }

      private com.google.mediapipe.proto.CalculatorProfileProto.TimeHistogram processInputLatency_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.mediapipe.proto.CalculatorProfileProto.TimeHistogram, com.google.mediapipe.proto.CalculatorProfileProto.TimeHistogram.Builder, com.google.mediapipe.proto.CalculatorProfileProto.TimeHistogramOrBuilder> processInputLatencyBuilder_;
      /**
       * <pre>
       * Total and histogram of the time that the input latency, ie. difference
       * between input timestamp and process call time.
       * (in microseconds).
       * </pre>
       *
       * <code>optional .mediapipe.TimeHistogram process_input_latency = 5;</code>
       */
      public boolean hasProcessInputLatency() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <pre>
       * Total and histogram of the time that the input latency, ie. difference
       * between input timestamp and process call time.
       * (in microseconds).
       * </pre>
       *
       * <code>optional .mediapipe.TimeHistogram process_input_latency = 5;</code>
       */
      public com.google.mediapipe.proto.CalculatorProfileProto.TimeHistogram getProcessInputLatency() {
        if (processInputLatencyBuilder_ == null) {
          return processInputLatency_ == null ? com.google.mediapipe.proto.CalculatorProfileProto.TimeHistogram.getDefaultInstance() : processInputLatency_;
        } else {
          return processInputLatencyBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Total and histogram of the time that the input latency, ie. difference
       * between input timestamp and process call time.
       * (in microseconds).
       * </pre>
       *
       * <code>optional .mediapipe.TimeHistogram process_input_latency = 5;</code>
       */
      public Builder setProcessInputLatency(com.google.mediapipe.proto.CalculatorProfileProto.TimeHistogram value) {
        if (processInputLatencyBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          processInputLatency_ = value;
          onChanged();
        } else {
          processInputLatencyBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      /**
       * <pre>
       * Total and histogram of the time that the input latency, ie. difference
       * between input timestamp and process call time.
       * (in microseconds).
       * </pre>
       *
       * <code>optional .mediapipe.TimeHistogram process_input_latency = 5;</code>
       */
      public Builder setProcessInputLatency(
          com.google.mediapipe.proto.CalculatorProfileProto.TimeHistogram.Builder builderForValue) {
        if (processInputLatencyBuilder_ == null) {
          processInputLatency_ = builderForValue.build();
          onChanged();
        } else {
          processInputLatencyBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      /**
       * <pre>
       * Total and histogram of the time that the input latency, ie. difference
       * between input timestamp and process call time.
       * (in microseconds).
       * </pre>
       *
       * <code>optional .mediapipe.TimeHistogram process_input_latency = 5;</code>
       */
      public Builder mergeProcessInputLatency(com.google.mediapipe.proto.CalculatorProfileProto.TimeHistogram value) {
        if (processInputLatencyBuilder_ == null) {
          if (((bitField0_ & 0x00000010) == 0x00000010) &&
              processInputLatency_ != null &&
              processInputLatency_ != com.google.mediapipe.proto.CalculatorProfileProto.TimeHistogram.getDefaultInstance()) {
            processInputLatency_ =
              com.google.mediapipe.proto.CalculatorProfileProto.TimeHistogram.newBuilder(processInputLatency_).mergeFrom(value).buildPartial();
          } else {
            processInputLatency_ = value;
          }
          onChanged();
        } else {
          processInputLatencyBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      /**
       * <pre>
       * Total and histogram of the time that the input latency, ie. difference
       * between input timestamp and process call time.
       * (in microseconds).
       * </pre>
       *
       * <code>optional .mediapipe.TimeHistogram process_input_latency = 5;</code>
       */
      public Builder clearProcessInputLatency() {
        if (processInputLatencyBuilder_ == null) {
          processInputLatency_ = null;
          onChanged();
        } else {
          processInputLatencyBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }
      /**
       * <pre>
       * Total and histogram of the time that the input latency, ie. difference
       * between input timestamp and process call time.
       * (in microseconds).
       * </pre>
       *
       * <code>optional .mediapipe.TimeHistogram process_input_latency = 5;</code>
       */
      public com.google.mediapipe.proto.CalculatorProfileProto.TimeHistogram.Builder getProcessInputLatencyBuilder() {
        bitField0_ |= 0x00000010;
        onChanged();
        return getProcessInputLatencyFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Total and histogram of the time that the input latency, ie. difference
       * between input timestamp and process call time.
       * (in microseconds).
       * </pre>
       *
       * <code>optional .mediapipe.TimeHistogram process_input_latency = 5;</code>
       */
      public com.google.mediapipe.proto.CalculatorProfileProto.TimeHistogramOrBuilder getProcessInputLatencyOrBuilder() {
        if (processInputLatencyBuilder_ != null) {
          return processInputLatencyBuilder_.getMessageOrBuilder();
        } else {
          return processInputLatency_ == null ?
              com.google.mediapipe.proto.CalculatorProfileProto.TimeHistogram.getDefaultInstance() : processInputLatency_;
        }
      }
      /**
       * <pre>
       * Total and histogram of the time that the input latency, ie. difference
       * between input timestamp and process call time.
       * (in microseconds).
       * </pre>
       *
       * <code>optional .mediapipe.TimeHistogram process_input_latency = 5;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.mediapipe.proto.CalculatorProfileProto.TimeHistogram, com.google.mediapipe.proto.CalculatorProfileProto.TimeHistogram.Builder, com.google.mediapipe.proto.CalculatorProfileProto.TimeHistogramOrBuilder> 
          getProcessInputLatencyFieldBuilder() {
        if (processInputLatencyBuilder_ == null) {
          processInputLatencyBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.mediapipe.proto.CalculatorProfileProto.TimeHistogram, com.google.mediapipe.proto.CalculatorProfileProto.TimeHistogram.Builder, com.google.mediapipe.proto.CalculatorProfileProto.TimeHistogramOrBuilder>(
                  getProcessInputLatency(),
                  getParentForChildren(),
                  isClean());
          processInputLatency_ = null;
        }
        return processInputLatencyBuilder_;
      }

      private com.google.mediapipe.proto.CalculatorProfileProto.TimeHistogram processOutputLatency_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.mediapipe.proto.CalculatorProfileProto.TimeHistogram, com.google.mediapipe.proto.CalculatorProfileProto.TimeHistogram.Builder, com.google.mediapipe.proto.CalculatorProfileProto.TimeHistogramOrBuilder> processOutputLatencyBuilder_;
      /**
       * <pre>
       * Total and histogram of the time that the output latency, ie. difference
       * between input timestamp and process finished time.
       * </pre>
       *
       * <code>optional .mediapipe.TimeHistogram process_output_latency = 6;</code>
       */
      public boolean hasProcessOutputLatency() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <pre>
       * Total and histogram of the time that the output latency, ie. difference
       * between input timestamp and process finished time.
       * </pre>
       *
       * <code>optional .mediapipe.TimeHistogram process_output_latency = 6;</code>
       */
      public com.google.mediapipe.proto.CalculatorProfileProto.TimeHistogram getProcessOutputLatency() {
        if (processOutputLatencyBuilder_ == null) {
          return processOutputLatency_ == null ? com.google.mediapipe.proto.CalculatorProfileProto.TimeHistogram.getDefaultInstance() : processOutputLatency_;
        } else {
          return processOutputLatencyBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Total and histogram of the time that the output latency, ie. difference
       * between input timestamp and process finished time.
       * </pre>
       *
       * <code>optional .mediapipe.TimeHistogram process_output_latency = 6;</code>
       */
      public Builder setProcessOutputLatency(com.google.mediapipe.proto.CalculatorProfileProto.TimeHistogram value) {
        if (processOutputLatencyBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          processOutputLatency_ = value;
          onChanged();
        } else {
          processOutputLatencyBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000020;
        return this;
      }
      /**
       * <pre>
       * Total and histogram of the time that the output latency, ie. difference
       * between input timestamp and process finished time.
       * </pre>
       *
       * <code>optional .mediapipe.TimeHistogram process_output_latency = 6;</code>
       */
      public Builder setProcessOutputLatency(
          com.google.mediapipe.proto.CalculatorProfileProto.TimeHistogram.Builder builderForValue) {
        if (processOutputLatencyBuilder_ == null) {
          processOutputLatency_ = builderForValue.build();
          onChanged();
        } else {
          processOutputLatencyBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000020;
        return this;
      }
      /**
       * <pre>
       * Total and histogram of the time that the output latency, ie. difference
       * between input timestamp and process finished time.
       * </pre>
       *
       * <code>optional .mediapipe.TimeHistogram process_output_latency = 6;</code>
       */
      public Builder mergeProcessOutputLatency(com.google.mediapipe.proto.CalculatorProfileProto.TimeHistogram value) {
        if (processOutputLatencyBuilder_ == null) {
          if (((bitField0_ & 0x00000020) == 0x00000020) &&
              processOutputLatency_ != null &&
              processOutputLatency_ != com.google.mediapipe.proto.CalculatorProfileProto.TimeHistogram.getDefaultInstance()) {
            processOutputLatency_ =
              com.google.mediapipe.proto.CalculatorProfileProto.TimeHistogram.newBuilder(processOutputLatency_).mergeFrom(value).buildPartial();
          } else {
            processOutputLatency_ = value;
          }
          onChanged();
        } else {
          processOutputLatencyBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000020;
        return this;
      }
      /**
       * <pre>
       * Total and histogram of the time that the output latency, ie. difference
       * between input timestamp and process finished time.
       * </pre>
       *
       * <code>optional .mediapipe.TimeHistogram process_output_latency = 6;</code>
       */
      public Builder clearProcessOutputLatency() {
        if (processOutputLatencyBuilder_ == null) {
          processOutputLatency_ = null;
          onChanged();
        } else {
          processOutputLatencyBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000020);
        return this;
      }
      /**
       * <pre>
       * Total and histogram of the time that the output latency, ie. difference
       * between input timestamp and process finished time.
       * </pre>
       *
       * <code>optional .mediapipe.TimeHistogram process_output_latency = 6;</code>
       */
      public com.google.mediapipe.proto.CalculatorProfileProto.TimeHistogram.Builder getProcessOutputLatencyBuilder() {
        bitField0_ |= 0x00000020;
        onChanged();
        return getProcessOutputLatencyFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Total and histogram of the time that the output latency, ie. difference
       * between input timestamp and process finished time.
       * </pre>
       *
       * <code>optional .mediapipe.TimeHistogram process_output_latency = 6;</code>
       */
      public com.google.mediapipe.proto.CalculatorProfileProto.TimeHistogramOrBuilder getProcessOutputLatencyOrBuilder() {
        if (processOutputLatencyBuilder_ != null) {
          return processOutputLatencyBuilder_.getMessageOrBuilder();
        } else {
          return processOutputLatency_ == null ?
              com.google.mediapipe.proto.CalculatorProfileProto.TimeHistogram.getDefaultInstance() : processOutputLatency_;
        }
      }
      /**
       * <pre>
       * Total and histogram of the time that the output latency, ie. difference
       * between input timestamp and process finished time.
       * </pre>
       *
       * <code>optional .mediapipe.TimeHistogram process_output_latency = 6;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.mediapipe.proto.CalculatorProfileProto.TimeHistogram, com.google.mediapipe.proto.CalculatorProfileProto.TimeHistogram.Builder, com.google.mediapipe.proto.CalculatorProfileProto.TimeHistogramOrBuilder> 
          getProcessOutputLatencyFieldBuilder() {
        if (processOutputLatencyBuilder_ == null) {
          processOutputLatencyBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.mediapipe.proto.CalculatorProfileProto.TimeHistogram, com.google.mediapipe.proto.CalculatorProfileProto.TimeHistogram.Builder, com.google.mediapipe.proto.CalculatorProfileProto.TimeHistogramOrBuilder>(
                  getProcessOutputLatency(),
                  getParentForChildren(),
                  isClean());
          processOutputLatency_ = null;
        }
        return processOutputLatencyBuilder_;
      }

      private java.util.List<com.google.mediapipe.proto.CalculatorProfileProto.StreamProfile> inputStreamProfiles_ =
        java.util.Collections.emptyList();
      private void ensureInputStreamProfilesIsMutable() {
        if (!((bitField0_ & 0x00000040) == 0x00000040)) {
          inputStreamProfiles_ = new java.util.ArrayList<com.google.mediapipe.proto.CalculatorProfileProto.StreamProfile>(inputStreamProfiles_);
          bitField0_ |= 0x00000040;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.google.mediapipe.proto.CalculatorProfileProto.StreamProfile, com.google.mediapipe.proto.CalculatorProfileProto.StreamProfile.Builder, com.google.mediapipe.proto.CalculatorProfileProto.StreamProfileOrBuilder> inputStreamProfilesBuilder_;

      /**
       * <pre>
       * Total and histogram of the time that input streams of this calculator took.
       * </pre>
       *
       * <code>repeated .mediapipe.StreamProfile input_stream_profiles = 7;</code>
       */
      public java.util.List<com.google.mediapipe.proto.CalculatorProfileProto.StreamProfile> getInputStreamProfilesList() {
        if (inputStreamProfilesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(inputStreamProfiles_);
        } else {
          return inputStreamProfilesBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * Total and histogram of the time that input streams of this calculator took.
       * </pre>
       *
       * <code>repeated .mediapipe.StreamProfile input_stream_profiles = 7;</code>
       */
      public int getInputStreamProfilesCount() {
        if (inputStreamProfilesBuilder_ == null) {
          return inputStreamProfiles_.size();
        } else {
          return inputStreamProfilesBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * Total and histogram of the time that input streams of this calculator took.
       * </pre>
       *
       * <code>repeated .mediapipe.StreamProfile input_stream_profiles = 7;</code>
       */
      public com.google.mediapipe.proto.CalculatorProfileProto.StreamProfile getInputStreamProfiles(int index) {
        if (inputStreamProfilesBuilder_ == null) {
          return inputStreamProfiles_.get(index);
        } else {
          return inputStreamProfilesBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * Total and histogram of the time that input streams of this calculator took.
       * </pre>
       *
       * <code>repeated .mediapipe.StreamProfile input_stream_profiles = 7;</code>
       */
      public Builder setInputStreamProfiles(
          int index, com.google.mediapipe.proto.CalculatorProfileProto.StreamProfile value) {
        if (inputStreamProfilesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureInputStreamProfilesIsMutable();
          inputStreamProfiles_.set(index, value);
          onChanged();
        } else {
          inputStreamProfilesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Total and histogram of the time that input streams of this calculator took.
       * </pre>
       *
       * <code>repeated .mediapipe.StreamProfile input_stream_profiles = 7;</code>
       */
      public Builder setInputStreamProfiles(
          int index, com.google.mediapipe.proto.CalculatorProfileProto.StreamProfile.Builder builderForValue) {
        if (inputStreamProfilesBuilder_ == null) {
          ensureInputStreamProfilesIsMutable();
          inputStreamProfiles_.set(index, builderForValue.build());
          onChanged();
        } else {
          inputStreamProfilesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Total and histogram of the time that input streams of this calculator took.
       * </pre>
       *
       * <code>repeated .mediapipe.StreamProfile input_stream_profiles = 7;</code>
       */
      public Builder addInputStreamProfiles(com.google.mediapipe.proto.CalculatorProfileProto.StreamProfile value) {
        if (inputStreamProfilesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureInputStreamProfilesIsMutable();
          inputStreamProfiles_.add(value);
          onChanged();
        } else {
          inputStreamProfilesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * Total and histogram of the time that input streams of this calculator took.
       * </pre>
       *
       * <code>repeated .mediapipe.StreamProfile input_stream_profiles = 7;</code>
       */
      public Builder addInputStreamProfiles(
          int index, com.google.mediapipe.proto.CalculatorProfileProto.StreamProfile value) {
        if (inputStreamProfilesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureInputStreamProfilesIsMutable();
          inputStreamProfiles_.add(index, value);
          onChanged();
        } else {
          inputStreamProfilesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Total and histogram of the time that input streams of this calculator took.
       * </pre>
       *
       * <code>repeated .mediapipe.StreamProfile input_stream_profiles = 7;</code>
       */
      public Builder addInputStreamProfiles(
          com.google.mediapipe.proto.CalculatorProfileProto.StreamProfile.Builder builderForValue) {
        if (inputStreamProfilesBuilder_ == null) {
          ensureInputStreamProfilesIsMutable();
          inputStreamProfiles_.add(builderForValue.build());
          onChanged();
        } else {
          inputStreamProfilesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Total and histogram of the time that input streams of this calculator took.
       * </pre>
       *
       * <code>repeated .mediapipe.StreamProfile input_stream_profiles = 7;</code>
       */
      public Builder addInputStreamProfiles(
          int index, com.google.mediapipe.proto.CalculatorProfileProto.StreamProfile.Builder builderForValue) {
        if (inputStreamProfilesBuilder_ == null) {
          ensureInputStreamProfilesIsMutable();
          inputStreamProfiles_.add(index, builderForValue.build());
          onChanged();
        } else {
          inputStreamProfilesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Total and histogram of the time that input streams of this calculator took.
       * </pre>
       *
       * <code>repeated .mediapipe.StreamProfile input_stream_profiles = 7;</code>
       */
      public Builder addAllInputStreamProfiles(
          java.lang.Iterable<? extends com.google.mediapipe.proto.CalculatorProfileProto.StreamProfile> values) {
        if (inputStreamProfilesBuilder_ == null) {
          ensureInputStreamProfilesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, inputStreamProfiles_);
          onChanged();
        } else {
          inputStreamProfilesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * Total and histogram of the time that input streams of this calculator took.
       * </pre>
       *
       * <code>repeated .mediapipe.StreamProfile input_stream_profiles = 7;</code>
       */
      public Builder clearInputStreamProfiles() {
        if (inputStreamProfilesBuilder_ == null) {
          inputStreamProfiles_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000040);
          onChanged();
        } else {
          inputStreamProfilesBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * Total and histogram of the time that input streams of this calculator took.
       * </pre>
       *
       * <code>repeated .mediapipe.StreamProfile input_stream_profiles = 7;</code>
       */
      public Builder removeInputStreamProfiles(int index) {
        if (inputStreamProfilesBuilder_ == null) {
          ensureInputStreamProfilesIsMutable();
          inputStreamProfiles_.remove(index);
          onChanged();
        } else {
          inputStreamProfilesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * Total and histogram of the time that input streams of this calculator took.
       * </pre>
       *
       * <code>repeated .mediapipe.StreamProfile input_stream_profiles = 7;</code>
       */
      public com.google.mediapipe.proto.CalculatorProfileProto.StreamProfile.Builder getInputStreamProfilesBuilder(
          int index) {
        return getInputStreamProfilesFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * Total and histogram of the time that input streams of this calculator took.
       * </pre>
       *
       * <code>repeated .mediapipe.StreamProfile input_stream_profiles = 7;</code>
       */
      public com.google.mediapipe.proto.CalculatorProfileProto.StreamProfileOrBuilder getInputStreamProfilesOrBuilder(
          int index) {
        if (inputStreamProfilesBuilder_ == null) {
          return inputStreamProfiles_.get(index);  } else {
          return inputStreamProfilesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * Total and histogram of the time that input streams of this calculator took.
       * </pre>
       *
       * <code>repeated .mediapipe.StreamProfile input_stream_profiles = 7;</code>
       */
      public java.util.List<? extends com.google.mediapipe.proto.CalculatorProfileProto.StreamProfileOrBuilder> 
           getInputStreamProfilesOrBuilderList() {
        if (inputStreamProfilesBuilder_ != null) {
          return inputStreamProfilesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(inputStreamProfiles_);
        }
      }
      /**
       * <pre>
       * Total and histogram of the time that input streams of this calculator took.
       * </pre>
       *
       * <code>repeated .mediapipe.StreamProfile input_stream_profiles = 7;</code>
       */
      public com.google.mediapipe.proto.CalculatorProfileProto.StreamProfile.Builder addInputStreamProfilesBuilder() {
        return getInputStreamProfilesFieldBuilder().addBuilder(
            com.google.mediapipe.proto.CalculatorProfileProto.StreamProfile.getDefaultInstance());
      }
      /**
       * <pre>
       * Total and histogram of the time that input streams of this calculator took.
       * </pre>
       *
       * <code>repeated .mediapipe.StreamProfile input_stream_profiles = 7;</code>
       */
      public com.google.mediapipe.proto.CalculatorProfileProto.StreamProfile.Builder addInputStreamProfilesBuilder(
          int index) {
        return getInputStreamProfilesFieldBuilder().addBuilder(
            index, com.google.mediapipe.proto.CalculatorProfileProto.StreamProfile.getDefaultInstance());
      }
      /**
       * <pre>
       * Total and histogram of the time that input streams of this calculator took.
       * </pre>
       *
       * <code>repeated .mediapipe.StreamProfile input_stream_profiles = 7;</code>
       */
      public java.util.List<com.google.mediapipe.proto.CalculatorProfileProto.StreamProfile.Builder> 
           getInputStreamProfilesBuilderList() {
        return getInputStreamProfilesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.google.mediapipe.proto.CalculatorProfileProto.StreamProfile, com.google.mediapipe.proto.CalculatorProfileProto.StreamProfile.Builder, com.google.mediapipe.proto.CalculatorProfileProto.StreamProfileOrBuilder> 
          getInputStreamProfilesFieldBuilder() {
        if (inputStreamProfilesBuilder_ == null) {
          inputStreamProfilesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              com.google.mediapipe.proto.CalculatorProfileProto.StreamProfile, com.google.mediapipe.proto.CalculatorProfileProto.StreamProfile.Builder, com.google.mediapipe.proto.CalculatorProfileProto.StreamProfileOrBuilder>(
                  inputStreamProfiles_,
                  ((bitField0_ & 0x00000040) == 0x00000040),
                  getParentForChildren(),
                  isClean());
          inputStreamProfiles_ = null;
        }
        return inputStreamProfilesBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:mediapipe.CalculatorProfile)
    }

    // @@protoc_insertion_point(class_scope:mediapipe.CalculatorProfile)
    private static final com.google.mediapipe.proto.CalculatorProfileProto.CalculatorProfile DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.google.mediapipe.proto.CalculatorProfileProto.CalculatorProfile();
    }

    public static com.google.mediapipe.proto.CalculatorProfileProto.CalculatorProfile getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<CalculatorProfile>
        PARSER = new com.google.protobuf.AbstractParser<CalculatorProfile>() {
      public CalculatorProfile parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new CalculatorProfile(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<CalculatorProfile> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CalculatorProfile> getParserForType() {
      return PARSER;
    }

    public com.google.mediapipe.proto.CalculatorProfileProto.CalculatorProfile getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface GraphTraceOrBuilder extends
      // @@protoc_insertion_point(interface_extends:mediapipe.GraphTrace)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * The time represented as 0 in the trace.
     * </pre>
     *
     * <code>optional int64 base_time = 1;</code>
     */
    boolean hasBaseTime();
    /**
     * <pre>
     * The time represented as 0 in the trace.
     * </pre>
     *
     * <code>optional int64 base_time = 1;</code>
     */
    long getBaseTime();

    /**
     * <pre>
     * The timestamp represented as 0 in the trace.
     * </pre>
     *
     * <code>optional int64 base_timestamp = 2;</code>
     */
    boolean hasBaseTimestamp();
    /**
     * <pre>
     * The timestamp represented as 0 in the trace.
     * </pre>
     *
     * <code>optional int64 base_timestamp = 2;</code>
     */
    long getBaseTimestamp();

    /**
     * <pre>
     * The list of calculator node names indexed by node id.
     * </pre>
     *
     * <code>repeated string calculator_name = 3;</code>
     */
    java.util.List<java.lang.String>
        getCalculatorNameList();
    /**
     * <pre>
     * The list of calculator node names indexed by node id.
     * </pre>
     *
     * <code>repeated string calculator_name = 3;</code>
     */
    int getCalculatorNameCount();
    /**
     * <pre>
     * The list of calculator node names indexed by node id.
     * </pre>
     *
     * <code>repeated string calculator_name = 3;</code>
     */
    java.lang.String getCalculatorName(int index);
    /**
     * <pre>
     * The list of calculator node names indexed by node id.
     * </pre>
     *
     * <code>repeated string calculator_name = 3;</code>
     */
    com.google.protobuf.ByteString
        getCalculatorNameBytes(int index);

    /**
     * <pre>
     * The list of stream names indexed by stream id.
     * </pre>
     *
     * <code>repeated string stream_name = 4;</code>
     */
    java.util.List<java.lang.String>
        getStreamNameList();
    /**
     * <pre>
     * The list of stream names indexed by stream id.
     * </pre>
     *
     * <code>repeated string stream_name = 4;</code>
     */
    int getStreamNameCount();
    /**
     * <pre>
     * The list of stream names indexed by stream id.
     * </pre>
     *
     * <code>repeated string stream_name = 4;</code>
     */
    java.lang.String getStreamName(int index);
    /**
     * <pre>
     * The list of stream names indexed by stream id.
     * </pre>
     *
     * <code>repeated string stream_name = 4;</code>
     */
    com.google.protobuf.ByteString
        getStreamNameBytes(int index);

    /**
     * <pre>
     * Recent packet timing informtion about each calculator node and stream.
     * </pre>
     *
     * <code>repeated .mediapipe.GraphTrace.CalculatorTrace calculator_trace = 5;</code>
     */
    java.util.List<com.google.mediapipe.proto.CalculatorProfileProto.GraphTrace.CalculatorTrace> 
        getCalculatorTraceList();
    /**
     * <pre>
     * Recent packet timing informtion about each calculator node and stream.
     * </pre>
     *
     * <code>repeated .mediapipe.GraphTrace.CalculatorTrace calculator_trace = 5;</code>
     */
    com.google.mediapipe.proto.CalculatorProfileProto.GraphTrace.CalculatorTrace getCalculatorTrace(int index);
    /**
     * <pre>
     * Recent packet timing informtion about each calculator node and stream.
     * </pre>
     *
     * <code>repeated .mediapipe.GraphTrace.CalculatorTrace calculator_trace = 5;</code>
     */
    int getCalculatorTraceCount();
    /**
     * <pre>
     * Recent packet timing informtion about each calculator node and stream.
     * </pre>
     *
     * <code>repeated .mediapipe.GraphTrace.CalculatorTrace calculator_trace = 5;</code>
     */
    java.util.List<? extends com.google.mediapipe.proto.CalculatorProfileProto.GraphTrace.CalculatorTraceOrBuilder> 
        getCalculatorTraceOrBuilderList();
    /**
     * <pre>
     * Recent packet timing informtion about each calculator node and stream.
     * </pre>
     *
     * <code>repeated .mediapipe.GraphTrace.CalculatorTrace calculator_trace = 5;</code>
     */
    com.google.mediapipe.proto.CalculatorProfileProto.GraphTrace.CalculatorTraceOrBuilder getCalculatorTraceOrBuilder(
        int index);
  }
  /**
   * <pre>
   * Latency timing for recent mediapipe packets.
   * </pre>
   *
   * Protobuf type {@code mediapipe.GraphTrace}
   */
  public  static final class GraphTrace extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:mediapipe.GraphTrace)
      GraphTraceOrBuilder {
    // Use GraphTrace.newBuilder() to construct.
    private GraphTrace(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private GraphTrace() {
      baseTime_ = 0L;
      baseTimestamp_ = 0L;
      calculatorName_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      streamName_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      calculatorTrace_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private GraphTrace(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              baseTime_ = input.readInt64();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              baseTimestamp_ = input.readInt64();
              break;
            }
            case 26: {
              com.google.protobuf.ByteString bs = input.readBytes();
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                calculatorName_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00000004;
              }
              calculatorName_.add(bs);
              break;
            }
            case 34: {
              com.google.protobuf.ByteString bs = input.readBytes();
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                streamName_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00000008;
              }
              streamName_.add(bs);
              break;
            }
            case 42: {
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
                calculatorTrace_ = new java.util.ArrayList<com.google.mediapipe.proto.CalculatorProfileProto.GraphTrace.CalculatorTrace>();
                mutable_bitField0_ |= 0x00000010;
              }
              calculatorTrace_.add(
                  input.readMessage(com.google.mediapipe.proto.CalculatorProfileProto.GraphTrace.CalculatorTrace.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          calculatorName_ = calculatorName_.getUnmodifiableView();
        }
        if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
          streamName_ = streamName_.getUnmodifiableView();
        }
        if (((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
          calculatorTrace_ = java.util.Collections.unmodifiableList(calculatorTrace_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.google.mediapipe.proto.CalculatorProfileProto.internal_static_mediapipe_GraphTrace_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.mediapipe.proto.CalculatorProfileProto.internal_static_mediapipe_GraphTrace_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.mediapipe.proto.CalculatorProfileProto.GraphTrace.class, com.google.mediapipe.proto.CalculatorProfileProto.GraphTrace.Builder.class);
    }

    /**
     * <pre>
     * The kind of event recorded.
     * </pre>
     *
     * Protobuf enum {@code mediapipe.GraphTrace.EventType}
     */
    public enum EventType
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>UNKNOWN = 0;</code>
       */
      UNKNOWN(0),
      /**
       * <code>OPEN = 1;</code>
       */
      OPEN(1),
      /**
       * <code>PROCESS = 2;</code>
       */
      PROCESS(2),
      /**
       * <code>CLOSE = 3;</code>
       */
      CLOSE(3),
      /**
       * <code>NOT_READY = 4;</code>
       */
      NOT_READY(4),
      /**
       * <code>READY_FOR_PROCESS = 5;</code>
       */
      READY_FOR_PROCESS(5),
      /**
       * <code>READY_FOR_CLOSE = 6;</code>
       */
      READY_FOR_CLOSE(6),
      /**
       * <code>THROTTLED = 7;</code>
       */
      THROTTLED(7),
      /**
       * <code>UNTHROTTLED = 8;</code>
       */
      UNTHROTTLED(8),
      /**
       * <code>CPU_TASK_USER = 9;</code>
       */
      CPU_TASK_USER(9),
      /**
       * <code>CPU_TASK_SYSTEM = 10;</code>
       */
      CPU_TASK_SYSTEM(10),
      /**
       * <code>GPU_TASK = 11;</code>
       */
      GPU_TASK(11),
      /**
       * <code>DSP_TASK = 12;</code>
       */
      DSP_TASK(12),
      /**
       * <code>TPU_TASK = 13;</code>
       */
      TPU_TASK(13),
      /**
       * <code>GPU_CALIBRATION = 14;</code>
       */
      GPU_CALIBRATION(14),
      ;

      /**
       * <code>UNKNOWN = 0;</code>
       */
      public static final int UNKNOWN_VALUE = 0;
      /**
       * <code>OPEN = 1;</code>
       */
      public static final int OPEN_VALUE = 1;
      /**
       * <code>PROCESS = 2;</code>
       */
      public static final int PROCESS_VALUE = 2;
      /**
       * <code>CLOSE = 3;</code>
       */
      public static final int CLOSE_VALUE = 3;
      /**
       * <code>NOT_READY = 4;</code>
       */
      public static final int NOT_READY_VALUE = 4;
      /**
       * <code>READY_FOR_PROCESS = 5;</code>
       */
      public static final int READY_FOR_PROCESS_VALUE = 5;
      /**
       * <code>READY_FOR_CLOSE = 6;</code>
       */
      public static final int READY_FOR_CLOSE_VALUE = 6;
      /**
       * <code>THROTTLED = 7;</code>
       */
      public static final int THROTTLED_VALUE = 7;
      /**
       * <code>UNTHROTTLED = 8;</code>
       */
      public static final int UNTHROTTLED_VALUE = 8;
      /**
       * <code>CPU_TASK_USER = 9;</code>
       */
      public static final int CPU_TASK_USER_VALUE = 9;
      /**
       * <code>CPU_TASK_SYSTEM = 10;</code>
       */
      public static final int CPU_TASK_SYSTEM_VALUE = 10;
      /**
       * <code>GPU_TASK = 11;</code>
       */
      public static final int GPU_TASK_VALUE = 11;
      /**
       * <code>DSP_TASK = 12;</code>
       */
      public static final int DSP_TASK_VALUE = 12;
      /**
       * <code>TPU_TASK = 13;</code>
       */
      public static final int TPU_TASK_VALUE = 13;
      /**
       * <code>GPU_CALIBRATION = 14;</code>
       */
      public static final int GPU_CALIBRATION_VALUE = 14;


      public final int getNumber() {
        return value;
      }

      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static EventType valueOf(int value) {
        return forNumber(value);
      }

      public static EventType forNumber(int value) {
        switch (value) {
          case 0: return UNKNOWN;
          case 1: return OPEN;
          case 2: return PROCESS;
          case 3: return CLOSE;
          case 4: return NOT_READY;
          case 5: return READY_FOR_PROCESS;
          case 6: return READY_FOR_CLOSE;
          case 7: return THROTTLED;
          case 8: return UNTHROTTLED;
          case 9: return CPU_TASK_USER;
          case 10: return CPU_TASK_SYSTEM;
          case 11: return GPU_TASK;
          case 12: return DSP_TASK;
          case 13: return TPU_TASK;
          case 14: return GPU_CALIBRATION;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<EventType>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          EventType> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<EventType>() {
              public EventType findValueByNumber(int number) {
                return EventType.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return com.google.mediapipe.proto.CalculatorProfileProto.GraphTrace.getDescriptor().getEnumTypes().get(0);
      }

      private static final EventType[] VALUES = values();

      public static EventType valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private EventType(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:mediapipe.GraphTrace.EventType)
    }

    public interface StreamTraceOrBuilder extends
        // @@protoc_insertion_point(interface_extends:mediapipe.GraphTrace.StreamTrace)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <pre>
       * The time at which the packet entered the stream.
       * </pre>
       *
       * <code>optional int64 start_time = 1;</code>
       */
      boolean hasStartTime();
      /**
       * <pre>
       * The time at which the packet entered the stream.
       * </pre>
       *
       * <code>optional int64 start_time = 1;</code>
       */
      long getStartTime();

      /**
       * <pre>
       * The time at which the packet exited the stream.
       * </pre>
       *
       * <code>optional int64 finish_time = 2;</code>
       */
      boolean hasFinishTime();
      /**
       * <pre>
       * The time at which the packet exited the stream.
       * </pre>
       *
       * <code>optional int64 finish_time = 2;</code>
       */
      long getFinishTime();

      /**
       * <pre>
       * The identifying timetamp of the packet.
       * </pre>
       *
       * <code>optional int64 packet_timestamp = 3;</code>
       */
      boolean hasPacketTimestamp();
      /**
       * <pre>
       * The identifying timetamp of the packet.
       * </pre>
       *
       * <code>optional int64 packet_timestamp = 3;</code>
       */
      long getPacketTimestamp();

      /**
       * <pre>
       * The index of the stream in the stream_name list.
       * </pre>
       *
       * <code>optional int32 stream_id = 4;</code>
       */
      boolean hasStreamId();
      /**
       * <pre>
       * The index of the stream in the stream_name list.
       * </pre>
       *
       * <code>optional int32 stream_id = 4;</code>
       */
      int getStreamId();

      /**
       * <pre>
       * The address of the packet contents.
       * </pre>
       *
       * <code>optional int64 packet_id = 5;</code>
       */
      boolean hasPacketId();
      /**
       * <pre>
       * The address of the packet contents.
       * </pre>
       *
       * <code>optional int64 packet_id = 5;</code>
       */
      long getPacketId();
    }
    /**
     * <pre>
     * The timing for one packet across one packet stream.
     * </pre>
     *
     * Protobuf type {@code mediapipe.GraphTrace.StreamTrace}
     */
    public  static final class StreamTrace extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:mediapipe.GraphTrace.StreamTrace)
        StreamTraceOrBuilder {
      // Use StreamTrace.newBuilder() to construct.
      private StreamTrace(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private StreamTrace() {
        startTime_ = 0L;
        finishTime_ = 0L;
        packetTimestamp_ = 0L;
        streamId_ = 0;
        packetId_ = 0L;
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private StreamTrace(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 8: {
                bitField0_ |= 0x00000001;
                startTime_ = input.readInt64();
                break;
              }
              case 16: {
                bitField0_ |= 0x00000002;
                finishTime_ = input.readInt64();
                break;
              }
              case 24: {
                bitField0_ |= 0x00000004;
                packetTimestamp_ = input.readInt64();
                break;
              }
              case 32: {
                bitField0_ |= 0x00000008;
                streamId_ = input.readInt32();
                break;
              }
              case 40: {
                bitField0_ |= 0x00000010;
                packetId_ = input.readInt64();
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.google.mediapipe.proto.CalculatorProfileProto.internal_static_mediapipe_GraphTrace_StreamTrace_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.google.mediapipe.proto.CalculatorProfileProto.internal_static_mediapipe_GraphTrace_StreamTrace_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.google.mediapipe.proto.CalculatorProfileProto.GraphTrace.StreamTrace.class, com.google.mediapipe.proto.CalculatorProfileProto.GraphTrace.StreamTrace.Builder.class);
      }

      private int bitField0_;
      public static final int START_TIME_FIELD_NUMBER = 1;
      private long startTime_;
      /**
       * <pre>
       * The time at which the packet entered the stream.
       * </pre>
       *
       * <code>optional int64 start_time = 1;</code>
       */
      public boolean hasStartTime() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <pre>
       * The time at which the packet entered the stream.
       * </pre>
       *
       * <code>optional int64 start_time = 1;</code>
       */
      public long getStartTime() {
        return startTime_;
      }

      public static final int FINISH_TIME_FIELD_NUMBER = 2;
      private long finishTime_;
      /**
       * <pre>
       * The time at which the packet exited the stream.
       * </pre>
       *
       * <code>optional int64 finish_time = 2;</code>
       */
      public boolean hasFinishTime() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <pre>
       * The time at which the packet exited the stream.
       * </pre>
       *
       * <code>optional int64 finish_time = 2;</code>
       */
      public long getFinishTime() {
        return finishTime_;
      }

      public static final int PACKET_TIMESTAMP_FIELD_NUMBER = 3;
      private long packetTimestamp_;
      /**
       * <pre>
       * The identifying timetamp of the packet.
       * </pre>
       *
       * <code>optional int64 packet_timestamp = 3;</code>
       */
      public boolean hasPacketTimestamp() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <pre>
       * The identifying timetamp of the packet.
       * </pre>
       *
       * <code>optional int64 packet_timestamp = 3;</code>
       */
      public long getPacketTimestamp() {
        return packetTimestamp_;
      }

      public static final int STREAM_ID_FIELD_NUMBER = 4;
      private int streamId_;
      /**
       * <pre>
       * The index of the stream in the stream_name list.
       * </pre>
       *
       * <code>optional int32 stream_id = 4;</code>
       */
      public boolean hasStreamId() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <pre>
       * The index of the stream in the stream_name list.
       * </pre>
       *
       * <code>optional int32 stream_id = 4;</code>
       */
      public int getStreamId() {
        return streamId_;
      }

      public static final int PACKET_ID_FIELD_NUMBER = 5;
      private long packetId_;
      /**
       * <pre>
       * The address of the packet contents.
       * </pre>
       *
       * <code>optional int64 packet_id = 5;</code>
       */
      public boolean hasPacketId() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <pre>
       * The address of the packet contents.
       * </pre>
       *
       * <code>optional int64 packet_id = 5;</code>
       */
      public long getPacketId() {
        return packetId_;
      }

      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeInt64(1, startTime_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeInt64(2, finishTime_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          output.writeInt64(3, packetTimestamp_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          output.writeInt32(4, streamId_);
        }
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          output.writeInt64(5, packetId_);
        }
        unknownFields.writeTo(output);
      }

      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt64Size(1, startTime_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt64Size(2, finishTime_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt64Size(3, packetTimestamp_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(4, streamId_);
        }
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt64Size(5, packetId_);
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof com.google.mediapipe.proto.CalculatorProfileProto.GraphTrace.StreamTrace)) {
          return super.equals(obj);
        }
        com.google.mediapipe.proto.CalculatorProfileProto.GraphTrace.StreamTrace other = (com.google.mediapipe.proto.CalculatorProfileProto.GraphTrace.StreamTrace) obj;

        boolean result = true;
        result = result && (hasStartTime() == other.hasStartTime());
        if (hasStartTime()) {
          result = result && (getStartTime()
              == other.getStartTime());
        }
        result = result && (hasFinishTime() == other.hasFinishTime());
        if (hasFinishTime()) {
          result = result && (getFinishTime()
              == other.getFinishTime());
        }
        result = result && (hasPacketTimestamp() == other.hasPacketTimestamp());
        if (hasPacketTimestamp()) {
          result = result && (getPacketTimestamp()
              == other.getPacketTimestamp());
        }
        result = result && (hasStreamId() == other.hasStreamId());
        if (hasStreamId()) {
          result = result && (getStreamId()
              == other.getStreamId());
        }
        result = result && (hasPacketId() == other.hasPacketId());
        if (hasPacketId()) {
          result = result && (getPacketId()
              == other.getPacketId());
        }
        result = result && unknownFields.equals(other.unknownFields);
        return result;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptorForType().hashCode();
        if (hasStartTime()) {
          hash = (37 * hash) + START_TIME_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
              getStartTime());
        }
        if (hasFinishTime()) {
          hash = (37 * hash) + FINISH_TIME_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
              getFinishTime());
        }
        if (hasPacketTimestamp()) {
          hash = (37 * hash) + PACKET_TIMESTAMP_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
              getPacketTimestamp());
        }
        if (hasStreamId()) {
          hash = (37 * hash) + STREAM_ID_FIELD_NUMBER;
          hash = (53 * hash) + getStreamId();
        }
        if (hasPacketId()) {
          hash = (37 * hash) + PACKET_ID_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
              getPacketId());
        }
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static com.google.mediapipe.proto.CalculatorProfileProto.GraphTrace.StreamTrace parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.google.mediapipe.proto.CalculatorProfileProto.GraphTrace.StreamTrace parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.google.mediapipe.proto.CalculatorProfileProto.GraphTrace.StreamTrace parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.google.mediapipe.proto.CalculatorProfileProto.GraphTrace.StreamTrace parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.google.mediapipe.proto.CalculatorProfileProto.GraphTrace.StreamTrace parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static com.google.mediapipe.proto.CalculatorProfileProto.GraphTrace.StreamTrace parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static com.google.mediapipe.proto.CalculatorProfileProto.GraphTrace.StreamTrace parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static com.google.mediapipe.proto.CalculatorProfileProto.GraphTrace.StreamTrace parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static com.google.mediapipe.proto.CalculatorProfileProto.GraphTrace.StreamTrace parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static com.google.mediapipe.proto.CalculatorProfileProto.GraphTrace.StreamTrace parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(com.google.mediapipe.proto.CalculatorProfileProto.GraphTrace.StreamTrace prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * <pre>
       * The timing for one packet across one packet stream.
       * </pre>
       *
       * Protobuf type {@code mediapipe.GraphTrace.StreamTrace}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:mediapipe.GraphTrace.StreamTrace)
          com.google.mediapipe.proto.CalculatorProfileProto.GraphTrace.StreamTraceOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return com.google.mediapipe.proto.CalculatorProfileProto.internal_static_mediapipe_GraphTrace_StreamTrace_descriptor;
        }

        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return com.google.mediapipe.proto.CalculatorProfileProto.internal_static_mediapipe_GraphTrace_StreamTrace_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  com.google.mediapipe.proto.CalculatorProfileProto.GraphTrace.StreamTrace.class, com.google.mediapipe.proto.CalculatorProfileProto.GraphTrace.StreamTrace.Builder.class);
        }

        // Construct using com.google.mediapipe.proto.CalculatorProfileProto.GraphTrace.StreamTrace.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        public Builder clear() {
          super.clear();
          startTime_ = 0L;
          bitField0_ = (bitField0_ & ~0x00000001);
          finishTime_ = 0L;
          bitField0_ = (bitField0_ & ~0x00000002);
          packetTimestamp_ = 0L;
          bitField0_ = (bitField0_ & ~0x00000004);
          streamId_ = 0;
          bitField0_ = (bitField0_ & ~0x00000008);
          packetId_ = 0L;
          bitField0_ = (bitField0_ & ~0x00000010);
          return this;
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return com.google.mediapipe.proto.CalculatorProfileProto.internal_static_mediapipe_GraphTrace_StreamTrace_descriptor;
        }

        public com.google.mediapipe.proto.CalculatorProfileProto.GraphTrace.StreamTrace getDefaultInstanceForType() {
          return com.google.mediapipe.proto.CalculatorProfileProto.GraphTrace.StreamTrace.getDefaultInstance();
        }

        public com.google.mediapipe.proto.CalculatorProfileProto.GraphTrace.StreamTrace build() {
          com.google.mediapipe.proto.CalculatorProfileProto.GraphTrace.StreamTrace result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public com.google.mediapipe.proto.CalculatorProfileProto.GraphTrace.StreamTrace buildPartial() {
          com.google.mediapipe.proto.CalculatorProfileProto.GraphTrace.StreamTrace result = new com.google.mediapipe.proto.CalculatorProfileProto.GraphTrace.StreamTrace(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.startTime_ = startTime_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.finishTime_ = finishTime_;
          if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
            to_bitField0_ |= 0x00000004;
          }
          result.packetTimestamp_ = packetTimestamp_;
          if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
            to_bitField0_ |= 0x00000008;
          }
          result.streamId_ = streamId_;
          if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
            to_bitField0_ |= 0x00000010;
          }
          result.packetId_ = packetId_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder clone() {
          return (Builder) super.clone();
        }
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            Object value) {
          return (Builder) super.setField(field, value);
        }
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return (Builder) super.clearField(field);
        }
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return (Builder) super.clearOneof(oneof);
        }
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, Object value) {
          return (Builder) super.setRepeatedField(field, index, value);
        }
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            Object value) {
          return (Builder) super.addRepeatedField(field, value);
        }
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof com.google.mediapipe.proto.CalculatorProfileProto.GraphTrace.StreamTrace) {
            return mergeFrom((com.google.mediapipe.proto.CalculatorProfileProto.GraphTrace.StreamTrace)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(com.google.mediapipe.proto.CalculatorProfileProto.GraphTrace.StreamTrace other) {
          if (other == com.google.mediapipe.proto.CalculatorProfileProto.GraphTrace.StreamTrace.getDefaultInstance()) return this;
          if (other.hasStartTime()) {
            setStartTime(other.getStartTime());
          }
          if (other.hasFinishTime()) {
            setFinishTime(other.getFinishTime());
          }
          if (other.hasPacketTimestamp()) {
            setPacketTimestamp(other.getPacketTimestamp());
          }
          if (other.hasStreamId()) {
            setStreamId(other.getStreamId());
          }
          if (other.hasPacketId()) {
            setPacketId(other.getPacketId());
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          com.google.mediapipe.proto.CalculatorProfileProto.GraphTrace.StreamTrace parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (com.google.mediapipe.proto.CalculatorProfileProto.GraphTrace.StreamTrace) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private long startTime_ ;
        /**
         * <pre>
         * The time at which the packet entered the stream.
         * </pre>
         *
         * <code>optional int64 start_time = 1;</code>
         */
        public boolean hasStartTime() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <pre>
         * The time at which the packet entered the stream.
         * </pre>
         *
         * <code>optional int64 start_time = 1;</code>
         */
        public long getStartTime() {
          return startTime_;
        }
        /**
         * <pre>
         * The time at which the packet entered the stream.
         * </pre>
         *
         * <code>optional int64 start_time = 1;</code>
         */
        public Builder setStartTime(long value) {
          bitField0_ |= 0x00000001;
          startTime_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * The time at which the packet entered the stream.
         * </pre>
         *
         * <code>optional int64 start_time = 1;</code>
         */
        public Builder clearStartTime() {
          bitField0_ = (bitField0_ & ~0x00000001);
          startTime_ = 0L;
          onChanged();
          return this;
        }

        private long finishTime_ ;
        /**
         * <pre>
         * The time at which the packet exited the stream.
         * </pre>
         *
         * <code>optional int64 finish_time = 2;</code>
         */
        public boolean hasFinishTime() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <pre>
         * The time at which the packet exited the stream.
         * </pre>
         *
         * <code>optional int64 finish_time = 2;</code>
         */
        public long getFinishTime() {
          return finishTime_;
        }
        /**
         * <pre>
         * The time at which the packet exited the stream.
         * </pre>
         *
         * <code>optional int64 finish_time = 2;</code>
         */
        public Builder setFinishTime(long value) {
          bitField0_ |= 0x00000002;
          finishTime_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * The time at which the packet exited the stream.
         * </pre>
         *
         * <code>optional int64 finish_time = 2;</code>
         */
        public Builder clearFinishTime() {
          bitField0_ = (bitField0_ & ~0x00000002);
          finishTime_ = 0L;
          onChanged();
          return this;
        }

        private long packetTimestamp_ ;
        /**
         * <pre>
         * The identifying timetamp of the packet.
         * </pre>
         *
         * <code>optional int64 packet_timestamp = 3;</code>
         */
        public boolean hasPacketTimestamp() {
          return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        /**
         * <pre>
         * The identifying timetamp of the packet.
         * </pre>
         *
         * <code>optional int64 packet_timestamp = 3;</code>
         */
        public long getPacketTimestamp() {
          return packetTimestamp_;
        }
        /**
         * <pre>
         * The identifying timetamp of the packet.
         * </pre>
         *
         * <code>optional int64 packet_timestamp = 3;</code>
         */
        public Builder setPacketTimestamp(long value) {
          bitField0_ |= 0x00000004;
          packetTimestamp_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * The identifying timetamp of the packet.
         * </pre>
         *
         * <code>optional int64 packet_timestamp = 3;</code>
         */
        public Builder clearPacketTimestamp() {
          bitField0_ = (bitField0_ & ~0x00000004);
          packetTimestamp_ = 0L;
          onChanged();
          return this;
        }

        private int streamId_ ;
        /**
         * <pre>
         * The index of the stream in the stream_name list.
         * </pre>
         *
         * <code>optional int32 stream_id = 4;</code>
         */
        public boolean hasStreamId() {
          return ((bitField0_ & 0x00000008) == 0x00000008);
        }
        /**
         * <pre>
         * The index of the stream in the stream_name list.
         * </pre>
         *
         * <code>optional int32 stream_id = 4;</code>
         */
        public int getStreamId() {
          return streamId_;
        }
        /**
         * <pre>
         * The index of the stream in the stream_name list.
         * </pre>
         *
         * <code>optional int32 stream_id = 4;</code>
         */
        public Builder setStreamId(int value) {
          bitField0_ |= 0x00000008;
          streamId_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * The index of the stream in the stream_name list.
         * </pre>
         *
         * <code>optional int32 stream_id = 4;</code>
         */
        public Builder clearStreamId() {
          bitField0_ = (bitField0_ & ~0x00000008);
          streamId_ = 0;
          onChanged();
          return this;
        }

        private long packetId_ ;
        /**
         * <pre>
         * The address of the packet contents.
         * </pre>
         *
         * <code>optional int64 packet_id = 5;</code>
         */
        public boolean hasPacketId() {
          return ((bitField0_ & 0x00000010) == 0x00000010);
        }
        /**
         * <pre>
         * The address of the packet contents.
         * </pre>
         *
         * <code>optional int64 packet_id = 5;</code>
         */
        public long getPacketId() {
          return packetId_;
        }
        /**
         * <pre>
         * The address of the packet contents.
         * </pre>
         *
         * <code>optional int64 packet_id = 5;</code>
         */
        public Builder setPacketId(long value) {
          bitField0_ |= 0x00000010;
          packetId_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * The address of the packet contents.
         * </pre>
         *
         * <code>optional int64 packet_id = 5;</code>
         */
        public Builder clearPacketId() {
          bitField0_ = (bitField0_ & ~0x00000010);
          packetId_ = 0L;
          onChanged();
          return this;
        }
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:mediapipe.GraphTrace.StreamTrace)
      }

      // @@protoc_insertion_point(class_scope:mediapipe.GraphTrace.StreamTrace)
      private static final com.google.mediapipe.proto.CalculatorProfileProto.GraphTrace.StreamTrace DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new com.google.mediapipe.proto.CalculatorProfileProto.GraphTrace.StreamTrace();
      }

      public static com.google.mediapipe.proto.CalculatorProfileProto.GraphTrace.StreamTrace getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      @java.lang.Deprecated public static final com.google.protobuf.Parser<StreamTrace>
          PARSER = new com.google.protobuf.AbstractParser<StreamTrace>() {
        public StreamTrace parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
            return new StreamTrace(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<StreamTrace> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<StreamTrace> getParserForType() {
        return PARSER;
      }

      public com.google.mediapipe.proto.CalculatorProfileProto.GraphTrace.StreamTrace getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface CalculatorTraceOrBuilder extends
        // @@protoc_insertion_point(interface_extends:mediapipe.GraphTrace.CalculatorTrace)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <pre>
       * The index of the calculator node in the calculator_name list.
       * </pre>
       *
       * <code>optional int32 node_id = 1;</code>
       */
      boolean hasNodeId();
      /**
       * <pre>
       * The index of the calculator node in the calculator_name list.
       * </pre>
       *
       * <code>optional int32 node_id = 1;</code>
       */
      int getNodeId();

      /**
       * <pre>
       * The input timestamp during Open, Process, or Close.
       * </pre>
       *
       * <code>optional int64 input_timestamp = 2;</code>
       */
      boolean hasInputTimestamp();
      /**
       * <pre>
       * The input timestamp during Open, Process, or Close.
       * </pre>
       *
       * <code>optional int64 input_timestamp = 2;</code>
       */
      long getInputTimestamp();

      /**
       * <pre>
       * The kind of event, 1=Open, 2=Process, 3=Close, etc.
       * </pre>
       *
       * <code>optional .mediapipe.GraphTrace.EventType event_type = 3;</code>
       */
      boolean hasEventType();
      /**
       * <pre>
       * The kind of event, 1=Open, 2=Process, 3=Close, etc.
       * </pre>
       *
       * <code>optional .mediapipe.GraphTrace.EventType event_type = 3;</code>
       */
      com.google.mediapipe.proto.CalculatorProfileProto.GraphTrace.EventType getEventType();

      /**
       * <pre>
       * The time at which the packets entered the caclulator node.
       * </pre>
       *
       * <code>optional int64 start_time = 4;</code>
       */
      boolean hasStartTime();
      /**
       * <pre>
       * The time at which the packets entered the caclulator node.
       * </pre>
       *
       * <code>optional int64 start_time = 4;</code>
       */
      long getStartTime();

      /**
       * <pre>
       * The time at which the packets exited the caclulator node.
       * </pre>
       *
       * <code>optional int64 finish_time = 5;</code>
       */
      boolean hasFinishTime();
      /**
       * <pre>
       * The time at which the packets exited the caclulator node.
       * </pre>
       *
       * <code>optional int64 finish_time = 5;</code>
       */
      long getFinishTime();

      /**
       * <pre>
       * The timing data for each input packet.
       * </pre>
       *
       * <code>repeated .mediapipe.GraphTrace.StreamTrace input_trace = 6;</code>
       */
      java.util.List<com.google.mediapipe.proto.CalculatorProfileProto.GraphTrace.StreamTrace> 
          getInputTraceList();
      /**
       * <pre>
       * The timing data for each input packet.
       * </pre>
       *
       * <code>repeated .mediapipe.GraphTrace.StreamTrace input_trace = 6;</code>
       */
      com.google.mediapipe.proto.CalculatorProfileProto.GraphTrace.StreamTrace getInputTrace(int index);
      /**
       * <pre>
       * The timing data for each input packet.
       * </pre>
       *
       * <code>repeated .mediapipe.GraphTrace.StreamTrace input_trace = 6;</code>
       */
      int getInputTraceCount();
      /**
       * <pre>
       * The timing data for each input packet.
       * </pre>
       *
       * <code>repeated .mediapipe.GraphTrace.StreamTrace input_trace = 6;</code>
       */
      java.util.List<? extends com.google.mediapipe.proto.CalculatorProfileProto.GraphTrace.StreamTraceOrBuilder> 
          getInputTraceOrBuilderList();
      /**
       * <pre>
       * The timing data for each input packet.
       * </pre>
       *
       * <code>repeated .mediapipe.GraphTrace.StreamTrace input_trace = 6;</code>
       */
      com.google.mediapipe.proto.CalculatorProfileProto.GraphTrace.StreamTraceOrBuilder getInputTraceOrBuilder(
          int index);

      /**
       * <pre>
       * The identifying timetamp and stream_id for each output packet.
       * </pre>
       *
       * <code>repeated .mediapipe.GraphTrace.StreamTrace output_trace = 7;</code>
       */
      java.util.List<com.google.mediapipe.proto.CalculatorProfileProto.GraphTrace.StreamTrace> 
          getOutputTraceList();
      /**
       * <pre>
       * The identifying timetamp and stream_id for each output packet.
       * </pre>
       *
       * <code>repeated .mediapipe.GraphTrace.StreamTrace output_trace = 7;</code>
       */
      com.google.mediapipe.proto.CalculatorProfileProto.GraphTrace.StreamTrace getOutputTrace(int index);
      /**
       * <pre>
       * The identifying timetamp and stream_id for each output packet.
       * </pre>
       *
       * <code>repeated .mediapipe.GraphTrace.StreamTrace output_trace = 7;</code>
       */
      int getOutputTraceCount();
      /**
       * <pre>
       * The identifying timetamp and stream_id for each output packet.
       * </pre>
       *
       * <code>repeated .mediapipe.GraphTrace.StreamTrace output_trace = 7;</code>
       */
      java.util.List<? extends com.google.mediapipe.proto.CalculatorProfileProto.GraphTrace.StreamTraceOrBuilder> 
          getOutputTraceOrBuilderList();
      /**
       * <pre>
       * The identifying timetamp and stream_id for each output packet.
       * </pre>
       *
       * <code>repeated .mediapipe.GraphTrace.StreamTrace output_trace = 7;</code>
       */
      com.google.mediapipe.proto.CalculatorProfileProto.GraphTrace.StreamTraceOrBuilder getOutputTraceOrBuilder(
          int index);

      /**
       * <pre>
       * An identifier for the current process thread.
       * </pre>
       *
       * <code>optional int32 thread_id = 8;</code>
       */
      boolean hasThreadId();
      /**
       * <pre>
       * An identifier for the current process thread.
       * </pre>
       *
       * <code>optional int32 thread_id = 8;</code>
       */
      int getThreadId();
    }
    /**
     * <pre>
     * The timing for one packet set being processed at one caclulator node.
     * </pre>
     *
     * Protobuf type {@code mediapipe.GraphTrace.CalculatorTrace}
     */
    public  static final class CalculatorTrace extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:mediapipe.GraphTrace.CalculatorTrace)
        CalculatorTraceOrBuilder {
      // Use CalculatorTrace.newBuilder() to construct.
      private CalculatorTrace(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private CalculatorTrace() {
        nodeId_ = 0;
        inputTimestamp_ = 0L;
        eventType_ = 0;
        startTime_ = 0L;
        finishTime_ = 0L;
        inputTrace_ = java.util.Collections.emptyList();
        outputTrace_ = java.util.Collections.emptyList();
        threadId_ = 0;
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private CalculatorTrace(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 8: {
                bitField0_ |= 0x00000001;
                nodeId_ = input.readInt32();
                break;
              }
              case 16: {
                bitField0_ |= 0x00000002;
                inputTimestamp_ = input.readInt64();
                break;
              }
              case 24: {
                int rawValue = input.readEnum();
                com.google.mediapipe.proto.CalculatorProfileProto.GraphTrace.EventType value = com.google.mediapipe.proto.CalculatorProfileProto.GraphTrace.EventType.valueOf(rawValue);
                if (value == null) {
                  unknownFields.mergeVarintField(3, rawValue);
                } else {
                  bitField0_ |= 0x00000004;
                  eventType_ = rawValue;
                }
                break;
              }
              case 32: {
                bitField0_ |= 0x00000008;
                startTime_ = input.readInt64();
                break;
              }
              case 40: {
                bitField0_ |= 0x00000010;
                finishTime_ = input.readInt64();
                break;
              }
              case 50: {
                if (!((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
                  inputTrace_ = new java.util.ArrayList<com.google.mediapipe.proto.CalculatorProfileProto.GraphTrace.StreamTrace>();
                  mutable_bitField0_ |= 0x00000020;
                }
                inputTrace_.add(
                    input.readMessage(com.google.mediapipe.proto.CalculatorProfileProto.GraphTrace.StreamTrace.PARSER, extensionRegistry));
                break;
              }
              case 58: {
                if (!((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
                  outputTrace_ = new java.util.ArrayList<com.google.mediapipe.proto.CalculatorProfileProto.GraphTrace.StreamTrace>();
                  mutable_bitField0_ |= 0x00000040;
                }
                outputTrace_.add(
                    input.readMessage(com.google.mediapipe.proto.CalculatorProfileProto.GraphTrace.StreamTrace.PARSER, extensionRegistry));
                break;
              }
              case 64: {
                bitField0_ |= 0x00000020;
                threadId_ = input.readInt32();
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          if (((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
            inputTrace_ = java.util.Collections.unmodifiableList(inputTrace_);
          }
          if (((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
            outputTrace_ = java.util.Collections.unmodifiableList(outputTrace_);
          }
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.google.mediapipe.proto.CalculatorProfileProto.internal_static_mediapipe_GraphTrace_CalculatorTrace_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.google.mediapipe.proto.CalculatorProfileProto.internal_static_mediapipe_GraphTrace_CalculatorTrace_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.google.mediapipe.proto.CalculatorProfileProto.GraphTrace.CalculatorTrace.class, com.google.mediapipe.proto.CalculatorProfileProto.GraphTrace.CalculatorTrace.Builder.class);
      }

      private int bitField0_;
      public static final int NODE_ID_FIELD_NUMBER = 1;
      private int nodeId_;
      /**
       * <pre>
       * The index of the calculator node in the calculator_name list.
       * </pre>
       *
       * <code>optional int32 node_id = 1;</code>
       */
      public boolean hasNodeId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <pre>
       * The index of the calculator node in the calculator_name list.
       * </pre>
       *
       * <code>optional int32 node_id = 1;</code>
       */
      public int getNodeId() {
        return nodeId_;
      }

      public static final int INPUT_TIMESTAMP_FIELD_NUMBER = 2;
      private long inputTimestamp_;
      /**
       * <pre>
       * The input timestamp during Open, Process, or Close.
       * </pre>
       *
       * <code>optional int64 input_timestamp = 2;</code>
       */
      public boolean hasInputTimestamp() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <pre>
       * The input timestamp during Open, Process, or Close.
       * </pre>
       *
       * <code>optional int64 input_timestamp = 2;</code>
       */
      public long getInputTimestamp() {
        return inputTimestamp_;
      }

      public static final int EVENT_TYPE_FIELD_NUMBER = 3;
      private int eventType_;
      /**
       * <pre>
       * The kind of event, 1=Open, 2=Process, 3=Close, etc.
       * </pre>
       *
       * <code>optional .mediapipe.GraphTrace.EventType event_type = 3;</code>
       */
      public boolean hasEventType() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <pre>
       * The kind of event, 1=Open, 2=Process, 3=Close, etc.
       * </pre>
       *
       * <code>optional .mediapipe.GraphTrace.EventType event_type = 3;</code>
       */
      public com.google.mediapipe.proto.CalculatorProfileProto.GraphTrace.EventType getEventType() {
        com.google.mediapipe.proto.CalculatorProfileProto.GraphTrace.EventType result = com.google.mediapipe.proto.CalculatorProfileProto.GraphTrace.EventType.valueOf(eventType_);
        return result == null ? com.google.mediapipe.proto.CalculatorProfileProto.GraphTrace.EventType.UNKNOWN : result;
      }

      public static final int START_TIME_FIELD_NUMBER = 4;
      private long startTime_;
      /**
       * <pre>
       * The time at which the packets entered the caclulator node.
       * </pre>
       *
       * <code>optional int64 start_time = 4;</code>
       */
      public boolean hasStartTime() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <pre>
       * The time at which the packets entered the caclulator node.
       * </pre>
       *
       * <code>optional int64 start_time = 4;</code>
       */
      public long getStartTime() {
        return startTime_;
      }

      public static final int FINISH_TIME_FIELD_NUMBER = 5;
      private long finishTime_;
      /**
       * <pre>
       * The time at which the packets exited the caclulator node.
       * </pre>
       *
       * <code>optional int64 finish_time = 5;</code>
       */
      public boolean hasFinishTime() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <pre>
       * The time at which the packets exited the caclulator node.
       * </pre>
       *
       * <code>optional int64 finish_time = 5;</code>
       */
      public long getFinishTime() {
        return finishTime_;
      }

      public static final int INPUT_TRACE_FIELD_NUMBER = 6;
      private java.util.List<com.google.mediapipe.proto.CalculatorProfileProto.GraphTrace.StreamTrace> inputTrace_;
      /**
       * <pre>
       * The timing data for each input packet.
       * </pre>
       *
       * <code>repeated .mediapipe.GraphTrace.StreamTrace input_trace = 6;</code>
       */
      public java.util.List<com.google.mediapipe.proto.CalculatorProfileProto.GraphTrace.StreamTrace> getInputTraceList() {
        return inputTrace_;
      }
      /**
       * <pre>
       * The timing data for each input packet.
       * </pre>
       *
       * <code>repeated .mediapipe.GraphTrace.StreamTrace input_trace = 6;</code>
       */
      public java.util.List<? extends com.google.mediapipe.proto.CalculatorProfileProto.GraphTrace.StreamTraceOrBuilder> 
          getInputTraceOrBuilderList() {
        return inputTrace_;
      }
      /**
       * <pre>
       * The timing data for each input packet.
       * </pre>
       *
       * <code>repeated .mediapipe.GraphTrace.StreamTrace input_trace = 6;</code>
       */
      public int getInputTraceCount() {
        return inputTrace_.size();
      }
      /**
       * <pre>
       * The timing data for each input packet.
       * </pre>
       *
       * <code>repeated .mediapipe.GraphTrace.StreamTrace input_trace = 6;</code>
       */
      public com.google.mediapipe.proto.CalculatorProfileProto.GraphTrace.StreamTrace getInputTrace(int index) {
        return inputTrace_.get(index);
      }
      /**
       * <pre>
       * The timing data for each input packet.
       * </pre>
       *
       * <code>repeated .mediapipe.GraphTrace.StreamTrace input_trace = 6;</code>
       */
      public com.google.mediapipe.proto.CalculatorProfileProto.GraphTrace.StreamTraceOrBuilder getInputTraceOrBuilder(
          int index) {
        return inputTrace_.get(index);
      }

      public static final int OUTPUT_TRACE_FIELD_NUMBER = 7;
      private java.util.List<com.google.mediapipe.proto.CalculatorProfileProto.GraphTrace.StreamTrace> outputTrace_;
      /**
       * <pre>
       * The identifying timetamp and stream_id for each output packet.
       * </pre>
       *
       * <code>repeated .mediapipe.GraphTrace.StreamTrace output_trace = 7;</code>
       */
      public java.util.List<com.google.mediapipe.proto.CalculatorProfileProto.GraphTrace.StreamTrace> getOutputTraceList() {
        return outputTrace_;
      }
      /**
       * <pre>
       * The identifying timetamp and stream_id for each output packet.
       * </pre>
       *
       * <code>repeated .mediapipe.GraphTrace.StreamTrace output_trace = 7;</code>
       */
      public java.util.List<? extends com.google.mediapipe.proto.CalculatorProfileProto.GraphTrace.StreamTraceOrBuilder> 
          getOutputTraceOrBuilderList() {
        return outputTrace_;
      }
      /**
       * <pre>
       * The identifying timetamp and stream_id for each output packet.
       * </pre>
       *
       * <code>repeated .mediapipe.GraphTrace.StreamTrace output_trace = 7;</code>
       */
      public int getOutputTraceCount() {
        return outputTrace_.size();
      }
      /**
       * <pre>
       * The identifying timetamp and stream_id for each output packet.
       * </pre>
       *
       * <code>repeated .mediapipe.GraphTrace.StreamTrace output_trace = 7;</code>
       */
      public com.google.mediapipe.proto.CalculatorProfileProto.GraphTrace.StreamTrace getOutputTrace(int index) {
        return outputTrace_.get(index);
      }
      /**
       * <pre>
       * The identifying timetamp and stream_id for each output packet.
       * </pre>
       *
       * <code>repeated .mediapipe.GraphTrace.StreamTrace output_trace = 7;</code>
       */
      public com.google.mediapipe.proto.CalculatorProfileProto.GraphTrace.StreamTraceOrBuilder getOutputTraceOrBuilder(
          int index) {
        return outputTrace_.get(index);
      }

      public static final int THREAD_ID_FIELD_NUMBER = 8;
      private int threadId_;
      /**
       * <pre>
       * An identifier for the current process thread.
       * </pre>
       *
       * <code>optional int32 thread_id = 8;</code>
       */
      public boolean hasThreadId() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <pre>
       * An identifier for the current process thread.
       * </pre>
       *
       * <code>optional int32 thread_id = 8;</code>
       */
      public int getThreadId() {
        return threadId_;
      }

      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeInt32(1, nodeId_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeInt64(2, inputTimestamp_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          output.writeEnum(3, eventType_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          output.writeInt64(4, startTime_);
        }
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          output.writeInt64(5, finishTime_);
        }
        for (int i = 0; i < inputTrace_.size(); i++) {
          output.writeMessage(6, inputTrace_.get(i));
        }
        for (int i = 0; i < outputTrace_.size(); i++) {
          output.writeMessage(7, outputTrace_.get(i));
        }
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          output.writeInt32(8, threadId_);
        }
        unknownFields.writeTo(output);
      }

      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(1, nodeId_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt64Size(2, inputTimestamp_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(3, eventType_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt64Size(4, startTime_);
        }
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt64Size(5, finishTime_);
        }
        for (int i = 0; i < inputTrace_.size(); i++) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(6, inputTrace_.get(i));
        }
        for (int i = 0; i < outputTrace_.size(); i++) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(7, outputTrace_.get(i));
        }
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(8, threadId_);
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof com.google.mediapipe.proto.CalculatorProfileProto.GraphTrace.CalculatorTrace)) {
          return super.equals(obj);
        }
        com.google.mediapipe.proto.CalculatorProfileProto.GraphTrace.CalculatorTrace other = (com.google.mediapipe.proto.CalculatorProfileProto.GraphTrace.CalculatorTrace) obj;

        boolean result = true;
        result = result && (hasNodeId() == other.hasNodeId());
        if (hasNodeId()) {
          result = result && (getNodeId()
              == other.getNodeId());
        }
        result = result && (hasInputTimestamp() == other.hasInputTimestamp());
        if (hasInputTimestamp()) {
          result = result && (getInputTimestamp()
              == other.getInputTimestamp());
        }
        result = result && (hasEventType() == other.hasEventType());
        if (hasEventType()) {
          result = result && eventType_ == other.eventType_;
        }
        result = result && (hasStartTime() == other.hasStartTime());
        if (hasStartTime()) {
          result = result && (getStartTime()
              == other.getStartTime());
        }
        result = result && (hasFinishTime() == other.hasFinishTime());
        if (hasFinishTime()) {
          result = result && (getFinishTime()
              == other.getFinishTime());
        }
        result = result && getInputTraceList()
            .equals(other.getInputTraceList());
        result = result && getOutputTraceList()
            .equals(other.getOutputTraceList());
        result = result && (hasThreadId() == other.hasThreadId());
        if (hasThreadId()) {
          result = result && (getThreadId()
              == other.getThreadId());
        }
        result = result && unknownFields.equals(other.unknownFields);
        return result;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptorForType().hashCode();
        if (hasNodeId()) {
          hash = (37 * hash) + NODE_ID_FIELD_NUMBER;
          hash = (53 * hash) + getNodeId();
        }
        if (hasInputTimestamp()) {
          hash = (37 * hash) + INPUT_TIMESTAMP_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
              getInputTimestamp());
        }
        if (hasEventType()) {
          hash = (37 * hash) + EVENT_TYPE_FIELD_NUMBER;
          hash = (53 * hash) + eventType_;
        }
        if (hasStartTime()) {
          hash = (37 * hash) + START_TIME_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
              getStartTime());
        }
        if (hasFinishTime()) {
          hash = (37 * hash) + FINISH_TIME_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
              getFinishTime());
        }
        if (getInputTraceCount() > 0) {
          hash = (37 * hash) + INPUT_TRACE_FIELD_NUMBER;
          hash = (53 * hash) + getInputTraceList().hashCode();
        }
        if (getOutputTraceCount() > 0) {
          hash = (37 * hash) + OUTPUT_TRACE_FIELD_NUMBER;
          hash = (53 * hash) + getOutputTraceList().hashCode();
        }
        if (hasThreadId()) {
          hash = (37 * hash) + THREAD_ID_FIELD_NUMBER;
          hash = (53 * hash) + getThreadId();
        }
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static com.google.mediapipe.proto.CalculatorProfileProto.GraphTrace.CalculatorTrace parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.google.mediapipe.proto.CalculatorProfileProto.GraphTrace.CalculatorTrace parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.google.mediapipe.proto.CalculatorProfileProto.GraphTrace.CalculatorTrace parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.google.mediapipe.proto.CalculatorProfileProto.GraphTrace.CalculatorTrace parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.google.mediapipe.proto.CalculatorProfileProto.GraphTrace.CalculatorTrace parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static com.google.mediapipe.proto.CalculatorProfileProto.GraphTrace.CalculatorTrace parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static com.google.mediapipe.proto.CalculatorProfileProto.GraphTrace.CalculatorTrace parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static com.google.mediapipe.proto.CalculatorProfileProto.GraphTrace.CalculatorTrace parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static com.google.mediapipe.proto.CalculatorProfileProto.GraphTrace.CalculatorTrace parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static com.google.mediapipe.proto.CalculatorProfileProto.GraphTrace.CalculatorTrace parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(com.google.mediapipe.proto.CalculatorProfileProto.GraphTrace.CalculatorTrace prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * <pre>
       * The timing for one packet set being processed at one caclulator node.
       * </pre>
       *
       * Protobuf type {@code mediapipe.GraphTrace.CalculatorTrace}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:mediapipe.GraphTrace.CalculatorTrace)
          com.google.mediapipe.proto.CalculatorProfileProto.GraphTrace.CalculatorTraceOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return com.google.mediapipe.proto.CalculatorProfileProto.internal_static_mediapipe_GraphTrace_CalculatorTrace_descriptor;
        }

        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return com.google.mediapipe.proto.CalculatorProfileProto.internal_static_mediapipe_GraphTrace_CalculatorTrace_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  com.google.mediapipe.proto.CalculatorProfileProto.GraphTrace.CalculatorTrace.class, com.google.mediapipe.proto.CalculatorProfileProto.GraphTrace.CalculatorTrace.Builder.class);
        }

        // Construct using com.google.mediapipe.proto.CalculatorProfileProto.GraphTrace.CalculatorTrace.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
            getInputTraceFieldBuilder();
            getOutputTraceFieldBuilder();
          }
        }
        public Builder clear() {
          super.clear();
          nodeId_ = 0;
          bitField0_ = (bitField0_ & ~0x00000001);
          inputTimestamp_ = 0L;
          bitField0_ = (bitField0_ & ~0x00000002);
          eventType_ = 0;
          bitField0_ = (bitField0_ & ~0x00000004);
          startTime_ = 0L;
          bitField0_ = (bitField0_ & ~0x00000008);
          finishTime_ = 0L;
          bitField0_ = (bitField0_ & ~0x00000010);
          if (inputTraceBuilder_ == null) {
            inputTrace_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000020);
          } else {
            inputTraceBuilder_.clear();
          }
          if (outputTraceBuilder_ == null) {
            outputTrace_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000040);
          } else {
            outputTraceBuilder_.clear();
          }
          threadId_ = 0;
          bitField0_ = (bitField0_ & ~0x00000080);
          return this;
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return com.google.mediapipe.proto.CalculatorProfileProto.internal_static_mediapipe_GraphTrace_CalculatorTrace_descriptor;
        }

        public com.google.mediapipe.proto.CalculatorProfileProto.GraphTrace.CalculatorTrace getDefaultInstanceForType() {
          return com.google.mediapipe.proto.CalculatorProfileProto.GraphTrace.CalculatorTrace.getDefaultInstance();
        }

        public com.google.mediapipe.proto.CalculatorProfileProto.GraphTrace.CalculatorTrace build() {
          com.google.mediapipe.proto.CalculatorProfileProto.GraphTrace.CalculatorTrace result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public com.google.mediapipe.proto.CalculatorProfileProto.GraphTrace.CalculatorTrace buildPartial() {
          com.google.mediapipe.proto.CalculatorProfileProto.GraphTrace.CalculatorTrace result = new com.google.mediapipe.proto.CalculatorProfileProto.GraphTrace.CalculatorTrace(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.nodeId_ = nodeId_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.inputTimestamp_ = inputTimestamp_;
          if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
            to_bitField0_ |= 0x00000004;
          }
          result.eventType_ = eventType_;
          if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
            to_bitField0_ |= 0x00000008;
          }
          result.startTime_ = startTime_;
          if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
            to_bitField0_ |= 0x00000010;
          }
          result.finishTime_ = finishTime_;
          if (inputTraceBuilder_ == null) {
            if (((bitField0_ & 0x00000020) == 0x00000020)) {
              inputTrace_ = java.util.Collections.unmodifiableList(inputTrace_);
              bitField0_ = (bitField0_ & ~0x00000020);
            }
            result.inputTrace_ = inputTrace_;
          } else {
            result.inputTrace_ = inputTraceBuilder_.build();
          }
          if (outputTraceBuilder_ == null) {
            if (((bitField0_ & 0x00000040) == 0x00000040)) {
              outputTrace_ = java.util.Collections.unmodifiableList(outputTrace_);
              bitField0_ = (bitField0_ & ~0x00000040);
            }
            result.outputTrace_ = outputTrace_;
          } else {
            result.outputTrace_ = outputTraceBuilder_.build();
          }
          if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
            to_bitField0_ |= 0x00000020;
          }
          result.threadId_ = threadId_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder clone() {
          return (Builder) super.clone();
        }
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            Object value) {
          return (Builder) super.setField(field, value);
        }
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return (Builder) super.clearField(field);
        }
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return (Builder) super.clearOneof(oneof);
        }
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, Object value) {
          return (Builder) super.setRepeatedField(field, index, value);
        }
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            Object value) {
          return (Builder) super.addRepeatedField(field, value);
        }
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof com.google.mediapipe.proto.CalculatorProfileProto.GraphTrace.CalculatorTrace) {
            return mergeFrom((com.google.mediapipe.proto.CalculatorProfileProto.GraphTrace.CalculatorTrace)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(com.google.mediapipe.proto.CalculatorProfileProto.GraphTrace.CalculatorTrace other) {
          if (other == com.google.mediapipe.proto.CalculatorProfileProto.GraphTrace.CalculatorTrace.getDefaultInstance()) return this;
          if (other.hasNodeId()) {
            setNodeId(other.getNodeId());
          }
          if (other.hasInputTimestamp()) {
            setInputTimestamp(other.getInputTimestamp());
          }
          if (other.hasEventType()) {
            setEventType(other.getEventType());
          }
          if (other.hasStartTime()) {
            setStartTime(other.getStartTime());
          }
          if (other.hasFinishTime()) {
            setFinishTime(other.getFinishTime());
          }
          if (inputTraceBuilder_ == null) {
            if (!other.inputTrace_.isEmpty()) {
              if (inputTrace_.isEmpty()) {
                inputTrace_ = other.inputTrace_;
                bitField0_ = (bitField0_ & ~0x00000020);
              } else {
                ensureInputTraceIsMutable();
                inputTrace_.addAll(other.inputTrace_);
              }
              onChanged();
            }
          } else {
            if (!other.inputTrace_.isEmpty()) {
              if (inputTraceBuilder_.isEmpty()) {
                inputTraceBuilder_.dispose();
                inputTraceBuilder_ = null;
                inputTrace_ = other.inputTrace_;
                bitField0_ = (bitField0_ & ~0x00000020);
                inputTraceBuilder_ = 
                  com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                     getInputTraceFieldBuilder() : null;
              } else {
                inputTraceBuilder_.addAllMessages(other.inputTrace_);
              }
            }
          }
          if (outputTraceBuilder_ == null) {
            if (!other.outputTrace_.isEmpty()) {
              if (outputTrace_.isEmpty()) {
                outputTrace_ = other.outputTrace_;
                bitField0_ = (bitField0_ & ~0x00000040);
              } else {
                ensureOutputTraceIsMutable();
                outputTrace_.addAll(other.outputTrace_);
              }
              onChanged();
            }
          } else {
            if (!other.outputTrace_.isEmpty()) {
              if (outputTraceBuilder_.isEmpty()) {
                outputTraceBuilder_.dispose();
                outputTraceBuilder_ = null;
                outputTrace_ = other.outputTrace_;
                bitField0_ = (bitField0_ & ~0x00000040);
                outputTraceBuilder_ = 
                  com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                     getOutputTraceFieldBuilder() : null;
              } else {
                outputTraceBuilder_.addAllMessages(other.outputTrace_);
              }
            }
          }
          if (other.hasThreadId()) {
            setThreadId(other.getThreadId());
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          com.google.mediapipe.proto.CalculatorProfileProto.GraphTrace.CalculatorTrace parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (com.google.mediapipe.proto.CalculatorProfileProto.GraphTrace.CalculatorTrace) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private int nodeId_ ;
        /**
         * <pre>
         * The index of the calculator node in the calculator_name list.
         * </pre>
         *
         * <code>optional int32 node_id = 1;</code>
         */
        public boolean hasNodeId() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <pre>
         * The index of the calculator node in the calculator_name list.
         * </pre>
         *
         * <code>optional int32 node_id = 1;</code>
         */
        public int getNodeId() {
          return nodeId_;
        }
        /**
         * <pre>
         * The index of the calculator node in the calculator_name list.
         * </pre>
         *
         * <code>optional int32 node_id = 1;</code>
         */
        public Builder setNodeId(int value) {
          bitField0_ |= 0x00000001;
          nodeId_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * The index of the calculator node in the calculator_name list.
         * </pre>
         *
         * <code>optional int32 node_id = 1;</code>
         */
        public Builder clearNodeId() {
          bitField0_ = (bitField0_ & ~0x00000001);
          nodeId_ = 0;
          onChanged();
          return this;
        }

        private long inputTimestamp_ ;
        /**
         * <pre>
         * The input timestamp during Open, Process, or Close.
         * </pre>
         *
         * <code>optional int64 input_timestamp = 2;</code>
         */
        public boolean hasInputTimestamp() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <pre>
         * The input timestamp during Open, Process, or Close.
         * </pre>
         *
         * <code>optional int64 input_timestamp = 2;</code>
         */
        public long getInputTimestamp() {
          return inputTimestamp_;
        }
        /**
         * <pre>
         * The input timestamp during Open, Process, or Close.
         * </pre>
         *
         * <code>optional int64 input_timestamp = 2;</code>
         */
        public Builder setInputTimestamp(long value) {
          bitField0_ |= 0x00000002;
          inputTimestamp_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * The input timestamp during Open, Process, or Close.
         * </pre>
         *
         * <code>optional int64 input_timestamp = 2;</code>
         */
        public Builder clearInputTimestamp() {
          bitField0_ = (bitField0_ & ~0x00000002);
          inputTimestamp_ = 0L;
          onChanged();
          return this;
        }

        private int eventType_ = 0;
        /**
         * <pre>
         * The kind of event, 1=Open, 2=Process, 3=Close, etc.
         * </pre>
         *
         * <code>optional .mediapipe.GraphTrace.EventType event_type = 3;</code>
         */
        public boolean hasEventType() {
          return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        /**
         * <pre>
         * The kind of event, 1=Open, 2=Process, 3=Close, etc.
         * </pre>
         *
         * <code>optional .mediapipe.GraphTrace.EventType event_type = 3;</code>
         */
        public com.google.mediapipe.proto.CalculatorProfileProto.GraphTrace.EventType getEventType() {
          com.google.mediapipe.proto.CalculatorProfileProto.GraphTrace.EventType result = com.google.mediapipe.proto.CalculatorProfileProto.GraphTrace.EventType.valueOf(eventType_);
          return result == null ? com.google.mediapipe.proto.CalculatorProfileProto.GraphTrace.EventType.UNKNOWN : result;
        }
        /**
         * <pre>
         * The kind of event, 1=Open, 2=Process, 3=Close, etc.
         * </pre>
         *
         * <code>optional .mediapipe.GraphTrace.EventType event_type = 3;</code>
         */
        public Builder setEventType(com.google.mediapipe.proto.CalculatorProfileProto.GraphTrace.EventType value) {
          if (value == null) {
            throw new NullPointerException();
          }
          bitField0_ |= 0x00000004;
          eventType_ = value.getNumber();
          onChanged();
          return this;
        }
        /**
         * <pre>
         * The kind of event, 1=Open, 2=Process, 3=Close, etc.
         * </pre>
         *
         * <code>optional .mediapipe.GraphTrace.EventType event_type = 3;</code>
         */
        public Builder clearEventType() {
          bitField0_ = (bitField0_ & ~0x00000004);
          eventType_ = 0;
          onChanged();
          return this;
        }

        private long startTime_ ;
        /**
         * <pre>
         * The time at which the packets entered the caclulator node.
         * </pre>
         *
         * <code>optional int64 start_time = 4;</code>
         */
        public boolean hasStartTime() {
          return ((bitField0_ & 0x00000008) == 0x00000008);
        }
        /**
         * <pre>
         * The time at which the packets entered the caclulator node.
         * </pre>
         *
         * <code>optional int64 start_time = 4;</code>
         */
        public long getStartTime() {
          return startTime_;
        }
        /**
         * <pre>
         * The time at which the packets entered the caclulator node.
         * </pre>
         *
         * <code>optional int64 start_time = 4;</code>
         */
        public Builder setStartTime(long value) {
          bitField0_ |= 0x00000008;
          startTime_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * The time at which the packets entered the caclulator node.
         * </pre>
         *
         * <code>optional int64 start_time = 4;</code>
         */
        public Builder clearStartTime() {
          bitField0_ = (bitField0_ & ~0x00000008);
          startTime_ = 0L;
          onChanged();
          return this;
        }

        private long finishTime_ ;
        /**
         * <pre>
         * The time at which the packets exited the caclulator node.
         * </pre>
         *
         * <code>optional int64 finish_time = 5;</code>
         */
        public boolean hasFinishTime() {
          return ((bitField0_ & 0x00000010) == 0x00000010);
        }
        /**
         * <pre>
         * The time at which the packets exited the caclulator node.
         * </pre>
         *
         * <code>optional int64 finish_time = 5;</code>
         */
        public long getFinishTime() {
          return finishTime_;
        }
        /**
         * <pre>
         * The time at which the packets exited the caclulator node.
         * </pre>
         *
         * <code>optional int64 finish_time = 5;</code>
         */
        public Builder setFinishTime(long value) {
          bitField0_ |= 0x00000010;
          finishTime_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * The time at which the packets exited the caclulator node.
         * </pre>
         *
         * <code>optional int64 finish_time = 5;</code>
         */
        public Builder clearFinishTime() {
          bitField0_ = (bitField0_ & ~0x00000010);
          finishTime_ = 0L;
          onChanged();
          return this;
        }

        private java.util.List<com.google.mediapipe.proto.CalculatorProfileProto.GraphTrace.StreamTrace> inputTrace_ =
          java.util.Collections.emptyList();
        private void ensureInputTraceIsMutable() {
          if (!((bitField0_ & 0x00000020) == 0x00000020)) {
            inputTrace_ = new java.util.ArrayList<com.google.mediapipe.proto.CalculatorProfileProto.GraphTrace.StreamTrace>(inputTrace_);
            bitField0_ |= 0x00000020;
           }
        }

        private com.google.protobuf.RepeatedFieldBuilderV3<
            com.google.mediapipe.proto.CalculatorProfileProto.GraphTrace.StreamTrace, com.google.mediapipe.proto.CalculatorProfileProto.GraphTrace.StreamTrace.Builder, com.google.mediapipe.proto.CalculatorProfileProto.GraphTrace.StreamTraceOrBuilder> inputTraceBuilder_;

        /**
         * <pre>
         * The timing data for each input packet.
         * </pre>
         *
         * <code>repeated .mediapipe.GraphTrace.StreamTrace input_trace = 6;</code>
         */
        public java.util.List<com.google.mediapipe.proto.CalculatorProfileProto.GraphTrace.StreamTrace> getInputTraceList() {
          if (inputTraceBuilder_ == null) {
            return java.util.Collections.unmodifiableList(inputTrace_);
          } else {
            return inputTraceBuilder_.getMessageList();
          }
        }
        /**
         * <pre>
         * The timing data for each input packet.
         * </pre>
         *
         * <code>repeated .mediapipe.GraphTrace.StreamTrace input_trace = 6;</code>
         */
        public int getInputTraceCount() {
          if (inputTraceBuilder_ == null) {
            return inputTrace_.size();
          } else {
            return inputTraceBuilder_.getCount();
          }
        }
        /**
         * <pre>
         * The timing data for each input packet.
         * </pre>
         *
         * <code>repeated .mediapipe.GraphTrace.StreamTrace input_trace = 6;</code>
         */
        public com.google.mediapipe.proto.CalculatorProfileProto.GraphTrace.StreamTrace getInputTrace(int index) {
          if (inputTraceBuilder_ == null) {
            return inputTrace_.get(index);
          } else {
            return inputTraceBuilder_.getMessage(index);
          }
        }
        /**
         * <pre>
         * The timing data for each input packet.
         * </pre>
         *
         * <code>repeated .mediapipe.GraphTrace.StreamTrace input_trace = 6;</code>
         */
        public Builder setInputTrace(
            int index, com.google.mediapipe.proto.CalculatorProfileProto.GraphTrace.StreamTrace value) {
          if (inputTraceBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureInputTraceIsMutable();
            inputTrace_.set(index, value);
            onChanged();
          } else {
            inputTraceBuilder_.setMessage(index, value);
          }
          return this;
        }
        /**
         * <pre>
         * The timing data for each input packet.
         * </pre>
         *
         * <code>repeated .mediapipe.GraphTrace.StreamTrace input_trace = 6;</code>
         */
        public Builder setInputTrace(
            int index, com.google.mediapipe.proto.CalculatorProfileProto.GraphTrace.StreamTrace.Builder builderForValue) {
          if (inputTraceBuilder_ == null) {
            ensureInputTraceIsMutable();
            inputTrace_.set(index, builderForValue.build());
            onChanged();
          } else {
            inputTraceBuilder_.setMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <pre>
         * The timing data for each input packet.
         * </pre>
         *
         * <code>repeated .mediapipe.GraphTrace.StreamTrace input_trace = 6;</code>
         */
        public Builder addInputTrace(com.google.mediapipe.proto.CalculatorProfileProto.GraphTrace.StreamTrace value) {
          if (inputTraceBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureInputTraceIsMutable();
            inputTrace_.add(value);
            onChanged();
          } else {
            inputTraceBuilder_.addMessage(value);
          }
          return this;
        }
        /**
         * <pre>
         * The timing data for each input packet.
         * </pre>
         *
         * <code>repeated .mediapipe.GraphTrace.StreamTrace input_trace = 6;</code>
         */
        public Builder addInputTrace(
            int index, com.google.mediapipe.proto.CalculatorProfileProto.GraphTrace.StreamTrace value) {
          if (inputTraceBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureInputTraceIsMutable();
            inputTrace_.add(index, value);
            onChanged();
          } else {
            inputTraceBuilder_.addMessage(index, value);
          }
          return this;
        }
        /**
         * <pre>
         * The timing data for each input packet.
         * </pre>
         *
         * <code>repeated .mediapipe.GraphTrace.StreamTrace input_trace = 6;</code>
         */
        public Builder addInputTrace(
            com.google.mediapipe.proto.CalculatorProfileProto.GraphTrace.StreamTrace.Builder builderForValue) {
          if (inputTraceBuilder_ == null) {
            ensureInputTraceIsMutable();
            inputTrace_.add(builderForValue.build());
            onChanged();
          } else {
            inputTraceBuilder_.addMessage(builderForValue.build());
          }
          return this;
        }
        /**
         * <pre>
         * The timing data for each input packet.
         * </pre>
         *
         * <code>repeated .mediapipe.GraphTrace.StreamTrace input_trace = 6;</code>
         */
        public Builder addInputTrace(
            int index, com.google.mediapipe.proto.CalculatorProfileProto.GraphTrace.StreamTrace.Builder builderForValue) {
          if (inputTraceBuilder_ == null) {
            ensureInputTraceIsMutable();
            inputTrace_.add(index, builderForValue.build());
            onChanged();
          } else {
            inputTraceBuilder_.addMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <pre>
         * The timing data for each input packet.
         * </pre>
         *
         * <code>repeated .mediapipe.GraphTrace.StreamTrace input_trace = 6;</code>
         */
        public Builder addAllInputTrace(
            java.lang.Iterable<? extends com.google.mediapipe.proto.CalculatorProfileProto.GraphTrace.StreamTrace> values) {
          if (inputTraceBuilder_ == null) {
            ensureInputTraceIsMutable();
            com.google.protobuf.AbstractMessageLite.Builder.addAll(
                values, inputTrace_);
            onChanged();
          } else {
            inputTraceBuilder_.addAllMessages(values);
          }
          return this;
        }
        /**
         * <pre>
         * The timing data for each input packet.
         * </pre>
         *
         * <code>repeated .mediapipe.GraphTrace.StreamTrace input_trace = 6;</code>
         */
        public Builder clearInputTrace() {
          if (inputTraceBuilder_ == null) {
            inputTrace_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000020);
            onChanged();
          } else {
            inputTraceBuilder_.clear();
          }
          return this;
        }
        /**
         * <pre>
         * The timing data for each input packet.
         * </pre>
         *
         * <code>repeated .mediapipe.GraphTrace.StreamTrace input_trace = 6;</code>
         */
        public Builder removeInputTrace(int index) {
          if (inputTraceBuilder_ == null) {
            ensureInputTraceIsMutable();
            inputTrace_.remove(index);
            onChanged();
          } else {
            inputTraceBuilder_.remove(index);
          }
          return this;
        }
        /**
         * <pre>
         * The timing data for each input packet.
         * </pre>
         *
         * <code>repeated .mediapipe.GraphTrace.StreamTrace input_trace = 6;</code>
         */
        public com.google.mediapipe.proto.CalculatorProfileProto.GraphTrace.StreamTrace.Builder getInputTraceBuilder(
            int index) {
          return getInputTraceFieldBuilder().getBuilder(index);
        }
        /**
         * <pre>
         * The timing data for each input packet.
         * </pre>
         *
         * <code>repeated .mediapipe.GraphTrace.StreamTrace input_trace = 6;</code>
         */
        public com.google.mediapipe.proto.CalculatorProfileProto.GraphTrace.StreamTraceOrBuilder getInputTraceOrBuilder(
            int index) {
          if (inputTraceBuilder_ == null) {
            return inputTrace_.get(index);  } else {
            return inputTraceBuilder_.getMessageOrBuilder(index);
          }
        }
        /**
         * <pre>
         * The timing data for each input packet.
         * </pre>
         *
         * <code>repeated .mediapipe.GraphTrace.StreamTrace input_trace = 6;</code>
         */
        public java.util.List<? extends com.google.mediapipe.proto.CalculatorProfileProto.GraphTrace.StreamTraceOrBuilder> 
             getInputTraceOrBuilderList() {
          if (inputTraceBuilder_ != null) {
            return inputTraceBuilder_.getMessageOrBuilderList();
          } else {
            return java.util.Collections.unmodifiableList(inputTrace_);
          }
        }
        /**
         * <pre>
         * The timing data for each input packet.
         * </pre>
         *
         * <code>repeated .mediapipe.GraphTrace.StreamTrace input_trace = 6;</code>
         */
        public com.google.mediapipe.proto.CalculatorProfileProto.GraphTrace.StreamTrace.Builder addInputTraceBuilder() {
          return getInputTraceFieldBuilder().addBuilder(
              com.google.mediapipe.proto.CalculatorProfileProto.GraphTrace.StreamTrace.getDefaultInstance());
        }
        /**
         * <pre>
         * The timing data for each input packet.
         * </pre>
         *
         * <code>repeated .mediapipe.GraphTrace.StreamTrace input_trace = 6;</code>
         */
        public com.google.mediapipe.proto.CalculatorProfileProto.GraphTrace.StreamTrace.Builder addInputTraceBuilder(
            int index) {
          return getInputTraceFieldBuilder().addBuilder(
              index, com.google.mediapipe.proto.CalculatorProfileProto.GraphTrace.StreamTrace.getDefaultInstance());
        }
        /**
         * <pre>
         * The timing data for each input packet.
         * </pre>
         *
         * <code>repeated .mediapipe.GraphTrace.StreamTrace input_trace = 6;</code>
         */
        public java.util.List<com.google.mediapipe.proto.CalculatorProfileProto.GraphTrace.StreamTrace.Builder> 
             getInputTraceBuilderList() {
          return getInputTraceFieldBuilder().getBuilderList();
        }
        private com.google.protobuf.RepeatedFieldBuilderV3<
            com.google.mediapipe.proto.CalculatorProfileProto.GraphTrace.StreamTrace, com.google.mediapipe.proto.CalculatorProfileProto.GraphTrace.StreamTrace.Builder, com.google.mediapipe.proto.CalculatorProfileProto.GraphTrace.StreamTraceOrBuilder> 
            getInputTraceFieldBuilder() {
          if (inputTraceBuilder_ == null) {
            inputTraceBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
                com.google.mediapipe.proto.CalculatorProfileProto.GraphTrace.StreamTrace, com.google.mediapipe.proto.CalculatorProfileProto.GraphTrace.StreamTrace.Builder, com.google.mediapipe.proto.CalculatorProfileProto.GraphTrace.StreamTraceOrBuilder>(
                    inputTrace_,
                    ((bitField0_ & 0x00000020) == 0x00000020),
                    getParentForChildren(),
                    isClean());
            inputTrace_ = null;
          }
          return inputTraceBuilder_;
        }

        private java.util.List<com.google.mediapipe.proto.CalculatorProfileProto.GraphTrace.StreamTrace> outputTrace_ =
          java.util.Collections.emptyList();
        private void ensureOutputTraceIsMutable() {
          if (!((bitField0_ & 0x00000040) == 0x00000040)) {
            outputTrace_ = new java.util.ArrayList<com.google.mediapipe.proto.CalculatorProfileProto.GraphTrace.StreamTrace>(outputTrace_);
            bitField0_ |= 0x00000040;
           }
        }

        private com.google.protobuf.RepeatedFieldBuilderV3<
            com.google.mediapipe.proto.CalculatorProfileProto.GraphTrace.StreamTrace, com.google.mediapipe.proto.CalculatorProfileProto.GraphTrace.StreamTrace.Builder, com.google.mediapipe.proto.CalculatorProfileProto.GraphTrace.StreamTraceOrBuilder> outputTraceBuilder_;

        /**
         * <pre>
         * The identifying timetamp and stream_id for each output packet.
         * </pre>
         *
         * <code>repeated .mediapipe.GraphTrace.StreamTrace output_trace = 7;</code>
         */
        public java.util.List<com.google.mediapipe.proto.CalculatorProfileProto.GraphTrace.StreamTrace> getOutputTraceList() {
          if (outputTraceBuilder_ == null) {
            return java.util.Collections.unmodifiableList(outputTrace_);
          } else {
            return outputTraceBuilder_.getMessageList();
          }
        }
        /**
         * <pre>
         * The identifying timetamp and stream_id for each output packet.
         * </pre>
         *
         * <code>repeated .mediapipe.GraphTrace.StreamTrace output_trace = 7;</code>
         */
        public int getOutputTraceCount() {
          if (outputTraceBuilder_ == null) {
            return outputTrace_.size();
          } else {
            return outputTraceBuilder_.getCount();
          }
        }
        /**
         * <pre>
         * The identifying timetamp and stream_id for each output packet.
         * </pre>
         *
         * <code>repeated .mediapipe.GraphTrace.StreamTrace output_trace = 7;</code>
         */
        public com.google.mediapipe.proto.CalculatorProfileProto.GraphTrace.StreamTrace getOutputTrace(int index) {
          if (outputTraceBuilder_ == null) {
            return outputTrace_.get(index);
          } else {
            return outputTraceBuilder_.getMessage(index);
          }
        }
        /**
         * <pre>
         * The identifying timetamp and stream_id for each output packet.
         * </pre>
         *
         * <code>repeated .mediapipe.GraphTrace.StreamTrace output_trace = 7;</code>
         */
        public Builder setOutputTrace(
            int index, com.google.mediapipe.proto.CalculatorProfileProto.GraphTrace.StreamTrace value) {
          if (outputTraceBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureOutputTraceIsMutable();
            outputTrace_.set(index, value);
            onChanged();
          } else {
            outputTraceBuilder_.setMessage(index, value);
          }
          return this;
        }
        /**
         * <pre>
         * The identifying timetamp and stream_id for each output packet.
         * </pre>
         *
         * <code>repeated .mediapipe.GraphTrace.StreamTrace output_trace = 7;</code>
         */
        public Builder setOutputTrace(
            int index, com.google.mediapipe.proto.CalculatorProfileProto.GraphTrace.StreamTrace.Builder builderForValue) {
          if (outputTraceBuilder_ == null) {
            ensureOutputTraceIsMutable();
            outputTrace_.set(index, builderForValue.build());
            onChanged();
          } else {
            outputTraceBuilder_.setMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <pre>
         * The identifying timetamp and stream_id for each output packet.
         * </pre>
         *
         * <code>repeated .mediapipe.GraphTrace.StreamTrace output_trace = 7;</code>
         */
        public Builder addOutputTrace(com.google.mediapipe.proto.CalculatorProfileProto.GraphTrace.StreamTrace value) {
          if (outputTraceBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureOutputTraceIsMutable();
            outputTrace_.add(value);
            onChanged();
          } else {
            outputTraceBuilder_.addMessage(value);
          }
          return this;
        }
        /**
         * <pre>
         * The identifying timetamp and stream_id for each output packet.
         * </pre>
         *
         * <code>repeated .mediapipe.GraphTrace.StreamTrace output_trace = 7;</code>
         */
        public Builder addOutputTrace(
            int index, com.google.mediapipe.proto.CalculatorProfileProto.GraphTrace.StreamTrace value) {
          if (outputTraceBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureOutputTraceIsMutable();
            outputTrace_.add(index, value);
            onChanged();
          } else {
            outputTraceBuilder_.addMessage(index, value);
          }
          return this;
        }
        /**
         * <pre>
         * The identifying timetamp and stream_id for each output packet.
         * </pre>
         *
         * <code>repeated .mediapipe.GraphTrace.StreamTrace output_trace = 7;</code>
         */
        public Builder addOutputTrace(
            com.google.mediapipe.proto.CalculatorProfileProto.GraphTrace.StreamTrace.Builder builderForValue) {
          if (outputTraceBuilder_ == null) {
            ensureOutputTraceIsMutable();
            outputTrace_.add(builderForValue.build());
            onChanged();
          } else {
            outputTraceBuilder_.addMessage(builderForValue.build());
          }
          return this;
        }
        /**
         * <pre>
         * The identifying timetamp and stream_id for each output packet.
         * </pre>
         *
         * <code>repeated .mediapipe.GraphTrace.StreamTrace output_trace = 7;</code>
         */
        public Builder addOutputTrace(
            int index, com.google.mediapipe.proto.CalculatorProfileProto.GraphTrace.StreamTrace.Builder builderForValue) {
          if (outputTraceBuilder_ == null) {
            ensureOutputTraceIsMutable();
            outputTrace_.add(index, builderForValue.build());
            onChanged();
          } else {
            outputTraceBuilder_.addMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <pre>
         * The identifying timetamp and stream_id for each output packet.
         * </pre>
         *
         * <code>repeated .mediapipe.GraphTrace.StreamTrace output_trace = 7;</code>
         */
        public Builder addAllOutputTrace(
            java.lang.Iterable<? extends com.google.mediapipe.proto.CalculatorProfileProto.GraphTrace.StreamTrace> values) {
          if (outputTraceBuilder_ == null) {
            ensureOutputTraceIsMutable();
            com.google.protobuf.AbstractMessageLite.Builder.addAll(
                values, outputTrace_);
            onChanged();
          } else {
            outputTraceBuilder_.addAllMessages(values);
          }
          return this;
        }
        /**
         * <pre>
         * The identifying timetamp and stream_id for each output packet.
         * </pre>
         *
         * <code>repeated .mediapipe.GraphTrace.StreamTrace output_trace = 7;</code>
         */
        public Builder clearOutputTrace() {
          if (outputTraceBuilder_ == null) {
            outputTrace_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000040);
            onChanged();
          } else {
            outputTraceBuilder_.clear();
          }
          return this;
        }
        /**
         * <pre>
         * The identifying timetamp and stream_id for each output packet.
         * </pre>
         *
         * <code>repeated .mediapipe.GraphTrace.StreamTrace output_trace = 7;</code>
         */
        public Builder removeOutputTrace(int index) {
          if (outputTraceBuilder_ == null) {
            ensureOutputTraceIsMutable();
            outputTrace_.remove(index);
            onChanged();
          } else {
            outputTraceBuilder_.remove(index);
          }
          return this;
        }
        /**
         * <pre>
         * The identifying timetamp and stream_id for each output packet.
         * </pre>
         *
         * <code>repeated .mediapipe.GraphTrace.StreamTrace output_trace = 7;</code>
         */
        public com.google.mediapipe.proto.CalculatorProfileProto.GraphTrace.StreamTrace.Builder getOutputTraceBuilder(
            int index) {
          return getOutputTraceFieldBuilder().getBuilder(index);
        }
        /**
         * <pre>
         * The identifying timetamp and stream_id for each output packet.
         * </pre>
         *
         * <code>repeated .mediapipe.GraphTrace.StreamTrace output_trace = 7;</code>
         */
        public com.google.mediapipe.proto.CalculatorProfileProto.GraphTrace.StreamTraceOrBuilder getOutputTraceOrBuilder(
            int index) {
          if (outputTraceBuilder_ == null) {
            return outputTrace_.get(index);  } else {
            return outputTraceBuilder_.getMessageOrBuilder(index);
          }
        }
        /**
         * <pre>
         * The identifying timetamp and stream_id for each output packet.
         * </pre>
         *
         * <code>repeated .mediapipe.GraphTrace.StreamTrace output_trace = 7;</code>
         */
        public java.util.List<? extends com.google.mediapipe.proto.CalculatorProfileProto.GraphTrace.StreamTraceOrBuilder> 
             getOutputTraceOrBuilderList() {
          if (outputTraceBuilder_ != null) {
            return outputTraceBuilder_.getMessageOrBuilderList();
          } else {
            return java.util.Collections.unmodifiableList(outputTrace_);
          }
        }
        /**
         * <pre>
         * The identifying timetamp and stream_id for each output packet.
         * </pre>
         *
         * <code>repeated .mediapipe.GraphTrace.StreamTrace output_trace = 7;</code>
         */
        public com.google.mediapipe.proto.CalculatorProfileProto.GraphTrace.StreamTrace.Builder addOutputTraceBuilder() {
          return getOutputTraceFieldBuilder().addBuilder(
              com.google.mediapipe.proto.CalculatorProfileProto.GraphTrace.StreamTrace.getDefaultInstance());
        }
        /**
         * <pre>
         * The identifying timetamp and stream_id for each output packet.
         * </pre>
         *
         * <code>repeated .mediapipe.GraphTrace.StreamTrace output_trace = 7;</code>
         */
        public com.google.mediapipe.proto.CalculatorProfileProto.GraphTrace.StreamTrace.Builder addOutputTraceBuilder(
            int index) {
          return getOutputTraceFieldBuilder().addBuilder(
              index, com.google.mediapipe.proto.CalculatorProfileProto.GraphTrace.StreamTrace.getDefaultInstance());
        }
        /**
         * <pre>
         * The identifying timetamp and stream_id for each output packet.
         * </pre>
         *
         * <code>repeated .mediapipe.GraphTrace.StreamTrace output_trace = 7;</code>
         */
        public java.util.List<com.google.mediapipe.proto.CalculatorProfileProto.GraphTrace.StreamTrace.Builder> 
             getOutputTraceBuilderList() {
          return getOutputTraceFieldBuilder().getBuilderList();
        }
        private com.google.protobuf.RepeatedFieldBuilderV3<
            com.google.mediapipe.proto.CalculatorProfileProto.GraphTrace.StreamTrace, com.google.mediapipe.proto.CalculatorProfileProto.GraphTrace.StreamTrace.Builder, com.google.mediapipe.proto.CalculatorProfileProto.GraphTrace.StreamTraceOrBuilder> 
            getOutputTraceFieldBuilder() {
          if (outputTraceBuilder_ == null) {
            outputTraceBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
                com.google.mediapipe.proto.CalculatorProfileProto.GraphTrace.StreamTrace, com.google.mediapipe.proto.CalculatorProfileProto.GraphTrace.StreamTrace.Builder, com.google.mediapipe.proto.CalculatorProfileProto.GraphTrace.StreamTraceOrBuilder>(
                    outputTrace_,
                    ((bitField0_ & 0x00000040) == 0x00000040),
                    getParentForChildren(),
                    isClean());
            outputTrace_ = null;
          }
          return outputTraceBuilder_;
        }

        private int threadId_ ;
        /**
         * <pre>
         * An identifier for the current process thread.
         * </pre>
         *
         * <code>optional int32 thread_id = 8;</code>
         */
        public boolean hasThreadId() {
          return ((bitField0_ & 0x00000080) == 0x00000080);
        }
        /**
         * <pre>
         * An identifier for the current process thread.
         * </pre>
         *
         * <code>optional int32 thread_id = 8;</code>
         */
        public int getThreadId() {
          return threadId_;
        }
        /**
         * <pre>
         * An identifier for the current process thread.
         * </pre>
         *
         * <code>optional int32 thread_id = 8;</code>
         */
        public Builder setThreadId(int value) {
          bitField0_ |= 0x00000080;
          threadId_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * An identifier for the current process thread.
         * </pre>
         *
         * <code>optional int32 thread_id = 8;</code>
         */
        public Builder clearThreadId() {
          bitField0_ = (bitField0_ & ~0x00000080);
          threadId_ = 0;
          onChanged();
          return this;
        }
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:mediapipe.GraphTrace.CalculatorTrace)
      }

      // @@protoc_insertion_point(class_scope:mediapipe.GraphTrace.CalculatorTrace)
      private static final com.google.mediapipe.proto.CalculatorProfileProto.GraphTrace.CalculatorTrace DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new com.google.mediapipe.proto.CalculatorProfileProto.GraphTrace.CalculatorTrace();
      }

      public static com.google.mediapipe.proto.CalculatorProfileProto.GraphTrace.CalculatorTrace getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      @java.lang.Deprecated public static final com.google.protobuf.Parser<CalculatorTrace>
          PARSER = new com.google.protobuf.AbstractParser<CalculatorTrace>() {
        public CalculatorTrace parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
            return new CalculatorTrace(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<CalculatorTrace> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<CalculatorTrace> getParserForType() {
        return PARSER;
      }

      public com.google.mediapipe.proto.CalculatorProfileProto.GraphTrace.CalculatorTrace getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    private int bitField0_;
    public static final int BASE_TIME_FIELD_NUMBER = 1;
    private long baseTime_;
    /**
     * <pre>
     * The time represented as 0 in the trace.
     * </pre>
     *
     * <code>optional int64 base_time = 1;</code>
     */
    public boolean hasBaseTime() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <pre>
     * The time represented as 0 in the trace.
     * </pre>
     *
     * <code>optional int64 base_time = 1;</code>
     */
    public long getBaseTime() {
      return baseTime_;
    }

    public static final int BASE_TIMESTAMP_FIELD_NUMBER = 2;
    private long baseTimestamp_;
    /**
     * <pre>
     * The timestamp represented as 0 in the trace.
     * </pre>
     *
     * <code>optional int64 base_timestamp = 2;</code>
     */
    public boolean hasBaseTimestamp() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <pre>
     * The timestamp represented as 0 in the trace.
     * </pre>
     *
     * <code>optional int64 base_timestamp = 2;</code>
     */
    public long getBaseTimestamp() {
      return baseTimestamp_;
    }

    public static final int CALCULATOR_NAME_FIELD_NUMBER = 3;
    private com.google.protobuf.LazyStringList calculatorName_;
    /**
     * <pre>
     * The list of calculator node names indexed by node id.
     * </pre>
     *
     * <code>repeated string calculator_name = 3;</code>
     */
    public com.google.protobuf.ProtocolStringList
        getCalculatorNameList() {
      return calculatorName_;
    }
    /**
     * <pre>
     * The list of calculator node names indexed by node id.
     * </pre>
     *
     * <code>repeated string calculator_name = 3;</code>
     */
    public int getCalculatorNameCount() {
      return calculatorName_.size();
    }
    /**
     * <pre>
     * The list of calculator node names indexed by node id.
     * </pre>
     *
     * <code>repeated string calculator_name = 3;</code>
     */
    public java.lang.String getCalculatorName(int index) {
      return calculatorName_.get(index);
    }
    /**
     * <pre>
     * The list of calculator node names indexed by node id.
     * </pre>
     *
     * <code>repeated string calculator_name = 3;</code>
     */
    public com.google.protobuf.ByteString
        getCalculatorNameBytes(int index) {
      return calculatorName_.getByteString(index);
    }

    public static final int STREAM_NAME_FIELD_NUMBER = 4;
    private com.google.protobuf.LazyStringList streamName_;
    /**
     * <pre>
     * The list of stream names indexed by stream id.
     * </pre>
     *
     * <code>repeated string stream_name = 4;</code>
     */
    public com.google.protobuf.ProtocolStringList
        getStreamNameList() {
      return streamName_;
    }
    /**
     * <pre>
     * The list of stream names indexed by stream id.
     * </pre>
     *
     * <code>repeated string stream_name = 4;</code>
     */
    public int getStreamNameCount() {
      return streamName_.size();
    }
    /**
     * <pre>
     * The list of stream names indexed by stream id.
     * </pre>
     *
     * <code>repeated string stream_name = 4;</code>
     */
    public java.lang.String getStreamName(int index) {
      return streamName_.get(index);
    }
    /**
     * <pre>
     * The list of stream names indexed by stream id.
     * </pre>
     *
     * <code>repeated string stream_name = 4;</code>
     */
    public com.google.protobuf.ByteString
        getStreamNameBytes(int index) {
      return streamName_.getByteString(index);
    }

    public static final int CALCULATOR_TRACE_FIELD_NUMBER = 5;
    private java.util.List<com.google.mediapipe.proto.CalculatorProfileProto.GraphTrace.CalculatorTrace> calculatorTrace_;
    /**
     * <pre>
     * Recent packet timing informtion about each calculator node and stream.
     * </pre>
     *
     * <code>repeated .mediapipe.GraphTrace.CalculatorTrace calculator_trace = 5;</code>
     */
    public java.util.List<com.google.mediapipe.proto.CalculatorProfileProto.GraphTrace.CalculatorTrace> getCalculatorTraceList() {
      return calculatorTrace_;
    }
    /**
     * <pre>
     * Recent packet timing informtion about each calculator node and stream.
     * </pre>
     *
     * <code>repeated .mediapipe.GraphTrace.CalculatorTrace calculator_trace = 5;</code>
     */
    public java.util.List<? extends com.google.mediapipe.proto.CalculatorProfileProto.GraphTrace.CalculatorTraceOrBuilder> 
        getCalculatorTraceOrBuilderList() {
      return calculatorTrace_;
    }
    /**
     * <pre>
     * Recent packet timing informtion about each calculator node and stream.
     * </pre>
     *
     * <code>repeated .mediapipe.GraphTrace.CalculatorTrace calculator_trace = 5;</code>
     */
    public int getCalculatorTraceCount() {
      return calculatorTrace_.size();
    }
    /**
     * <pre>
     * Recent packet timing informtion about each calculator node and stream.
     * </pre>
     *
     * <code>repeated .mediapipe.GraphTrace.CalculatorTrace calculator_trace = 5;</code>
     */
    public com.google.mediapipe.proto.CalculatorProfileProto.GraphTrace.CalculatorTrace getCalculatorTrace(int index) {
      return calculatorTrace_.get(index);
    }
    /**
     * <pre>
     * Recent packet timing informtion about each calculator node and stream.
     * </pre>
     *
     * <code>repeated .mediapipe.GraphTrace.CalculatorTrace calculator_trace = 5;</code>
     */
    public com.google.mediapipe.proto.CalculatorProfileProto.GraphTrace.CalculatorTraceOrBuilder getCalculatorTraceOrBuilder(
        int index) {
      return calculatorTrace_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt64(1, baseTime_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt64(2, baseTimestamp_);
      }
      for (int i = 0; i < calculatorName_.size(); i++) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, calculatorName_.getRaw(i));
      }
      for (int i = 0; i < streamName_.size(); i++) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 4, streamName_.getRaw(i));
      }
      for (int i = 0; i < calculatorTrace_.size(); i++) {
        output.writeMessage(5, calculatorTrace_.get(i));
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, baseTime_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(2, baseTimestamp_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < calculatorName_.size(); i++) {
          dataSize += computeStringSizeNoTag(calculatorName_.getRaw(i));
        }
        size += dataSize;
        size += 1 * getCalculatorNameList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < streamName_.size(); i++) {
          dataSize += computeStringSizeNoTag(streamName_.getRaw(i));
        }
        size += dataSize;
        size += 1 * getStreamNameList().size();
      }
      for (int i = 0; i < calculatorTrace_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, calculatorTrace_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.google.mediapipe.proto.CalculatorProfileProto.GraphTrace)) {
        return super.equals(obj);
      }
      com.google.mediapipe.proto.CalculatorProfileProto.GraphTrace other = (com.google.mediapipe.proto.CalculatorProfileProto.GraphTrace) obj;

      boolean result = true;
      result = result && (hasBaseTime() == other.hasBaseTime());
      if (hasBaseTime()) {
        result = result && (getBaseTime()
            == other.getBaseTime());
      }
      result = result && (hasBaseTimestamp() == other.hasBaseTimestamp());
      if (hasBaseTimestamp()) {
        result = result && (getBaseTimestamp()
            == other.getBaseTimestamp());
      }
      result = result && getCalculatorNameList()
          .equals(other.getCalculatorNameList());
      result = result && getStreamNameList()
          .equals(other.getStreamNameList());
      result = result && getCalculatorTraceList()
          .equals(other.getCalculatorTraceList());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      if (hasBaseTime()) {
        hash = (37 * hash) + BASE_TIME_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getBaseTime());
      }
      if (hasBaseTimestamp()) {
        hash = (37 * hash) + BASE_TIMESTAMP_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getBaseTimestamp());
      }
      if (getCalculatorNameCount() > 0) {
        hash = (37 * hash) + CALCULATOR_NAME_FIELD_NUMBER;
        hash = (53 * hash) + getCalculatorNameList().hashCode();
      }
      if (getStreamNameCount() > 0) {
        hash = (37 * hash) + STREAM_NAME_FIELD_NUMBER;
        hash = (53 * hash) + getStreamNameList().hashCode();
      }
      if (getCalculatorTraceCount() > 0) {
        hash = (37 * hash) + CALCULATOR_TRACE_FIELD_NUMBER;
        hash = (53 * hash) + getCalculatorTraceList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.google.mediapipe.proto.CalculatorProfileProto.GraphTrace parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.mediapipe.proto.CalculatorProfileProto.GraphTrace parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.mediapipe.proto.CalculatorProfileProto.GraphTrace parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.mediapipe.proto.CalculatorProfileProto.GraphTrace parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.mediapipe.proto.CalculatorProfileProto.GraphTrace parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.google.mediapipe.proto.CalculatorProfileProto.GraphTrace parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.google.mediapipe.proto.CalculatorProfileProto.GraphTrace parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.google.mediapipe.proto.CalculatorProfileProto.GraphTrace parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.google.mediapipe.proto.CalculatorProfileProto.GraphTrace parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.google.mediapipe.proto.CalculatorProfileProto.GraphTrace parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.google.mediapipe.proto.CalculatorProfileProto.GraphTrace prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Latency timing for recent mediapipe packets.
     * </pre>
     *
     * Protobuf type {@code mediapipe.GraphTrace}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:mediapipe.GraphTrace)
        com.google.mediapipe.proto.CalculatorProfileProto.GraphTraceOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.google.mediapipe.proto.CalculatorProfileProto.internal_static_mediapipe_GraphTrace_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.google.mediapipe.proto.CalculatorProfileProto.internal_static_mediapipe_GraphTrace_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.google.mediapipe.proto.CalculatorProfileProto.GraphTrace.class, com.google.mediapipe.proto.CalculatorProfileProto.GraphTrace.Builder.class);
      }

      // Construct using com.google.mediapipe.proto.CalculatorProfileProto.GraphTrace.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getCalculatorTraceFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        baseTime_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        baseTimestamp_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000002);
        calculatorName_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000004);
        streamName_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000008);
        if (calculatorTraceBuilder_ == null) {
          calculatorTrace_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
        } else {
          calculatorTraceBuilder_.clear();
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.google.mediapipe.proto.CalculatorProfileProto.internal_static_mediapipe_GraphTrace_descriptor;
      }

      public com.google.mediapipe.proto.CalculatorProfileProto.GraphTrace getDefaultInstanceForType() {
        return com.google.mediapipe.proto.CalculatorProfileProto.GraphTrace.getDefaultInstance();
      }

      public com.google.mediapipe.proto.CalculatorProfileProto.GraphTrace build() {
        com.google.mediapipe.proto.CalculatorProfileProto.GraphTrace result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.google.mediapipe.proto.CalculatorProfileProto.GraphTrace buildPartial() {
        com.google.mediapipe.proto.CalculatorProfileProto.GraphTrace result = new com.google.mediapipe.proto.CalculatorProfileProto.GraphTrace(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.baseTime_ = baseTime_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.baseTimestamp_ = baseTimestamp_;
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          calculatorName_ = calculatorName_.getUnmodifiableView();
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.calculatorName_ = calculatorName_;
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          streamName_ = streamName_.getUnmodifiableView();
          bitField0_ = (bitField0_ & ~0x00000008);
        }
        result.streamName_ = streamName_;
        if (calculatorTraceBuilder_ == null) {
          if (((bitField0_ & 0x00000010) == 0x00000010)) {
            calculatorTrace_ = java.util.Collections.unmodifiableList(calculatorTrace_);
            bitField0_ = (bitField0_ & ~0x00000010);
          }
          result.calculatorTrace_ = calculatorTrace_;
        } else {
          result.calculatorTrace_ = calculatorTraceBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.google.mediapipe.proto.CalculatorProfileProto.GraphTrace) {
          return mergeFrom((com.google.mediapipe.proto.CalculatorProfileProto.GraphTrace)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.google.mediapipe.proto.CalculatorProfileProto.GraphTrace other) {
        if (other == com.google.mediapipe.proto.CalculatorProfileProto.GraphTrace.getDefaultInstance()) return this;
        if (other.hasBaseTime()) {
          setBaseTime(other.getBaseTime());
        }
        if (other.hasBaseTimestamp()) {
          setBaseTimestamp(other.getBaseTimestamp());
        }
        if (!other.calculatorName_.isEmpty()) {
          if (calculatorName_.isEmpty()) {
            calculatorName_ = other.calculatorName_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureCalculatorNameIsMutable();
            calculatorName_.addAll(other.calculatorName_);
          }
          onChanged();
        }
        if (!other.streamName_.isEmpty()) {
          if (streamName_.isEmpty()) {
            streamName_ = other.streamName_;
            bitField0_ = (bitField0_ & ~0x00000008);
          } else {
            ensureStreamNameIsMutable();
            streamName_.addAll(other.streamName_);
          }
          onChanged();
        }
        if (calculatorTraceBuilder_ == null) {
          if (!other.calculatorTrace_.isEmpty()) {
            if (calculatorTrace_.isEmpty()) {
              calculatorTrace_ = other.calculatorTrace_;
              bitField0_ = (bitField0_ & ~0x00000010);
            } else {
              ensureCalculatorTraceIsMutable();
              calculatorTrace_.addAll(other.calculatorTrace_);
            }
            onChanged();
          }
        } else {
          if (!other.calculatorTrace_.isEmpty()) {
            if (calculatorTraceBuilder_.isEmpty()) {
              calculatorTraceBuilder_.dispose();
              calculatorTraceBuilder_ = null;
              calculatorTrace_ = other.calculatorTrace_;
              bitField0_ = (bitField0_ & ~0x00000010);
              calculatorTraceBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getCalculatorTraceFieldBuilder() : null;
            } else {
              calculatorTraceBuilder_.addAllMessages(other.calculatorTrace_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.mediapipe.proto.CalculatorProfileProto.GraphTrace parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.google.mediapipe.proto.CalculatorProfileProto.GraphTrace) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private long baseTime_ ;
      /**
       * <pre>
       * The time represented as 0 in the trace.
       * </pre>
       *
       * <code>optional int64 base_time = 1;</code>
       */
      public boolean hasBaseTime() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <pre>
       * The time represented as 0 in the trace.
       * </pre>
       *
       * <code>optional int64 base_time = 1;</code>
       */
      public long getBaseTime() {
        return baseTime_;
      }
      /**
       * <pre>
       * The time represented as 0 in the trace.
       * </pre>
       *
       * <code>optional int64 base_time = 1;</code>
       */
      public Builder setBaseTime(long value) {
        bitField0_ |= 0x00000001;
        baseTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The time represented as 0 in the trace.
       * </pre>
       *
       * <code>optional int64 base_time = 1;</code>
       */
      public Builder clearBaseTime() {
        bitField0_ = (bitField0_ & ~0x00000001);
        baseTime_ = 0L;
        onChanged();
        return this;
      }

      private long baseTimestamp_ ;
      /**
       * <pre>
       * The timestamp represented as 0 in the trace.
       * </pre>
       *
       * <code>optional int64 base_timestamp = 2;</code>
       */
      public boolean hasBaseTimestamp() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <pre>
       * The timestamp represented as 0 in the trace.
       * </pre>
       *
       * <code>optional int64 base_timestamp = 2;</code>
       */
      public long getBaseTimestamp() {
        return baseTimestamp_;
      }
      /**
       * <pre>
       * The timestamp represented as 0 in the trace.
       * </pre>
       *
       * <code>optional int64 base_timestamp = 2;</code>
       */
      public Builder setBaseTimestamp(long value) {
        bitField0_ |= 0x00000002;
        baseTimestamp_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The timestamp represented as 0 in the trace.
       * </pre>
       *
       * <code>optional int64 base_timestamp = 2;</code>
       */
      public Builder clearBaseTimestamp() {
        bitField0_ = (bitField0_ & ~0x00000002);
        baseTimestamp_ = 0L;
        onChanged();
        return this;
      }

      private com.google.protobuf.LazyStringList calculatorName_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureCalculatorNameIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          calculatorName_ = new com.google.protobuf.LazyStringArrayList(calculatorName_);
          bitField0_ |= 0x00000004;
         }
      }
      /**
       * <pre>
       * The list of calculator node names indexed by node id.
       * </pre>
       *
       * <code>repeated string calculator_name = 3;</code>
       */
      public com.google.protobuf.ProtocolStringList
          getCalculatorNameList() {
        return calculatorName_.getUnmodifiableView();
      }
      /**
       * <pre>
       * The list of calculator node names indexed by node id.
       * </pre>
       *
       * <code>repeated string calculator_name = 3;</code>
       */
      public int getCalculatorNameCount() {
        return calculatorName_.size();
      }
      /**
       * <pre>
       * The list of calculator node names indexed by node id.
       * </pre>
       *
       * <code>repeated string calculator_name = 3;</code>
       */
      public java.lang.String getCalculatorName(int index) {
        return calculatorName_.get(index);
      }
      /**
       * <pre>
       * The list of calculator node names indexed by node id.
       * </pre>
       *
       * <code>repeated string calculator_name = 3;</code>
       */
      public com.google.protobuf.ByteString
          getCalculatorNameBytes(int index) {
        return calculatorName_.getByteString(index);
      }
      /**
       * <pre>
       * The list of calculator node names indexed by node id.
       * </pre>
       *
       * <code>repeated string calculator_name = 3;</code>
       */
      public Builder setCalculatorName(
          int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureCalculatorNameIsMutable();
        calculatorName_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The list of calculator node names indexed by node id.
       * </pre>
       *
       * <code>repeated string calculator_name = 3;</code>
       */
      public Builder addCalculatorName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureCalculatorNameIsMutable();
        calculatorName_.add(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The list of calculator node names indexed by node id.
       * </pre>
       *
       * <code>repeated string calculator_name = 3;</code>
       */
      public Builder addAllCalculatorName(
          java.lang.Iterable<java.lang.String> values) {
        ensureCalculatorNameIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, calculatorName_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The list of calculator node names indexed by node id.
       * </pre>
       *
       * <code>repeated string calculator_name = 3;</code>
       */
      public Builder clearCalculatorName() {
        calculatorName_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The list of calculator node names indexed by node id.
       * </pre>
       *
       * <code>repeated string calculator_name = 3;</code>
       */
      public Builder addCalculatorNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureCalculatorNameIsMutable();
        calculatorName_.add(value);
        onChanged();
        return this;
      }

      private com.google.protobuf.LazyStringList streamName_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureStreamNameIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          streamName_ = new com.google.protobuf.LazyStringArrayList(streamName_);
          bitField0_ |= 0x00000008;
         }
      }
      /**
       * <pre>
       * The list of stream names indexed by stream id.
       * </pre>
       *
       * <code>repeated string stream_name = 4;</code>
       */
      public com.google.protobuf.ProtocolStringList
          getStreamNameList() {
        return streamName_.getUnmodifiableView();
      }
      /**
       * <pre>
       * The list of stream names indexed by stream id.
       * </pre>
       *
       * <code>repeated string stream_name = 4;</code>
       */
      public int getStreamNameCount() {
        return streamName_.size();
      }
      /**
       * <pre>
       * The list of stream names indexed by stream id.
       * </pre>
       *
       * <code>repeated string stream_name = 4;</code>
       */
      public java.lang.String getStreamName(int index) {
        return streamName_.get(index);
      }
      /**
       * <pre>
       * The list of stream names indexed by stream id.
       * </pre>
       *
       * <code>repeated string stream_name = 4;</code>
       */
      public com.google.protobuf.ByteString
          getStreamNameBytes(int index) {
        return streamName_.getByteString(index);
      }
      /**
       * <pre>
       * The list of stream names indexed by stream id.
       * </pre>
       *
       * <code>repeated string stream_name = 4;</code>
       */
      public Builder setStreamName(
          int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureStreamNameIsMutable();
        streamName_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The list of stream names indexed by stream id.
       * </pre>
       *
       * <code>repeated string stream_name = 4;</code>
       */
      public Builder addStreamName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureStreamNameIsMutable();
        streamName_.add(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The list of stream names indexed by stream id.
       * </pre>
       *
       * <code>repeated string stream_name = 4;</code>
       */
      public Builder addAllStreamName(
          java.lang.Iterable<java.lang.String> values) {
        ensureStreamNameIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, streamName_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The list of stream names indexed by stream id.
       * </pre>
       *
       * <code>repeated string stream_name = 4;</code>
       */
      public Builder clearStreamName() {
        streamName_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The list of stream names indexed by stream id.
       * </pre>
       *
       * <code>repeated string stream_name = 4;</code>
       */
      public Builder addStreamNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureStreamNameIsMutable();
        streamName_.add(value);
        onChanged();
        return this;
      }

      private java.util.List<com.google.mediapipe.proto.CalculatorProfileProto.GraphTrace.CalculatorTrace> calculatorTrace_ =
        java.util.Collections.emptyList();
      private void ensureCalculatorTraceIsMutable() {
        if (!((bitField0_ & 0x00000010) == 0x00000010)) {
          calculatorTrace_ = new java.util.ArrayList<com.google.mediapipe.proto.CalculatorProfileProto.GraphTrace.CalculatorTrace>(calculatorTrace_);
          bitField0_ |= 0x00000010;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.google.mediapipe.proto.CalculatorProfileProto.GraphTrace.CalculatorTrace, com.google.mediapipe.proto.CalculatorProfileProto.GraphTrace.CalculatorTrace.Builder, com.google.mediapipe.proto.CalculatorProfileProto.GraphTrace.CalculatorTraceOrBuilder> calculatorTraceBuilder_;

      /**
       * <pre>
       * Recent packet timing informtion about each calculator node and stream.
       * </pre>
       *
       * <code>repeated .mediapipe.GraphTrace.CalculatorTrace calculator_trace = 5;</code>
       */
      public java.util.List<com.google.mediapipe.proto.CalculatorProfileProto.GraphTrace.CalculatorTrace> getCalculatorTraceList() {
        if (calculatorTraceBuilder_ == null) {
          return java.util.Collections.unmodifiableList(calculatorTrace_);
        } else {
          return calculatorTraceBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * Recent packet timing informtion about each calculator node and stream.
       * </pre>
       *
       * <code>repeated .mediapipe.GraphTrace.CalculatorTrace calculator_trace = 5;</code>
       */
      public int getCalculatorTraceCount() {
        if (calculatorTraceBuilder_ == null) {
          return calculatorTrace_.size();
        } else {
          return calculatorTraceBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * Recent packet timing informtion about each calculator node and stream.
       * </pre>
       *
       * <code>repeated .mediapipe.GraphTrace.CalculatorTrace calculator_trace = 5;</code>
       */
      public com.google.mediapipe.proto.CalculatorProfileProto.GraphTrace.CalculatorTrace getCalculatorTrace(int index) {
        if (calculatorTraceBuilder_ == null) {
          return calculatorTrace_.get(index);
        } else {
          return calculatorTraceBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * Recent packet timing informtion about each calculator node and stream.
       * </pre>
       *
       * <code>repeated .mediapipe.GraphTrace.CalculatorTrace calculator_trace = 5;</code>
       */
      public Builder setCalculatorTrace(
          int index, com.google.mediapipe.proto.CalculatorProfileProto.GraphTrace.CalculatorTrace value) {
        if (calculatorTraceBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCalculatorTraceIsMutable();
          calculatorTrace_.set(index, value);
          onChanged();
        } else {
          calculatorTraceBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Recent packet timing informtion about each calculator node and stream.
       * </pre>
       *
       * <code>repeated .mediapipe.GraphTrace.CalculatorTrace calculator_trace = 5;</code>
       */
      public Builder setCalculatorTrace(
          int index, com.google.mediapipe.proto.CalculatorProfileProto.GraphTrace.CalculatorTrace.Builder builderForValue) {
        if (calculatorTraceBuilder_ == null) {
          ensureCalculatorTraceIsMutable();
          calculatorTrace_.set(index, builderForValue.build());
          onChanged();
        } else {
          calculatorTraceBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Recent packet timing informtion about each calculator node and stream.
       * </pre>
       *
       * <code>repeated .mediapipe.GraphTrace.CalculatorTrace calculator_trace = 5;</code>
       */
      public Builder addCalculatorTrace(com.google.mediapipe.proto.CalculatorProfileProto.GraphTrace.CalculatorTrace value) {
        if (calculatorTraceBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCalculatorTraceIsMutable();
          calculatorTrace_.add(value);
          onChanged();
        } else {
          calculatorTraceBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * Recent packet timing informtion about each calculator node and stream.
       * </pre>
       *
       * <code>repeated .mediapipe.GraphTrace.CalculatorTrace calculator_trace = 5;</code>
       */
      public Builder addCalculatorTrace(
          int index, com.google.mediapipe.proto.CalculatorProfileProto.GraphTrace.CalculatorTrace value) {
        if (calculatorTraceBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCalculatorTraceIsMutable();
          calculatorTrace_.add(index, value);
          onChanged();
        } else {
          calculatorTraceBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Recent packet timing informtion about each calculator node and stream.
       * </pre>
       *
       * <code>repeated .mediapipe.GraphTrace.CalculatorTrace calculator_trace = 5;</code>
       */
      public Builder addCalculatorTrace(
          com.google.mediapipe.proto.CalculatorProfileProto.GraphTrace.CalculatorTrace.Builder builderForValue) {
        if (calculatorTraceBuilder_ == null) {
          ensureCalculatorTraceIsMutable();
          calculatorTrace_.add(builderForValue.build());
          onChanged();
        } else {
          calculatorTraceBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Recent packet timing informtion about each calculator node and stream.
       * </pre>
       *
       * <code>repeated .mediapipe.GraphTrace.CalculatorTrace calculator_trace = 5;</code>
       */
      public Builder addCalculatorTrace(
          int index, com.google.mediapipe.proto.CalculatorProfileProto.GraphTrace.CalculatorTrace.Builder builderForValue) {
        if (calculatorTraceBuilder_ == null) {
          ensureCalculatorTraceIsMutable();
          calculatorTrace_.add(index, builderForValue.build());
          onChanged();
        } else {
          calculatorTraceBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Recent packet timing informtion about each calculator node and stream.
       * </pre>
       *
       * <code>repeated .mediapipe.GraphTrace.CalculatorTrace calculator_trace = 5;</code>
       */
      public Builder addAllCalculatorTrace(
          java.lang.Iterable<? extends com.google.mediapipe.proto.CalculatorProfileProto.GraphTrace.CalculatorTrace> values) {
        if (calculatorTraceBuilder_ == null) {
          ensureCalculatorTraceIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, calculatorTrace_);
          onChanged();
        } else {
          calculatorTraceBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * Recent packet timing informtion about each calculator node and stream.
       * </pre>
       *
       * <code>repeated .mediapipe.GraphTrace.CalculatorTrace calculator_trace = 5;</code>
       */
      public Builder clearCalculatorTrace() {
        if (calculatorTraceBuilder_ == null) {
          calculatorTrace_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
          onChanged();
        } else {
          calculatorTraceBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * Recent packet timing informtion about each calculator node and stream.
       * </pre>
       *
       * <code>repeated .mediapipe.GraphTrace.CalculatorTrace calculator_trace = 5;</code>
       */
      public Builder removeCalculatorTrace(int index) {
        if (calculatorTraceBuilder_ == null) {
          ensureCalculatorTraceIsMutable();
          calculatorTrace_.remove(index);
          onChanged();
        } else {
          calculatorTraceBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * Recent packet timing informtion about each calculator node and stream.
       * </pre>
       *
       * <code>repeated .mediapipe.GraphTrace.CalculatorTrace calculator_trace = 5;</code>
       */
      public com.google.mediapipe.proto.CalculatorProfileProto.GraphTrace.CalculatorTrace.Builder getCalculatorTraceBuilder(
          int index) {
        return getCalculatorTraceFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * Recent packet timing informtion about each calculator node and stream.
       * </pre>
       *
       * <code>repeated .mediapipe.GraphTrace.CalculatorTrace calculator_trace = 5;</code>
       */
      public com.google.mediapipe.proto.CalculatorProfileProto.GraphTrace.CalculatorTraceOrBuilder getCalculatorTraceOrBuilder(
          int index) {
        if (calculatorTraceBuilder_ == null) {
          return calculatorTrace_.get(index);  } else {
          return calculatorTraceBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * Recent packet timing informtion about each calculator node and stream.
       * </pre>
       *
       * <code>repeated .mediapipe.GraphTrace.CalculatorTrace calculator_trace = 5;</code>
       */
      public java.util.List<? extends com.google.mediapipe.proto.CalculatorProfileProto.GraphTrace.CalculatorTraceOrBuilder> 
           getCalculatorTraceOrBuilderList() {
        if (calculatorTraceBuilder_ != null) {
          return calculatorTraceBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(calculatorTrace_);
        }
      }
      /**
       * <pre>
       * Recent packet timing informtion about each calculator node and stream.
       * </pre>
       *
       * <code>repeated .mediapipe.GraphTrace.CalculatorTrace calculator_trace = 5;</code>
       */
      public com.google.mediapipe.proto.CalculatorProfileProto.GraphTrace.CalculatorTrace.Builder addCalculatorTraceBuilder() {
        return getCalculatorTraceFieldBuilder().addBuilder(
            com.google.mediapipe.proto.CalculatorProfileProto.GraphTrace.CalculatorTrace.getDefaultInstance());
      }
      /**
       * <pre>
       * Recent packet timing informtion about each calculator node and stream.
       * </pre>
       *
       * <code>repeated .mediapipe.GraphTrace.CalculatorTrace calculator_trace = 5;</code>
       */
      public com.google.mediapipe.proto.CalculatorProfileProto.GraphTrace.CalculatorTrace.Builder addCalculatorTraceBuilder(
          int index) {
        return getCalculatorTraceFieldBuilder().addBuilder(
            index, com.google.mediapipe.proto.CalculatorProfileProto.GraphTrace.CalculatorTrace.getDefaultInstance());
      }
      /**
       * <pre>
       * Recent packet timing informtion about each calculator node and stream.
       * </pre>
       *
       * <code>repeated .mediapipe.GraphTrace.CalculatorTrace calculator_trace = 5;</code>
       */
      public java.util.List<com.google.mediapipe.proto.CalculatorProfileProto.GraphTrace.CalculatorTrace.Builder> 
           getCalculatorTraceBuilderList() {
        return getCalculatorTraceFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.google.mediapipe.proto.CalculatorProfileProto.GraphTrace.CalculatorTrace, com.google.mediapipe.proto.CalculatorProfileProto.GraphTrace.CalculatorTrace.Builder, com.google.mediapipe.proto.CalculatorProfileProto.GraphTrace.CalculatorTraceOrBuilder> 
          getCalculatorTraceFieldBuilder() {
        if (calculatorTraceBuilder_ == null) {
          calculatorTraceBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              com.google.mediapipe.proto.CalculatorProfileProto.GraphTrace.CalculatorTrace, com.google.mediapipe.proto.CalculatorProfileProto.GraphTrace.CalculatorTrace.Builder, com.google.mediapipe.proto.CalculatorProfileProto.GraphTrace.CalculatorTraceOrBuilder>(
                  calculatorTrace_,
                  ((bitField0_ & 0x00000010) == 0x00000010),
                  getParentForChildren(),
                  isClean());
          calculatorTrace_ = null;
        }
        return calculatorTraceBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:mediapipe.GraphTrace)
    }

    // @@protoc_insertion_point(class_scope:mediapipe.GraphTrace)
    private static final com.google.mediapipe.proto.CalculatorProfileProto.GraphTrace DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.google.mediapipe.proto.CalculatorProfileProto.GraphTrace();
    }

    public static com.google.mediapipe.proto.CalculatorProfileProto.GraphTrace getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<GraphTrace>
        PARSER = new com.google.protobuf.AbstractParser<GraphTrace>() {
      public GraphTrace parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new GraphTrace(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<GraphTrace> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<GraphTrace> getParserForType() {
      return PARSER;
    }

    public com.google.mediapipe.proto.CalculatorProfileProto.GraphTrace getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface GraphProfileOrBuilder extends
      // @@protoc_insertion_point(interface_extends:mediapipe.GraphProfile)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Recent packet timing informtion about each calculator node and stream.
     * </pre>
     *
     * <code>repeated .mediapipe.GraphTrace graph_trace = 1;</code>
     */
    java.util.List<com.google.mediapipe.proto.CalculatorProfileProto.GraphTrace> 
        getGraphTraceList();
    /**
     * <pre>
     * Recent packet timing informtion about each calculator node and stream.
     * </pre>
     *
     * <code>repeated .mediapipe.GraphTrace graph_trace = 1;</code>
     */
    com.google.mediapipe.proto.CalculatorProfileProto.GraphTrace getGraphTrace(int index);
    /**
     * <pre>
     * Recent packet timing informtion about each calculator node and stream.
     * </pre>
     *
     * <code>repeated .mediapipe.GraphTrace graph_trace = 1;</code>
     */
    int getGraphTraceCount();
    /**
     * <pre>
     * Recent packet timing informtion about each calculator node and stream.
     * </pre>
     *
     * <code>repeated .mediapipe.GraphTrace graph_trace = 1;</code>
     */
    java.util.List<? extends com.google.mediapipe.proto.CalculatorProfileProto.GraphTraceOrBuilder> 
        getGraphTraceOrBuilderList();
    /**
     * <pre>
     * Recent packet timing informtion about each calculator node and stream.
     * </pre>
     *
     * <code>repeated .mediapipe.GraphTrace graph_trace = 1;</code>
     */
    com.google.mediapipe.proto.CalculatorProfileProto.GraphTraceOrBuilder getGraphTraceOrBuilder(
        int index);

    /**
     * <pre>
     * Aggregated latency information about each calculator node.
     * </pre>
     *
     * <code>repeated .mediapipe.CalculatorProfile calculator_profiles = 2;</code>
     */
    java.util.List<com.google.mediapipe.proto.CalculatorProfileProto.CalculatorProfile> 
        getCalculatorProfilesList();
    /**
     * <pre>
     * Aggregated latency information about each calculator node.
     * </pre>
     *
     * <code>repeated .mediapipe.CalculatorProfile calculator_profiles = 2;</code>
     */
    com.google.mediapipe.proto.CalculatorProfileProto.CalculatorProfile getCalculatorProfiles(int index);
    /**
     * <pre>
     * Aggregated latency information about each calculator node.
     * </pre>
     *
     * <code>repeated .mediapipe.CalculatorProfile calculator_profiles = 2;</code>
     */
    int getCalculatorProfilesCount();
    /**
     * <pre>
     * Aggregated latency information about each calculator node.
     * </pre>
     *
     * <code>repeated .mediapipe.CalculatorProfile calculator_profiles = 2;</code>
     */
    java.util.List<? extends com.google.mediapipe.proto.CalculatorProfileProto.CalculatorProfileOrBuilder> 
        getCalculatorProfilesOrBuilderList();
    /**
     * <pre>
     * Aggregated latency information about each calculator node.
     * </pre>
     *
     * <code>repeated .mediapipe.CalculatorProfile calculator_profiles = 2;</code>
     */
    com.google.mediapipe.proto.CalculatorProfileProto.CalculatorProfileOrBuilder getCalculatorProfilesOrBuilder(
        int index);

    /**
     * <pre>
     * The canonicalized calculator graph that is traced.
     * </pre>
     *
     * <code>optional .mediapipe.CalculatorGraphConfig config = 3;</code>
     */
    boolean hasConfig();
    /**
     * <pre>
     * The canonicalized calculator graph that is traced.
     * </pre>
     *
     * <code>optional .mediapipe.CalculatorGraphConfig config = 3;</code>
     */
    com.google.mediapipe.proto.CalculatorProto.CalculatorGraphConfig getConfig();
    /**
     * <pre>
     * The canonicalized calculator graph that is traced.
     * </pre>
     *
     * <code>optional .mediapipe.CalculatorGraphConfig config = 3;</code>
     */
    com.google.mediapipe.proto.CalculatorProto.CalculatorGraphConfigOrBuilder getConfigOrBuilder();
  }
  /**
   * <pre>
   * Latency events and summaries for recent mediapipe packets.
   * </pre>
   *
   * Protobuf type {@code mediapipe.GraphProfile}
   */
  public  static final class GraphProfile extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:mediapipe.GraphProfile)
      GraphProfileOrBuilder {
    // Use GraphProfile.newBuilder() to construct.
    private GraphProfile(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private GraphProfile() {
      graphTrace_ = java.util.Collections.emptyList();
      calculatorProfiles_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private GraphProfile(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                graphTrace_ = new java.util.ArrayList<com.google.mediapipe.proto.CalculatorProfileProto.GraphTrace>();
                mutable_bitField0_ |= 0x00000001;
              }
              graphTrace_.add(
                  input.readMessage(com.google.mediapipe.proto.CalculatorProfileProto.GraphTrace.PARSER, extensionRegistry));
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                calculatorProfiles_ = new java.util.ArrayList<com.google.mediapipe.proto.CalculatorProfileProto.CalculatorProfile>();
                mutable_bitField0_ |= 0x00000002;
              }
              calculatorProfiles_.add(
                  input.readMessage(com.google.mediapipe.proto.CalculatorProfileProto.CalculatorProfile.PARSER, extensionRegistry));
              break;
            }
            case 26: {
              com.google.mediapipe.proto.CalculatorProto.CalculatorGraphConfig.Builder subBuilder = null;
              if (((bitField0_ & 0x00000001) == 0x00000001)) {
                subBuilder = config_.toBuilder();
              }
              config_ = input.readMessage(com.google.mediapipe.proto.CalculatorProto.CalculatorGraphConfig.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(config_);
                config_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000001;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          graphTrace_ = java.util.Collections.unmodifiableList(graphTrace_);
        }
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          calculatorProfiles_ = java.util.Collections.unmodifiableList(calculatorProfiles_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.google.mediapipe.proto.CalculatorProfileProto.internal_static_mediapipe_GraphProfile_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.mediapipe.proto.CalculatorProfileProto.internal_static_mediapipe_GraphProfile_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.mediapipe.proto.CalculatorProfileProto.GraphProfile.class, com.google.mediapipe.proto.CalculatorProfileProto.GraphProfile.Builder.class);
    }

    private int bitField0_;
    public static final int GRAPH_TRACE_FIELD_NUMBER = 1;
    private java.util.List<com.google.mediapipe.proto.CalculatorProfileProto.GraphTrace> graphTrace_;
    /**
     * <pre>
     * Recent packet timing informtion about each calculator node and stream.
     * </pre>
     *
     * <code>repeated .mediapipe.GraphTrace graph_trace = 1;</code>
     */
    public java.util.List<com.google.mediapipe.proto.CalculatorProfileProto.GraphTrace> getGraphTraceList() {
      return graphTrace_;
    }
    /**
     * <pre>
     * Recent packet timing informtion about each calculator node and stream.
     * </pre>
     *
     * <code>repeated .mediapipe.GraphTrace graph_trace = 1;</code>
     */
    public java.util.List<? extends com.google.mediapipe.proto.CalculatorProfileProto.GraphTraceOrBuilder> 
        getGraphTraceOrBuilderList() {
      return graphTrace_;
    }
    /**
     * <pre>
     * Recent packet timing informtion about each calculator node and stream.
     * </pre>
     *
     * <code>repeated .mediapipe.GraphTrace graph_trace = 1;</code>
     */
    public int getGraphTraceCount() {
      return graphTrace_.size();
    }
    /**
     * <pre>
     * Recent packet timing informtion about each calculator node and stream.
     * </pre>
     *
     * <code>repeated .mediapipe.GraphTrace graph_trace = 1;</code>
     */
    public com.google.mediapipe.proto.CalculatorProfileProto.GraphTrace getGraphTrace(int index) {
      return graphTrace_.get(index);
    }
    /**
     * <pre>
     * Recent packet timing informtion about each calculator node and stream.
     * </pre>
     *
     * <code>repeated .mediapipe.GraphTrace graph_trace = 1;</code>
     */
    public com.google.mediapipe.proto.CalculatorProfileProto.GraphTraceOrBuilder getGraphTraceOrBuilder(
        int index) {
      return graphTrace_.get(index);
    }

    public static final int CALCULATOR_PROFILES_FIELD_NUMBER = 2;
    private java.util.List<com.google.mediapipe.proto.CalculatorProfileProto.CalculatorProfile> calculatorProfiles_;
    /**
     * <pre>
     * Aggregated latency information about each calculator node.
     * </pre>
     *
     * <code>repeated .mediapipe.CalculatorProfile calculator_profiles = 2;</code>
     */
    public java.util.List<com.google.mediapipe.proto.CalculatorProfileProto.CalculatorProfile> getCalculatorProfilesList() {
      return calculatorProfiles_;
    }
    /**
     * <pre>
     * Aggregated latency information about each calculator node.
     * </pre>
     *
     * <code>repeated .mediapipe.CalculatorProfile calculator_profiles = 2;</code>
     */
    public java.util.List<? extends com.google.mediapipe.proto.CalculatorProfileProto.CalculatorProfileOrBuilder> 
        getCalculatorProfilesOrBuilderList() {
      return calculatorProfiles_;
    }
    /**
     * <pre>
     * Aggregated latency information about each calculator node.
     * </pre>
     *
     * <code>repeated .mediapipe.CalculatorProfile calculator_profiles = 2;</code>
     */
    public int getCalculatorProfilesCount() {
      return calculatorProfiles_.size();
    }
    /**
     * <pre>
     * Aggregated latency information about each calculator node.
     * </pre>
     *
     * <code>repeated .mediapipe.CalculatorProfile calculator_profiles = 2;</code>
     */
    public com.google.mediapipe.proto.CalculatorProfileProto.CalculatorProfile getCalculatorProfiles(int index) {
      return calculatorProfiles_.get(index);
    }
    /**
     * <pre>
     * Aggregated latency information about each calculator node.
     * </pre>
     *
     * <code>repeated .mediapipe.CalculatorProfile calculator_profiles = 2;</code>
     */
    public com.google.mediapipe.proto.CalculatorProfileProto.CalculatorProfileOrBuilder getCalculatorProfilesOrBuilder(
        int index) {
      return calculatorProfiles_.get(index);
    }

    public static final int CONFIG_FIELD_NUMBER = 3;
    private com.google.mediapipe.proto.CalculatorProto.CalculatorGraphConfig config_;
    /**
     * <pre>
     * The canonicalized calculator graph that is traced.
     * </pre>
     *
     * <code>optional .mediapipe.CalculatorGraphConfig config = 3;</code>
     */
    public boolean hasConfig() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <pre>
     * The canonicalized calculator graph that is traced.
     * </pre>
     *
     * <code>optional .mediapipe.CalculatorGraphConfig config = 3;</code>
     */
    public com.google.mediapipe.proto.CalculatorProto.CalculatorGraphConfig getConfig() {
      return config_ == null ? com.google.mediapipe.proto.CalculatorProto.CalculatorGraphConfig.getDefaultInstance() : config_;
    }
    /**
     * <pre>
     * The canonicalized calculator graph that is traced.
     * </pre>
     *
     * <code>optional .mediapipe.CalculatorGraphConfig config = 3;</code>
     */
    public com.google.mediapipe.proto.CalculatorProto.CalculatorGraphConfigOrBuilder getConfigOrBuilder() {
      return config_ == null ? com.google.mediapipe.proto.CalculatorProto.CalculatorGraphConfig.getDefaultInstance() : config_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (hasConfig()) {
        if (!getConfig().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < graphTrace_.size(); i++) {
        output.writeMessage(1, graphTrace_.get(i));
      }
      for (int i = 0; i < calculatorProfiles_.size(); i++) {
        output.writeMessage(2, calculatorProfiles_.get(i));
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(3, getConfig());
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < graphTrace_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, graphTrace_.get(i));
      }
      for (int i = 0; i < calculatorProfiles_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, calculatorProfiles_.get(i));
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getConfig());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.google.mediapipe.proto.CalculatorProfileProto.GraphProfile)) {
        return super.equals(obj);
      }
      com.google.mediapipe.proto.CalculatorProfileProto.GraphProfile other = (com.google.mediapipe.proto.CalculatorProfileProto.GraphProfile) obj;

      boolean result = true;
      result = result && getGraphTraceList()
          .equals(other.getGraphTraceList());
      result = result && getCalculatorProfilesList()
          .equals(other.getCalculatorProfilesList());
      result = result && (hasConfig() == other.hasConfig());
      if (hasConfig()) {
        result = result && getConfig()
            .equals(other.getConfig());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      if (getGraphTraceCount() > 0) {
        hash = (37 * hash) + GRAPH_TRACE_FIELD_NUMBER;
        hash = (53 * hash) + getGraphTraceList().hashCode();
      }
      if (getCalculatorProfilesCount() > 0) {
        hash = (37 * hash) + CALCULATOR_PROFILES_FIELD_NUMBER;
        hash = (53 * hash) + getCalculatorProfilesList().hashCode();
      }
      if (hasConfig()) {
        hash = (37 * hash) + CONFIG_FIELD_NUMBER;
        hash = (53 * hash) + getConfig().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.google.mediapipe.proto.CalculatorProfileProto.GraphProfile parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.mediapipe.proto.CalculatorProfileProto.GraphProfile parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.mediapipe.proto.CalculatorProfileProto.GraphProfile parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.mediapipe.proto.CalculatorProfileProto.GraphProfile parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.mediapipe.proto.CalculatorProfileProto.GraphProfile parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.google.mediapipe.proto.CalculatorProfileProto.GraphProfile parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.google.mediapipe.proto.CalculatorProfileProto.GraphProfile parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.google.mediapipe.proto.CalculatorProfileProto.GraphProfile parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.google.mediapipe.proto.CalculatorProfileProto.GraphProfile parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.google.mediapipe.proto.CalculatorProfileProto.GraphProfile parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.google.mediapipe.proto.CalculatorProfileProto.GraphProfile prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Latency events and summaries for recent mediapipe packets.
     * </pre>
     *
     * Protobuf type {@code mediapipe.GraphProfile}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:mediapipe.GraphProfile)
        com.google.mediapipe.proto.CalculatorProfileProto.GraphProfileOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.google.mediapipe.proto.CalculatorProfileProto.internal_static_mediapipe_GraphProfile_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.google.mediapipe.proto.CalculatorProfileProto.internal_static_mediapipe_GraphProfile_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.google.mediapipe.proto.CalculatorProfileProto.GraphProfile.class, com.google.mediapipe.proto.CalculatorProfileProto.GraphProfile.Builder.class);
      }

      // Construct using com.google.mediapipe.proto.CalculatorProfileProto.GraphProfile.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getGraphTraceFieldBuilder();
          getCalculatorProfilesFieldBuilder();
          getConfigFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        if (graphTraceBuilder_ == null) {
          graphTrace_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          graphTraceBuilder_.clear();
        }
        if (calculatorProfilesBuilder_ == null) {
          calculatorProfiles_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          calculatorProfilesBuilder_.clear();
        }
        if (configBuilder_ == null) {
          config_ = null;
        } else {
          configBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.google.mediapipe.proto.CalculatorProfileProto.internal_static_mediapipe_GraphProfile_descriptor;
      }

      public com.google.mediapipe.proto.CalculatorProfileProto.GraphProfile getDefaultInstanceForType() {
        return com.google.mediapipe.proto.CalculatorProfileProto.GraphProfile.getDefaultInstance();
      }

      public com.google.mediapipe.proto.CalculatorProfileProto.GraphProfile build() {
        com.google.mediapipe.proto.CalculatorProfileProto.GraphProfile result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.google.mediapipe.proto.CalculatorProfileProto.GraphProfile buildPartial() {
        com.google.mediapipe.proto.CalculatorProfileProto.GraphProfile result = new com.google.mediapipe.proto.CalculatorProfileProto.GraphProfile(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (graphTraceBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            graphTrace_ = java.util.Collections.unmodifiableList(graphTrace_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.graphTrace_ = graphTrace_;
        } else {
          result.graphTrace_ = graphTraceBuilder_.build();
        }
        if (calculatorProfilesBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            calculatorProfiles_ = java.util.Collections.unmodifiableList(calculatorProfiles_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.calculatorProfiles_ = calculatorProfiles_;
        } else {
          result.calculatorProfiles_ = calculatorProfilesBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000001;
        }
        if (configBuilder_ == null) {
          result.config_ = config_;
        } else {
          result.config_ = configBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.google.mediapipe.proto.CalculatorProfileProto.GraphProfile) {
          return mergeFrom((com.google.mediapipe.proto.CalculatorProfileProto.GraphProfile)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.google.mediapipe.proto.CalculatorProfileProto.GraphProfile other) {
        if (other == com.google.mediapipe.proto.CalculatorProfileProto.GraphProfile.getDefaultInstance()) return this;
        if (graphTraceBuilder_ == null) {
          if (!other.graphTrace_.isEmpty()) {
            if (graphTrace_.isEmpty()) {
              graphTrace_ = other.graphTrace_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureGraphTraceIsMutable();
              graphTrace_.addAll(other.graphTrace_);
            }
            onChanged();
          }
        } else {
          if (!other.graphTrace_.isEmpty()) {
            if (graphTraceBuilder_.isEmpty()) {
              graphTraceBuilder_.dispose();
              graphTraceBuilder_ = null;
              graphTrace_ = other.graphTrace_;
              bitField0_ = (bitField0_ & ~0x00000001);
              graphTraceBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getGraphTraceFieldBuilder() : null;
            } else {
              graphTraceBuilder_.addAllMessages(other.graphTrace_);
            }
          }
        }
        if (calculatorProfilesBuilder_ == null) {
          if (!other.calculatorProfiles_.isEmpty()) {
            if (calculatorProfiles_.isEmpty()) {
              calculatorProfiles_ = other.calculatorProfiles_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureCalculatorProfilesIsMutable();
              calculatorProfiles_.addAll(other.calculatorProfiles_);
            }
            onChanged();
          }
        } else {
          if (!other.calculatorProfiles_.isEmpty()) {
            if (calculatorProfilesBuilder_.isEmpty()) {
              calculatorProfilesBuilder_.dispose();
              calculatorProfilesBuilder_ = null;
              calculatorProfiles_ = other.calculatorProfiles_;
              bitField0_ = (bitField0_ & ~0x00000002);
              calculatorProfilesBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getCalculatorProfilesFieldBuilder() : null;
            } else {
              calculatorProfilesBuilder_.addAllMessages(other.calculatorProfiles_);
            }
          }
        }
        if (other.hasConfig()) {
          mergeConfig(other.getConfig());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        if (hasConfig()) {
          if (!getConfig().isInitialized()) {
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.mediapipe.proto.CalculatorProfileProto.GraphProfile parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.google.mediapipe.proto.CalculatorProfileProto.GraphProfile) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<com.google.mediapipe.proto.CalculatorProfileProto.GraphTrace> graphTrace_ =
        java.util.Collections.emptyList();
      private void ensureGraphTraceIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          graphTrace_ = new java.util.ArrayList<com.google.mediapipe.proto.CalculatorProfileProto.GraphTrace>(graphTrace_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.google.mediapipe.proto.CalculatorProfileProto.GraphTrace, com.google.mediapipe.proto.CalculatorProfileProto.GraphTrace.Builder, com.google.mediapipe.proto.CalculatorProfileProto.GraphTraceOrBuilder> graphTraceBuilder_;

      /**
       * <pre>
       * Recent packet timing informtion about each calculator node and stream.
       * </pre>
       *
       * <code>repeated .mediapipe.GraphTrace graph_trace = 1;</code>
       */
      public java.util.List<com.google.mediapipe.proto.CalculatorProfileProto.GraphTrace> getGraphTraceList() {
        if (graphTraceBuilder_ == null) {
          return java.util.Collections.unmodifiableList(graphTrace_);
        } else {
          return graphTraceBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * Recent packet timing informtion about each calculator node and stream.
       * </pre>
       *
       * <code>repeated .mediapipe.GraphTrace graph_trace = 1;</code>
       */
      public int getGraphTraceCount() {
        if (graphTraceBuilder_ == null) {
          return graphTrace_.size();
        } else {
          return graphTraceBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * Recent packet timing informtion about each calculator node and stream.
       * </pre>
       *
       * <code>repeated .mediapipe.GraphTrace graph_trace = 1;</code>
       */
      public com.google.mediapipe.proto.CalculatorProfileProto.GraphTrace getGraphTrace(int index) {
        if (graphTraceBuilder_ == null) {
          return graphTrace_.get(index);
        } else {
          return graphTraceBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * Recent packet timing informtion about each calculator node and stream.
       * </pre>
       *
       * <code>repeated .mediapipe.GraphTrace graph_trace = 1;</code>
       */
      public Builder setGraphTrace(
          int index, com.google.mediapipe.proto.CalculatorProfileProto.GraphTrace value) {
        if (graphTraceBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureGraphTraceIsMutable();
          graphTrace_.set(index, value);
          onChanged();
        } else {
          graphTraceBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Recent packet timing informtion about each calculator node and stream.
       * </pre>
       *
       * <code>repeated .mediapipe.GraphTrace graph_trace = 1;</code>
       */
      public Builder setGraphTrace(
          int index, com.google.mediapipe.proto.CalculatorProfileProto.GraphTrace.Builder builderForValue) {
        if (graphTraceBuilder_ == null) {
          ensureGraphTraceIsMutable();
          graphTrace_.set(index, builderForValue.build());
          onChanged();
        } else {
          graphTraceBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Recent packet timing informtion about each calculator node and stream.
       * </pre>
       *
       * <code>repeated .mediapipe.GraphTrace graph_trace = 1;</code>
       */
      public Builder addGraphTrace(com.google.mediapipe.proto.CalculatorProfileProto.GraphTrace value) {
        if (graphTraceBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureGraphTraceIsMutable();
          graphTrace_.add(value);
          onChanged();
        } else {
          graphTraceBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * Recent packet timing informtion about each calculator node and stream.
       * </pre>
       *
       * <code>repeated .mediapipe.GraphTrace graph_trace = 1;</code>
       */
      public Builder addGraphTrace(
          int index, com.google.mediapipe.proto.CalculatorProfileProto.GraphTrace value) {
        if (graphTraceBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureGraphTraceIsMutable();
          graphTrace_.add(index, value);
          onChanged();
        } else {
          graphTraceBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Recent packet timing informtion about each calculator node and stream.
       * </pre>
       *
       * <code>repeated .mediapipe.GraphTrace graph_trace = 1;</code>
       */
      public Builder addGraphTrace(
          com.google.mediapipe.proto.CalculatorProfileProto.GraphTrace.Builder builderForValue) {
        if (graphTraceBuilder_ == null) {
          ensureGraphTraceIsMutable();
          graphTrace_.add(builderForValue.build());
          onChanged();
        } else {
          graphTraceBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Recent packet timing informtion about each calculator node and stream.
       * </pre>
       *
       * <code>repeated .mediapipe.GraphTrace graph_trace = 1;</code>
       */
      public Builder addGraphTrace(
          int index, com.google.mediapipe.proto.CalculatorProfileProto.GraphTrace.Builder builderForValue) {
        if (graphTraceBuilder_ == null) {
          ensureGraphTraceIsMutable();
          graphTrace_.add(index, builderForValue.build());
          onChanged();
        } else {
          graphTraceBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Recent packet timing informtion about each calculator node and stream.
       * </pre>
       *
       * <code>repeated .mediapipe.GraphTrace graph_trace = 1;</code>
       */
      public Builder addAllGraphTrace(
          java.lang.Iterable<? extends com.google.mediapipe.proto.CalculatorProfileProto.GraphTrace> values) {
        if (graphTraceBuilder_ == null) {
          ensureGraphTraceIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, graphTrace_);
          onChanged();
        } else {
          graphTraceBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * Recent packet timing informtion about each calculator node and stream.
       * </pre>
       *
       * <code>repeated .mediapipe.GraphTrace graph_trace = 1;</code>
       */
      public Builder clearGraphTrace() {
        if (graphTraceBuilder_ == null) {
          graphTrace_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          graphTraceBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * Recent packet timing informtion about each calculator node and stream.
       * </pre>
       *
       * <code>repeated .mediapipe.GraphTrace graph_trace = 1;</code>
       */
      public Builder removeGraphTrace(int index) {
        if (graphTraceBuilder_ == null) {
          ensureGraphTraceIsMutable();
          graphTrace_.remove(index);
          onChanged();
        } else {
          graphTraceBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * Recent packet timing informtion about each calculator node and stream.
       * </pre>
       *
       * <code>repeated .mediapipe.GraphTrace graph_trace = 1;</code>
       */
      public com.google.mediapipe.proto.CalculatorProfileProto.GraphTrace.Builder getGraphTraceBuilder(
          int index) {
        return getGraphTraceFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * Recent packet timing informtion about each calculator node and stream.
       * </pre>
       *
       * <code>repeated .mediapipe.GraphTrace graph_trace = 1;</code>
       */
      public com.google.mediapipe.proto.CalculatorProfileProto.GraphTraceOrBuilder getGraphTraceOrBuilder(
          int index) {
        if (graphTraceBuilder_ == null) {
          return graphTrace_.get(index);  } else {
          return graphTraceBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * Recent packet timing informtion about each calculator node and stream.
       * </pre>
       *
       * <code>repeated .mediapipe.GraphTrace graph_trace = 1;</code>
       */
      public java.util.List<? extends com.google.mediapipe.proto.CalculatorProfileProto.GraphTraceOrBuilder> 
           getGraphTraceOrBuilderList() {
        if (graphTraceBuilder_ != null) {
          return graphTraceBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(graphTrace_);
        }
      }
      /**
       * <pre>
       * Recent packet timing informtion about each calculator node and stream.
       * </pre>
       *
       * <code>repeated .mediapipe.GraphTrace graph_trace = 1;</code>
       */
      public com.google.mediapipe.proto.CalculatorProfileProto.GraphTrace.Builder addGraphTraceBuilder() {
        return getGraphTraceFieldBuilder().addBuilder(
            com.google.mediapipe.proto.CalculatorProfileProto.GraphTrace.getDefaultInstance());
      }
      /**
       * <pre>
       * Recent packet timing informtion about each calculator node and stream.
       * </pre>
       *
       * <code>repeated .mediapipe.GraphTrace graph_trace = 1;</code>
       */
      public com.google.mediapipe.proto.CalculatorProfileProto.GraphTrace.Builder addGraphTraceBuilder(
          int index) {
        return getGraphTraceFieldBuilder().addBuilder(
            index, com.google.mediapipe.proto.CalculatorProfileProto.GraphTrace.getDefaultInstance());
      }
      /**
       * <pre>
       * Recent packet timing informtion about each calculator node and stream.
       * </pre>
       *
       * <code>repeated .mediapipe.GraphTrace graph_trace = 1;</code>
       */
      public java.util.List<com.google.mediapipe.proto.CalculatorProfileProto.GraphTrace.Builder> 
           getGraphTraceBuilderList() {
        return getGraphTraceFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.google.mediapipe.proto.CalculatorProfileProto.GraphTrace, com.google.mediapipe.proto.CalculatorProfileProto.GraphTrace.Builder, com.google.mediapipe.proto.CalculatorProfileProto.GraphTraceOrBuilder> 
          getGraphTraceFieldBuilder() {
        if (graphTraceBuilder_ == null) {
          graphTraceBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              com.google.mediapipe.proto.CalculatorProfileProto.GraphTrace, com.google.mediapipe.proto.CalculatorProfileProto.GraphTrace.Builder, com.google.mediapipe.proto.CalculatorProfileProto.GraphTraceOrBuilder>(
                  graphTrace_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          graphTrace_ = null;
        }
        return graphTraceBuilder_;
      }

      private java.util.List<com.google.mediapipe.proto.CalculatorProfileProto.CalculatorProfile> calculatorProfiles_ =
        java.util.Collections.emptyList();
      private void ensureCalculatorProfilesIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          calculatorProfiles_ = new java.util.ArrayList<com.google.mediapipe.proto.CalculatorProfileProto.CalculatorProfile>(calculatorProfiles_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.google.mediapipe.proto.CalculatorProfileProto.CalculatorProfile, com.google.mediapipe.proto.CalculatorProfileProto.CalculatorProfile.Builder, com.google.mediapipe.proto.CalculatorProfileProto.CalculatorProfileOrBuilder> calculatorProfilesBuilder_;

      /**
       * <pre>
       * Aggregated latency information about each calculator node.
       * </pre>
       *
       * <code>repeated .mediapipe.CalculatorProfile calculator_profiles = 2;</code>
       */
      public java.util.List<com.google.mediapipe.proto.CalculatorProfileProto.CalculatorProfile> getCalculatorProfilesList() {
        if (calculatorProfilesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(calculatorProfiles_);
        } else {
          return calculatorProfilesBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * Aggregated latency information about each calculator node.
       * </pre>
       *
       * <code>repeated .mediapipe.CalculatorProfile calculator_profiles = 2;</code>
       */
      public int getCalculatorProfilesCount() {
        if (calculatorProfilesBuilder_ == null) {
          return calculatorProfiles_.size();
        } else {
          return calculatorProfilesBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * Aggregated latency information about each calculator node.
       * </pre>
       *
       * <code>repeated .mediapipe.CalculatorProfile calculator_profiles = 2;</code>
       */
      public com.google.mediapipe.proto.CalculatorProfileProto.CalculatorProfile getCalculatorProfiles(int index) {
        if (calculatorProfilesBuilder_ == null) {
          return calculatorProfiles_.get(index);
        } else {
          return calculatorProfilesBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * Aggregated latency information about each calculator node.
       * </pre>
       *
       * <code>repeated .mediapipe.CalculatorProfile calculator_profiles = 2;</code>
       */
      public Builder setCalculatorProfiles(
          int index, com.google.mediapipe.proto.CalculatorProfileProto.CalculatorProfile value) {
        if (calculatorProfilesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCalculatorProfilesIsMutable();
          calculatorProfiles_.set(index, value);
          onChanged();
        } else {
          calculatorProfilesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Aggregated latency information about each calculator node.
       * </pre>
       *
       * <code>repeated .mediapipe.CalculatorProfile calculator_profiles = 2;</code>
       */
      public Builder setCalculatorProfiles(
          int index, com.google.mediapipe.proto.CalculatorProfileProto.CalculatorProfile.Builder builderForValue) {
        if (calculatorProfilesBuilder_ == null) {
          ensureCalculatorProfilesIsMutable();
          calculatorProfiles_.set(index, builderForValue.build());
          onChanged();
        } else {
          calculatorProfilesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Aggregated latency information about each calculator node.
       * </pre>
       *
       * <code>repeated .mediapipe.CalculatorProfile calculator_profiles = 2;</code>
       */
      public Builder addCalculatorProfiles(com.google.mediapipe.proto.CalculatorProfileProto.CalculatorProfile value) {
        if (calculatorProfilesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCalculatorProfilesIsMutable();
          calculatorProfiles_.add(value);
          onChanged();
        } else {
          calculatorProfilesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * Aggregated latency information about each calculator node.
       * </pre>
       *
       * <code>repeated .mediapipe.CalculatorProfile calculator_profiles = 2;</code>
       */
      public Builder addCalculatorProfiles(
          int index, com.google.mediapipe.proto.CalculatorProfileProto.CalculatorProfile value) {
        if (calculatorProfilesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCalculatorProfilesIsMutable();
          calculatorProfiles_.add(index, value);
          onChanged();
        } else {
          calculatorProfilesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Aggregated latency information about each calculator node.
       * </pre>
       *
       * <code>repeated .mediapipe.CalculatorProfile calculator_profiles = 2;</code>
       */
      public Builder addCalculatorProfiles(
          com.google.mediapipe.proto.CalculatorProfileProto.CalculatorProfile.Builder builderForValue) {
        if (calculatorProfilesBuilder_ == null) {
          ensureCalculatorProfilesIsMutable();
          calculatorProfiles_.add(builderForValue.build());
          onChanged();
        } else {
          calculatorProfilesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Aggregated latency information about each calculator node.
       * </pre>
       *
       * <code>repeated .mediapipe.CalculatorProfile calculator_profiles = 2;</code>
       */
      public Builder addCalculatorProfiles(
          int index, com.google.mediapipe.proto.CalculatorProfileProto.CalculatorProfile.Builder builderForValue) {
        if (calculatorProfilesBuilder_ == null) {
          ensureCalculatorProfilesIsMutable();
          calculatorProfiles_.add(index, builderForValue.build());
          onChanged();
        } else {
          calculatorProfilesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Aggregated latency information about each calculator node.
       * </pre>
       *
       * <code>repeated .mediapipe.CalculatorProfile calculator_profiles = 2;</code>
       */
      public Builder addAllCalculatorProfiles(
          java.lang.Iterable<? extends com.google.mediapipe.proto.CalculatorProfileProto.CalculatorProfile> values) {
        if (calculatorProfilesBuilder_ == null) {
          ensureCalculatorProfilesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, calculatorProfiles_);
          onChanged();
        } else {
          calculatorProfilesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * Aggregated latency information about each calculator node.
       * </pre>
       *
       * <code>repeated .mediapipe.CalculatorProfile calculator_profiles = 2;</code>
       */
      public Builder clearCalculatorProfiles() {
        if (calculatorProfilesBuilder_ == null) {
          calculatorProfiles_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          calculatorProfilesBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * Aggregated latency information about each calculator node.
       * </pre>
       *
       * <code>repeated .mediapipe.CalculatorProfile calculator_profiles = 2;</code>
       */
      public Builder removeCalculatorProfiles(int index) {
        if (calculatorProfilesBuilder_ == null) {
          ensureCalculatorProfilesIsMutable();
          calculatorProfiles_.remove(index);
          onChanged();
        } else {
          calculatorProfilesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * Aggregated latency information about each calculator node.
       * </pre>
       *
       * <code>repeated .mediapipe.CalculatorProfile calculator_profiles = 2;</code>
       */
      public com.google.mediapipe.proto.CalculatorProfileProto.CalculatorProfile.Builder getCalculatorProfilesBuilder(
          int index) {
        return getCalculatorProfilesFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * Aggregated latency information about each calculator node.
       * </pre>
       *
       * <code>repeated .mediapipe.CalculatorProfile calculator_profiles = 2;</code>
       */
      public com.google.mediapipe.proto.CalculatorProfileProto.CalculatorProfileOrBuilder getCalculatorProfilesOrBuilder(
          int index) {
        if (calculatorProfilesBuilder_ == null) {
          return calculatorProfiles_.get(index);  } else {
          return calculatorProfilesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * Aggregated latency information about each calculator node.
       * </pre>
       *
       * <code>repeated .mediapipe.CalculatorProfile calculator_profiles = 2;</code>
       */
      public java.util.List<? extends com.google.mediapipe.proto.CalculatorProfileProto.CalculatorProfileOrBuilder> 
           getCalculatorProfilesOrBuilderList() {
        if (calculatorProfilesBuilder_ != null) {
          return calculatorProfilesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(calculatorProfiles_);
        }
      }
      /**
       * <pre>
       * Aggregated latency information about each calculator node.
       * </pre>
       *
       * <code>repeated .mediapipe.CalculatorProfile calculator_profiles = 2;</code>
       */
      public com.google.mediapipe.proto.CalculatorProfileProto.CalculatorProfile.Builder addCalculatorProfilesBuilder() {
        return getCalculatorProfilesFieldBuilder().addBuilder(
            com.google.mediapipe.proto.CalculatorProfileProto.CalculatorProfile.getDefaultInstance());
      }
      /**
       * <pre>
       * Aggregated latency information about each calculator node.
       * </pre>
       *
       * <code>repeated .mediapipe.CalculatorProfile calculator_profiles = 2;</code>
       */
      public com.google.mediapipe.proto.CalculatorProfileProto.CalculatorProfile.Builder addCalculatorProfilesBuilder(
          int index) {
        return getCalculatorProfilesFieldBuilder().addBuilder(
            index, com.google.mediapipe.proto.CalculatorProfileProto.CalculatorProfile.getDefaultInstance());
      }
      /**
       * <pre>
       * Aggregated latency information about each calculator node.
       * </pre>
       *
       * <code>repeated .mediapipe.CalculatorProfile calculator_profiles = 2;</code>
       */
      public java.util.List<com.google.mediapipe.proto.CalculatorProfileProto.CalculatorProfile.Builder> 
           getCalculatorProfilesBuilderList() {
        return getCalculatorProfilesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.google.mediapipe.proto.CalculatorProfileProto.CalculatorProfile, com.google.mediapipe.proto.CalculatorProfileProto.CalculatorProfile.Builder, com.google.mediapipe.proto.CalculatorProfileProto.CalculatorProfileOrBuilder> 
          getCalculatorProfilesFieldBuilder() {
        if (calculatorProfilesBuilder_ == null) {
          calculatorProfilesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              com.google.mediapipe.proto.CalculatorProfileProto.CalculatorProfile, com.google.mediapipe.proto.CalculatorProfileProto.CalculatorProfile.Builder, com.google.mediapipe.proto.CalculatorProfileProto.CalculatorProfileOrBuilder>(
                  calculatorProfiles_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          calculatorProfiles_ = null;
        }
        return calculatorProfilesBuilder_;
      }

      private com.google.mediapipe.proto.CalculatorProto.CalculatorGraphConfig config_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.mediapipe.proto.CalculatorProto.CalculatorGraphConfig, com.google.mediapipe.proto.CalculatorProto.CalculatorGraphConfig.Builder, com.google.mediapipe.proto.CalculatorProto.CalculatorGraphConfigOrBuilder> configBuilder_;
      /**
       * <pre>
       * The canonicalized calculator graph that is traced.
       * </pre>
       *
       * <code>optional .mediapipe.CalculatorGraphConfig config = 3;</code>
       */
      public boolean hasConfig() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <pre>
       * The canonicalized calculator graph that is traced.
       * </pre>
       *
       * <code>optional .mediapipe.CalculatorGraphConfig config = 3;</code>
       */
      public com.google.mediapipe.proto.CalculatorProto.CalculatorGraphConfig getConfig() {
        if (configBuilder_ == null) {
          return config_ == null ? com.google.mediapipe.proto.CalculatorProto.CalculatorGraphConfig.getDefaultInstance() : config_;
        } else {
          return configBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * The canonicalized calculator graph that is traced.
       * </pre>
       *
       * <code>optional .mediapipe.CalculatorGraphConfig config = 3;</code>
       */
      public Builder setConfig(com.google.mediapipe.proto.CalculatorProto.CalculatorGraphConfig value) {
        if (configBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          config_ = value;
          onChanged();
        } else {
          configBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <pre>
       * The canonicalized calculator graph that is traced.
       * </pre>
       *
       * <code>optional .mediapipe.CalculatorGraphConfig config = 3;</code>
       */
      public Builder setConfig(
          com.google.mediapipe.proto.CalculatorProto.CalculatorGraphConfig.Builder builderForValue) {
        if (configBuilder_ == null) {
          config_ = builderForValue.build();
          onChanged();
        } else {
          configBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <pre>
       * The canonicalized calculator graph that is traced.
       * </pre>
       *
       * <code>optional .mediapipe.CalculatorGraphConfig config = 3;</code>
       */
      public Builder mergeConfig(com.google.mediapipe.proto.CalculatorProto.CalculatorGraphConfig value) {
        if (configBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004) &&
              config_ != null &&
              config_ != com.google.mediapipe.proto.CalculatorProto.CalculatorGraphConfig.getDefaultInstance()) {
            config_ =
              com.google.mediapipe.proto.CalculatorProto.CalculatorGraphConfig.newBuilder(config_).mergeFrom(value).buildPartial();
          } else {
            config_ = value;
          }
          onChanged();
        } else {
          configBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <pre>
       * The canonicalized calculator graph that is traced.
       * </pre>
       *
       * <code>optional .mediapipe.CalculatorGraphConfig config = 3;</code>
       */
      public Builder clearConfig() {
        if (configBuilder_ == null) {
          config_ = null;
          onChanged();
        } else {
          configBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      /**
       * <pre>
       * The canonicalized calculator graph that is traced.
       * </pre>
       *
       * <code>optional .mediapipe.CalculatorGraphConfig config = 3;</code>
       */
      public com.google.mediapipe.proto.CalculatorProto.CalculatorGraphConfig.Builder getConfigBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getConfigFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * The canonicalized calculator graph that is traced.
       * </pre>
       *
       * <code>optional .mediapipe.CalculatorGraphConfig config = 3;</code>
       */
      public com.google.mediapipe.proto.CalculatorProto.CalculatorGraphConfigOrBuilder getConfigOrBuilder() {
        if (configBuilder_ != null) {
          return configBuilder_.getMessageOrBuilder();
        } else {
          return config_ == null ?
              com.google.mediapipe.proto.CalculatorProto.CalculatorGraphConfig.getDefaultInstance() : config_;
        }
      }
      /**
       * <pre>
       * The canonicalized calculator graph that is traced.
       * </pre>
       *
       * <code>optional .mediapipe.CalculatorGraphConfig config = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.mediapipe.proto.CalculatorProto.CalculatorGraphConfig, com.google.mediapipe.proto.CalculatorProto.CalculatorGraphConfig.Builder, com.google.mediapipe.proto.CalculatorProto.CalculatorGraphConfigOrBuilder> 
          getConfigFieldBuilder() {
        if (configBuilder_ == null) {
          configBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.mediapipe.proto.CalculatorProto.CalculatorGraphConfig, com.google.mediapipe.proto.CalculatorProto.CalculatorGraphConfig.Builder, com.google.mediapipe.proto.CalculatorProto.CalculatorGraphConfigOrBuilder>(
                  getConfig(),
                  getParentForChildren(),
                  isClean());
          config_ = null;
        }
        return configBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:mediapipe.GraphProfile)
    }

    // @@protoc_insertion_point(class_scope:mediapipe.GraphProfile)
    private static final com.google.mediapipe.proto.CalculatorProfileProto.GraphProfile DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.google.mediapipe.proto.CalculatorProfileProto.GraphProfile();
    }

    public static com.google.mediapipe.proto.CalculatorProfileProto.GraphProfile getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<GraphProfile>
        PARSER = new com.google.protobuf.AbstractParser<GraphProfile>() {
      public GraphProfile parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new GraphProfile(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<GraphProfile> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<GraphProfile> getParserForType() {
      return PARSER;
    }

    public com.google.mediapipe.proto.CalculatorProfileProto.GraphProfile getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_mediapipe_TimeHistogram_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_mediapipe_TimeHistogram_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_mediapipe_StreamProfile_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_mediapipe_StreamProfile_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_mediapipe_CalculatorProfile_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_mediapipe_CalculatorProfile_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_mediapipe_GraphTrace_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_mediapipe_GraphTrace_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_mediapipe_GraphTrace_StreamTrace_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_mediapipe_GraphTrace_StreamTrace_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_mediapipe_GraphTrace_CalculatorTrace_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_mediapipe_GraphTrace_CalculatorTrace_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_mediapipe_GraphProfile_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_mediapipe_GraphProfile_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n,mediapipe/framework/calculator_profile" +
      ".proto\022\tmediapipe\032$mediapipe/framework/c" +
      "alculator.proto\"o\n\rTimeHistogram\022\020\n\005tota" +
      "l\030\001 \001(\003:\0010\022#\n\022interval_size_usec\030\002 \001(\003:\007" +
      "1000000\022\030\n\rnum_intervals\030\003 \001(\003:\0011\022\r\n\005cou" +
      "nt\030\004 \003(\003\"b\n\rStreamProfile\022\014\n\004name\030\001 \001(\t\022" +
      "\030\n\tback_edge\030\002 \001(\010:\005false\022)\n\007latency\030\003 \001" +
      "(\0132\030.mediapipe.TimeHistogram\"\263\002\n\021Calcula" +
      "torProfile\022\014\n\004name\030\001 \001(\t\022\027\n\014open_runtime" +
      "\030\002 \001(\003:\0010\022\030\n\rclose_runtime\030\003 \001(\003:\0010\0221\n\017p",
      "rocess_runtime\030\004 \001(\0132\030.mediapipe.TimeHis" +
      "togram\0227\n\025process_input_latency\030\005 \001(\0132\030." +
      "mediapipe.TimeHistogram\0228\n\026process_outpu" +
      "t_latency\030\006 \001(\0132\030.mediapipe.TimeHistogra" +
      "m\0227\n\025input_stream_profiles\030\007 \003(\0132\030.media" +
      "pipe.StreamProfile\"\275\006\n\nGraphTrace\022\021\n\tbas" +
      "e_time\030\001 \001(\003\022\026\n\016base_timestamp\030\002 \001(\003\022\027\n\017" +
      "calculator_name\030\003 \003(\t\022\023\n\013stream_name\030\004 \003" +
      "(\t\022?\n\020calculator_trace\030\005 \003(\0132%.mediapipe" +
      ".GraphTrace.CalculatorTrace\032v\n\013StreamTra",
      "ce\022\022\n\nstart_time\030\001 \001(\003\022\023\n\013finish_time\030\002 " +
      "\001(\003\022\030\n\020packet_timestamp\030\003 \001(\003\022\021\n\tstream_" +
      "id\030\004 \001(\005\022\021\n\tpacket_id\030\005 \001(\003\032\235\002\n\017Calculat" +
      "orTrace\022\017\n\007node_id\030\001 \001(\005\022\027\n\017input_timest" +
      "amp\030\002 \001(\003\0223\n\nevent_type\030\003 \001(\0162\037.mediapip" +
      "e.GraphTrace.EventType\022\022\n\nstart_time\030\004 \001" +
      "(\003\022\023\n\013finish_time\030\005 \001(\003\0226\n\013input_trace\030\006" +
      " \003(\0132!.mediapipe.GraphTrace.StreamTrace\022" +
      "7\n\014output_trace\030\007 \003(\0132!.mediapipe.GraphT" +
      "race.StreamTrace\022\021\n\tthread_id\030\010 \001(\005\"\374\001\n\t",
      "EventType\022\013\n\007UNKNOWN\020\000\022\010\n\004OPEN\020\001\022\013\n\007PROC" +
      "ESS\020\002\022\t\n\005CLOSE\020\003\022\r\n\tNOT_READY\020\004\022\025\n\021READY" +
      "_FOR_PROCESS\020\005\022\023\n\017READY_FOR_CLOSE\020\006\022\r\n\tT" +
      "HROTTLED\020\007\022\017\n\013UNTHROTTLED\020\010\022\021\n\rCPU_TASK_" +
      "USER\020\t\022\023\n\017CPU_TASK_SYSTEM\020\n\022\014\n\010GPU_TASK\020" +
      "\013\022\014\n\010DSP_TASK\020\014\022\014\n\010TPU_TASK\020\r\022\023\n\017GPU_CAL" +
      "IBRATION\020\016\"\247\001\n\014GraphProfile\022*\n\013graph_tra" +
      "ce\030\001 \003(\0132\025.mediapipe.GraphTrace\0229\n\023calcu" +
      "lator_profiles\030\002 \003(\0132\034.mediapipe.Calcula" +
      "torProfile\0220\n\006config\030\003 \001(\0132 .mediapipe.C",
      "alculatorGraphConfigB4\n\032com.google.media" +
      "pipe.protoB\026CalculatorProfileProto"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.google.mediapipe.proto.CalculatorProto.getDescriptor(),
        }, assigner);
    internal_static_mediapipe_TimeHistogram_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_mediapipe_TimeHistogram_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_mediapipe_TimeHistogram_descriptor,
        new java.lang.String[] { "Total", "IntervalSizeUsec", "NumIntervals", "Count", });
    internal_static_mediapipe_StreamProfile_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_mediapipe_StreamProfile_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_mediapipe_StreamProfile_descriptor,
        new java.lang.String[] { "Name", "BackEdge", "Latency", });
    internal_static_mediapipe_CalculatorProfile_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_mediapipe_CalculatorProfile_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_mediapipe_CalculatorProfile_descriptor,
        new java.lang.String[] { "Name", "OpenRuntime", "CloseRuntime", "ProcessRuntime", "ProcessInputLatency", "ProcessOutputLatency", "InputStreamProfiles", });
    internal_static_mediapipe_GraphTrace_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_mediapipe_GraphTrace_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_mediapipe_GraphTrace_descriptor,
        new java.lang.String[] { "BaseTime", "BaseTimestamp", "CalculatorName", "StreamName", "CalculatorTrace", });
    internal_static_mediapipe_GraphTrace_StreamTrace_descriptor =
      internal_static_mediapipe_GraphTrace_descriptor.getNestedTypes().get(0);
    internal_static_mediapipe_GraphTrace_StreamTrace_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_mediapipe_GraphTrace_StreamTrace_descriptor,
        new java.lang.String[] { "StartTime", "FinishTime", "PacketTimestamp", "StreamId", "PacketId", });
    internal_static_mediapipe_GraphTrace_CalculatorTrace_descriptor =
      internal_static_mediapipe_GraphTrace_descriptor.getNestedTypes().get(1);
    internal_static_mediapipe_GraphTrace_CalculatorTrace_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_mediapipe_GraphTrace_CalculatorTrace_descriptor,
        new java.lang.String[] { "NodeId", "InputTimestamp", "EventType", "StartTime", "FinishTime", "InputTrace", "OutputTrace", "ThreadId", });
    internal_static_mediapipe_GraphProfile_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_mediapipe_GraphProfile_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_mediapipe_GraphProfile_descriptor,
        new java.lang.String[] { "GraphTrace", "CalculatorProfiles", "Config", });
    com.google.mediapipe.proto.CalculatorProto.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
