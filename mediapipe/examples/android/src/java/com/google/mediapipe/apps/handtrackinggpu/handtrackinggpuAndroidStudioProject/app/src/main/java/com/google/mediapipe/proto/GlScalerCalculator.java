// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: mediapipe/gpu/gl_scaler_calculator.proto

package mediapipe;

public final class GlScalerCalculator {
  private GlScalerCalculator() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
    registry.add(mediapipe.GlScalerCalculator.GlScalerCalculatorOptions.ext);
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface GlScalerCalculatorOptionsOrBuilder extends
      // @@protoc_insertion_point(interface_extends:mediapipe.GlScalerCalculatorOptions)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Output dimensions.
     * </pre>
     *
     * <code>optional int32 output_width = 1;</code>
     */
    boolean hasOutputWidth();
    /**
     * <pre>
     * Output dimensions.
     * </pre>
     *
     * <code>optional int32 output_width = 1;</code>
     */
    int getOutputWidth();

    /**
     * <code>optional int32 output_height = 2;</code>
     */
    boolean hasOutputHeight();
    /**
     * <code>optional int32 output_height = 2;</code>
     */
    int getOutputHeight();

    /**
     * <pre>
     * Counterclockwise rotation in degrees. Must be a multiple of 90.
     * </pre>
     *
     * <code>optional int32 rotation = 3;</code>
     */
    boolean hasRotation();
    /**
     * <pre>
     * Counterclockwise rotation in degrees. Must be a multiple of 90.
     * </pre>
     *
     * <code>optional int32 rotation = 3;</code>
     */
    int getRotation();

    /**
     * <pre>
     * Flip the output texture vertically. This is applied after rotation.
     * </pre>
     *
     * <code>optional bool flip_vertical = 4;</code>
     */
    boolean hasFlipVertical();
    /**
     * <pre>
     * Flip the output texture vertically. This is applied after rotation.
     * </pre>
     *
     * <code>optional bool flip_vertical = 4;</code>
     */
    boolean getFlipVertical();

    /**
     * <pre>
     * Flip the output texture horizontally. This is applied after rotation.
     * </pre>
     *
     * <code>optional bool flip_horizontal = 5;</code>
     */
    boolean hasFlipHorizontal();
    /**
     * <pre>
     * Flip the output texture horizontally. This is applied after rotation.
     * </pre>
     *
     * <code>optional bool flip_horizontal = 5;</code>
     */
    boolean getFlipHorizontal();

    /**
     * <code>optional .mediapipe.ScaleMode.Mode scale_mode = 6;</code>
     */
    boolean hasScaleMode();
    /**
     * <code>optional .mediapipe.ScaleMode.Mode scale_mode = 6;</code>
     */
    mediapipe.ScaleModeOuterClass.ScaleMode.Mode getScaleMode();
  }
  /**
   * Protobuf type {@code mediapipe.GlScalerCalculatorOptions}
   */
  public  static final class GlScalerCalculatorOptions extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:mediapipe.GlScalerCalculatorOptions)
      GlScalerCalculatorOptionsOrBuilder {
    // Use GlScalerCalculatorOptions.newBuilder() to construct.
    private GlScalerCalculatorOptions(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private GlScalerCalculatorOptions() {
      outputWidth_ = 0;
      outputHeight_ = 0;
      rotation_ = 0;
      flipVertical_ = false;
      flipHorizontal_ = false;
      scaleMode_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private GlScalerCalculatorOptions(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              outputWidth_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              outputHeight_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              rotation_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              flipVertical_ = input.readBool();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              flipHorizontal_ = input.readBool();
              break;
            }
            case 48: {
              int rawValue = input.readEnum();
              mediapipe.ScaleModeOuterClass.ScaleMode.Mode value = mediapipe.ScaleModeOuterClass.ScaleMode.Mode.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(6, rawValue);
              } else {
                bitField0_ |= 0x00000020;
                scaleMode_ = rawValue;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return mediapipe.GlScalerCalculator.internal_static_mediapipe_GlScalerCalculatorOptions_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return mediapipe.GlScalerCalculator.internal_static_mediapipe_GlScalerCalculatorOptions_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              mediapipe.GlScalerCalculator.GlScalerCalculatorOptions.class, mediapipe.GlScalerCalculator.GlScalerCalculatorOptions.Builder.class);
    }

    private int bitField0_;
    public static final int OUTPUT_WIDTH_FIELD_NUMBER = 1;
    private int outputWidth_;
    /**
     * <pre>
     * Output dimensions.
     * </pre>
     *
     * <code>optional int32 output_width = 1;</code>
     */
    public boolean hasOutputWidth() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <pre>
     * Output dimensions.
     * </pre>
     *
     * <code>optional int32 output_width = 1;</code>
     */
    public int getOutputWidth() {
      return outputWidth_;
    }

    public static final int OUTPUT_HEIGHT_FIELD_NUMBER = 2;
    private int outputHeight_;
    /**
     * <code>optional int32 output_height = 2;</code>
     */
    public boolean hasOutputHeight() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 output_height = 2;</code>
     */
    public int getOutputHeight() {
      return outputHeight_;
    }

    public static final int ROTATION_FIELD_NUMBER = 3;
    private int rotation_;
    /**
     * <pre>
     * Counterclockwise rotation in degrees. Must be a multiple of 90.
     * </pre>
     *
     * <code>optional int32 rotation = 3;</code>
     */
    public boolean hasRotation() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <pre>
     * Counterclockwise rotation in degrees. Must be a multiple of 90.
     * </pre>
     *
     * <code>optional int32 rotation = 3;</code>
     */
    public int getRotation() {
      return rotation_;
    }

    public static final int FLIP_VERTICAL_FIELD_NUMBER = 4;
    private boolean flipVertical_;
    /**
     * <pre>
     * Flip the output texture vertically. This is applied after rotation.
     * </pre>
     *
     * <code>optional bool flip_vertical = 4;</code>
     */
    public boolean hasFlipVertical() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <pre>
     * Flip the output texture vertically. This is applied after rotation.
     * </pre>
     *
     * <code>optional bool flip_vertical = 4;</code>
     */
    public boolean getFlipVertical() {
      return flipVertical_;
    }

    public static final int FLIP_HORIZONTAL_FIELD_NUMBER = 5;
    private boolean flipHorizontal_;
    /**
     * <pre>
     * Flip the output texture horizontally. This is applied after rotation.
     * </pre>
     *
     * <code>optional bool flip_horizontal = 5;</code>
     */
    public boolean hasFlipHorizontal() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <pre>
     * Flip the output texture horizontally. This is applied after rotation.
     * </pre>
     *
     * <code>optional bool flip_horizontal = 5;</code>
     */
    public boolean getFlipHorizontal() {
      return flipHorizontal_;
    }

    public static final int SCALE_MODE_FIELD_NUMBER = 6;
    private int scaleMode_;
    /**
     * <code>optional .mediapipe.ScaleMode.Mode scale_mode = 6;</code>
     */
    public boolean hasScaleMode() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional .mediapipe.ScaleMode.Mode scale_mode = 6;</code>
     */
    public mediapipe.ScaleModeOuterClass.ScaleMode.Mode getScaleMode() {
      mediapipe.ScaleModeOuterClass.ScaleMode.Mode result = mediapipe.ScaleModeOuterClass.ScaleMode.Mode.valueOf(scaleMode_);
      return result == null ? mediapipe.ScaleModeOuterClass.ScaleMode.Mode.DEFAULT : result;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, outputWidth_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, outputHeight_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, rotation_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBool(4, flipVertical_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeBool(5, flipHorizontal_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeEnum(6, scaleMode_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, outputWidth_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, outputHeight_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, rotation_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(4, flipVertical_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(5, flipHorizontal_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(6, scaleMode_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof mediapipe.GlScalerCalculator.GlScalerCalculatorOptions)) {
        return super.equals(obj);
      }
      mediapipe.GlScalerCalculator.GlScalerCalculatorOptions other = (mediapipe.GlScalerCalculator.GlScalerCalculatorOptions) obj;

      boolean result = true;
      result = result && (hasOutputWidth() == other.hasOutputWidth());
      if (hasOutputWidth()) {
        result = result && (getOutputWidth()
            == other.getOutputWidth());
      }
      result = result && (hasOutputHeight() == other.hasOutputHeight());
      if (hasOutputHeight()) {
        result = result && (getOutputHeight()
            == other.getOutputHeight());
      }
      result = result && (hasRotation() == other.hasRotation());
      if (hasRotation()) {
        result = result && (getRotation()
            == other.getRotation());
      }
      result = result && (hasFlipVertical() == other.hasFlipVertical());
      if (hasFlipVertical()) {
        result = result && (getFlipVertical()
            == other.getFlipVertical());
      }
      result = result && (hasFlipHorizontal() == other.hasFlipHorizontal());
      if (hasFlipHorizontal()) {
        result = result && (getFlipHorizontal()
            == other.getFlipHorizontal());
      }
      result = result && (hasScaleMode() == other.hasScaleMode());
      if (hasScaleMode()) {
        result = result && scaleMode_ == other.scaleMode_;
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      if (hasOutputWidth()) {
        hash = (37 * hash) + OUTPUT_WIDTH_FIELD_NUMBER;
        hash = (53 * hash) + getOutputWidth();
      }
      if (hasOutputHeight()) {
        hash = (37 * hash) + OUTPUT_HEIGHT_FIELD_NUMBER;
        hash = (53 * hash) + getOutputHeight();
      }
      if (hasRotation()) {
        hash = (37 * hash) + ROTATION_FIELD_NUMBER;
        hash = (53 * hash) + getRotation();
      }
      if (hasFlipVertical()) {
        hash = (37 * hash) + FLIP_VERTICAL_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getFlipVertical());
      }
      if (hasFlipHorizontal()) {
        hash = (37 * hash) + FLIP_HORIZONTAL_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getFlipHorizontal());
      }
      if (hasScaleMode()) {
        hash = (37 * hash) + SCALE_MODE_FIELD_NUMBER;
        hash = (53 * hash) + scaleMode_;
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static mediapipe.GlScalerCalculator.GlScalerCalculatorOptions parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static mediapipe.GlScalerCalculator.GlScalerCalculatorOptions parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static mediapipe.GlScalerCalculator.GlScalerCalculatorOptions parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static mediapipe.GlScalerCalculator.GlScalerCalculatorOptions parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static mediapipe.GlScalerCalculator.GlScalerCalculatorOptions parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static mediapipe.GlScalerCalculator.GlScalerCalculatorOptions parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static mediapipe.GlScalerCalculator.GlScalerCalculatorOptions parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static mediapipe.GlScalerCalculator.GlScalerCalculatorOptions parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static mediapipe.GlScalerCalculator.GlScalerCalculatorOptions parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static mediapipe.GlScalerCalculator.GlScalerCalculatorOptions parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(mediapipe.GlScalerCalculator.GlScalerCalculatorOptions prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code mediapipe.GlScalerCalculatorOptions}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:mediapipe.GlScalerCalculatorOptions)
        mediapipe.GlScalerCalculator.GlScalerCalculatorOptionsOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return mediapipe.GlScalerCalculator.internal_static_mediapipe_GlScalerCalculatorOptions_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return mediapipe.GlScalerCalculator.internal_static_mediapipe_GlScalerCalculatorOptions_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                mediapipe.GlScalerCalculator.GlScalerCalculatorOptions.class, mediapipe.GlScalerCalculator.GlScalerCalculatorOptions.Builder.class);
      }

      // Construct using mediapipe.GlScalerCalculator.GlScalerCalculatorOptions.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        outputWidth_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        outputHeight_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        rotation_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        flipVertical_ = false;
        bitField0_ = (bitField0_ & ~0x00000008);
        flipHorizontal_ = false;
        bitField0_ = (bitField0_ & ~0x00000010);
        scaleMode_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return mediapipe.GlScalerCalculator.internal_static_mediapipe_GlScalerCalculatorOptions_descriptor;
      }

      public mediapipe.GlScalerCalculator.GlScalerCalculatorOptions getDefaultInstanceForType() {
        return mediapipe.GlScalerCalculator.GlScalerCalculatorOptions.getDefaultInstance();
      }

      public mediapipe.GlScalerCalculator.GlScalerCalculatorOptions build() {
        mediapipe.GlScalerCalculator.GlScalerCalculatorOptions result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public mediapipe.GlScalerCalculator.GlScalerCalculatorOptions buildPartial() {
        mediapipe.GlScalerCalculator.GlScalerCalculatorOptions result = new mediapipe.GlScalerCalculator.GlScalerCalculatorOptions(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.outputWidth_ = outputWidth_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.outputHeight_ = outputHeight_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.rotation_ = rotation_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.flipVertical_ = flipVertical_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.flipHorizontal_ = flipHorizontal_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.scaleMode_ = scaleMode_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof mediapipe.GlScalerCalculator.GlScalerCalculatorOptions) {
          return mergeFrom((mediapipe.GlScalerCalculator.GlScalerCalculatorOptions)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(mediapipe.GlScalerCalculator.GlScalerCalculatorOptions other) {
        if (other == mediapipe.GlScalerCalculator.GlScalerCalculatorOptions.getDefaultInstance()) return this;
        if (other.hasOutputWidth()) {
          setOutputWidth(other.getOutputWidth());
        }
        if (other.hasOutputHeight()) {
          setOutputHeight(other.getOutputHeight());
        }
        if (other.hasRotation()) {
          setRotation(other.getRotation());
        }
        if (other.hasFlipVertical()) {
          setFlipVertical(other.getFlipVertical());
        }
        if (other.hasFlipHorizontal()) {
          setFlipHorizontal(other.getFlipHorizontal());
        }
        if (other.hasScaleMode()) {
          setScaleMode(other.getScaleMode());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        mediapipe.GlScalerCalculator.GlScalerCalculatorOptions parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (mediapipe.GlScalerCalculator.GlScalerCalculatorOptions) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int outputWidth_ ;
      /**
       * <pre>
       * Output dimensions.
       * </pre>
       *
       * <code>optional int32 output_width = 1;</code>
       */
      public boolean hasOutputWidth() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <pre>
       * Output dimensions.
       * </pre>
       *
       * <code>optional int32 output_width = 1;</code>
       */
      public int getOutputWidth() {
        return outputWidth_;
      }
      /**
       * <pre>
       * Output dimensions.
       * </pre>
       *
       * <code>optional int32 output_width = 1;</code>
       */
      public Builder setOutputWidth(int value) {
        bitField0_ |= 0x00000001;
        outputWidth_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Output dimensions.
       * </pre>
       *
       * <code>optional int32 output_width = 1;</code>
       */
      public Builder clearOutputWidth() {
        bitField0_ = (bitField0_ & ~0x00000001);
        outputWidth_ = 0;
        onChanged();
        return this;
      }

      private int outputHeight_ ;
      /**
       * <code>optional int32 output_height = 2;</code>
       */
      public boolean hasOutputHeight() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 output_height = 2;</code>
       */
      public int getOutputHeight() {
        return outputHeight_;
      }
      /**
       * <code>optional int32 output_height = 2;</code>
       */
      public Builder setOutputHeight(int value) {
        bitField0_ |= 0x00000002;
        outputHeight_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 output_height = 2;</code>
       */
      public Builder clearOutputHeight() {
        bitField0_ = (bitField0_ & ~0x00000002);
        outputHeight_ = 0;
        onChanged();
        return this;
      }

      private int rotation_ ;
      /**
       * <pre>
       * Counterclockwise rotation in degrees. Must be a multiple of 90.
       * </pre>
       *
       * <code>optional int32 rotation = 3;</code>
       */
      public boolean hasRotation() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <pre>
       * Counterclockwise rotation in degrees. Must be a multiple of 90.
       * </pre>
       *
       * <code>optional int32 rotation = 3;</code>
       */
      public int getRotation() {
        return rotation_;
      }
      /**
       * <pre>
       * Counterclockwise rotation in degrees. Must be a multiple of 90.
       * </pre>
       *
       * <code>optional int32 rotation = 3;</code>
       */
      public Builder setRotation(int value) {
        bitField0_ |= 0x00000004;
        rotation_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Counterclockwise rotation in degrees. Must be a multiple of 90.
       * </pre>
       *
       * <code>optional int32 rotation = 3;</code>
       */
      public Builder clearRotation() {
        bitField0_ = (bitField0_ & ~0x00000004);
        rotation_ = 0;
        onChanged();
        return this;
      }

      private boolean flipVertical_ ;
      /**
       * <pre>
       * Flip the output texture vertically. This is applied after rotation.
       * </pre>
       *
       * <code>optional bool flip_vertical = 4;</code>
       */
      public boolean hasFlipVertical() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <pre>
       * Flip the output texture vertically. This is applied after rotation.
       * </pre>
       *
       * <code>optional bool flip_vertical = 4;</code>
       */
      public boolean getFlipVertical() {
        return flipVertical_;
      }
      /**
       * <pre>
       * Flip the output texture vertically. This is applied after rotation.
       * </pre>
       *
       * <code>optional bool flip_vertical = 4;</code>
       */
      public Builder setFlipVertical(boolean value) {
        bitField0_ |= 0x00000008;
        flipVertical_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Flip the output texture vertically. This is applied after rotation.
       * </pre>
       *
       * <code>optional bool flip_vertical = 4;</code>
       */
      public Builder clearFlipVertical() {
        bitField0_ = (bitField0_ & ~0x00000008);
        flipVertical_ = false;
        onChanged();
        return this;
      }

      private boolean flipHorizontal_ ;
      /**
       * <pre>
       * Flip the output texture horizontally. This is applied after rotation.
       * </pre>
       *
       * <code>optional bool flip_horizontal = 5;</code>
       */
      public boolean hasFlipHorizontal() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <pre>
       * Flip the output texture horizontally. This is applied after rotation.
       * </pre>
       *
       * <code>optional bool flip_horizontal = 5;</code>
       */
      public boolean getFlipHorizontal() {
        return flipHorizontal_;
      }
      /**
       * <pre>
       * Flip the output texture horizontally. This is applied after rotation.
       * </pre>
       *
       * <code>optional bool flip_horizontal = 5;</code>
       */
      public Builder setFlipHorizontal(boolean value) {
        bitField0_ |= 0x00000010;
        flipHorizontal_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Flip the output texture horizontally. This is applied after rotation.
       * </pre>
       *
       * <code>optional bool flip_horizontal = 5;</code>
       */
      public Builder clearFlipHorizontal() {
        bitField0_ = (bitField0_ & ~0x00000010);
        flipHorizontal_ = false;
        onChanged();
        return this;
      }

      private int scaleMode_ = 0;
      /**
       * <code>optional .mediapipe.ScaleMode.Mode scale_mode = 6;</code>
       */
      public boolean hasScaleMode() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional .mediapipe.ScaleMode.Mode scale_mode = 6;</code>
       */
      public mediapipe.ScaleModeOuterClass.ScaleMode.Mode getScaleMode() {
        mediapipe.ScaleModeOuterClass.ScaleMode.Mode result = mediapipe.ScaleModeOuterClass.ScaleMode.Mode.valueOf(scaleMode_);
        return result == null ? mediapipe.ScaleModeOuterClass.ScaleMode.Mode.DEFAULT : result;
      }
      /**
       * <code>optional .mediapipe.ScaleMode.Mode scale_mode = 6;</code>
       */
      public Builder setScaleMode(mediapipe.ScaleModeOuterClass.ScaleMode.Mode value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000020;
        scaleMode_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>optional .mediapipe.ScaleMode.Mode scale_mode = 6;</code>
       */
      public Builder clearScaleMode() {
        bitField0_ = (bitField0_ & ~0x00000020);
        scaleMode_ = 0;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:mediapipe.GlScalerCalculatorOptions)
    }

    // @@protoc_insertion_point(class_scope:mediapipe.GlScalerCalculatorOptions)
    private static final mediapipe.GlScalerCalculator.GlScalerCalculatorOptions DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new mediapipe.GlScalerCalculator.GlScalerCalculatorOptions();
    }

    public static mediapipe.GlScalerCalculator.GlScalerCalculatorOptions getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<GlScalerCalculatorOptions>
        PARSER = new com.google.protobuf.AbstractParser<GlScalerCalculatorOptions>() {
      public GlScalerCalculatorOptions parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new GlScalerCalculatorOptions(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<GlScalerCalculatorOptions> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<GlScalerCalculatorOptions> getParserForType() {
      return PARSER;
    }

    public mediapipe.GlScalerCalculator.GlScalerCalculatorOptions getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

    public static final int EXT_FIELD_NUMBER = 166373014;
    /**
     * <code>extend .mediapipe.CalculatorOptions { ... }</code>
     */
    public static final
      com.google.protobuf.GeneratedMessage.GeneratedExtension<
        com.google.mediapipe.proto.CalculatorOptionsProto.CalculatorOptions,
        mediapipe.GlScalerCalculator.GlScalerCalculatorOptions> ext = com.google.protobuf.GeneratedMessage
            .newMessageScopedGeneratedExtension(
          mediapipe.GlScalerCalculator.GlScalerCalculatorOptions.getDefaultInstance(),
          0,
          mediapipe.GlScalerCalculator.GlScalerCalculatorOptions.class,
          mediapipe.GlScalerCalculator.GlScalerCalculatorOptions.getDefaultInstance());
  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_mediapipe_GlScalerCalculatorOptions_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_mediapipe_GlScalerCalculatorOptions_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n(mediapipe/gpu/gl_scaler_calculator.pro" +
      "to\022\tmediapipe\032$mediapipe/framework/calcu" +
      "lator.proto\032\036mediapipe/gpu/scale_mode.pr" +
      "oto\"\215\002\n\031GlScalerCalculatorOptions\022\024\n\014out" +
      "put_width\030\001 \001(\005\022\025\n\routput_height\030\002 \001(\005\022\020" +
      "\n\010rotation\030\003 \001(\005\022\025\n\rflip_vertical\030\004 \001(\010\022" +
      "\027\n\017flip_horizontal\030\005 \001(\010\022-\n\nscale_mode\030\006" +
      " \001(\0162\031.mediapipe.ScaleMode.Mode2R\n\003ext\022\034" +
      ".mediapipe.CalculatorOptions\030\226\315\252O \001(\0132$." +
      "mediapipe.GlScalerCalculatorOptions"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.google.mediapipe.proto.CalculatorProto.getDescriptor(),
          mediapipe.ScaleModeOuterClass.getDescriptor(),
        }, assigner);
    internal_static_mediapipe_GlScalerCalculatorOptions_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_mediapipe_GlScalerCalculatorOptions_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_mediapipe_GlScalerCalculatorOptions_descriptor,
        new java.lang.String[] { "OutputWidth", "OutputHeight", "Rotation", "FlipVertical", "FlipHorizontal", "ScaleMode", });
    com.google.mediapipe.proto.CalculatorProto.getDescriptor();
    mediapipe.ScaleModeOuterClass.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
