// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: mediapipe/framework/status_handler.proto

package mediapipe;

public final class StatusHandler {
  private StatusHandler() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface StatusHandlerConfigOrBuilder extends
      // @@protoc_insertion_point(interface_extends:mediapipe.StatusHandlerConfig)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * The name of the registered status handler class.
     * </pre>
     *
     * <code>optional string status_handler = 1;</code>
     */
    boolean hasStatusHandler();
    /**
     * <pre>
     * The name of the registered status handler class.
     * </pre>
     *
     * <code>optional string status_handler = 1;</code>
     */
    java.lang.String getStatusHandler();
    /**
     * <pre>
     * The name of the registered status handler class.
     * </pre>
     *
     * <code>optional string status_handler = 1;</code>
     */
    com.google.protobuf.ByteString
        getStatusHandlerBytes();

    /**
     * <pre>
     * The name of the input side packets.  The StatusHandler can access its
     * input side packets by index or by tag.  A StatusHandler will only
     * be called if all of its requested input side packets are available
     * (and won't be called if a PacketFactory or PacketGenerator which
     * produces one fails).
     * </pre>
     *
     * <code>repeated string input_side_packet = 2;</code>
     */
    java.util.List<java.lang.String>
        getInputSidePacketList();
    /**
     * <pre>
     * The name of the input side packets.  The StatusHandler can access its
     * input side packets by index or by tag.  A StatusHandler will only
     * be called if all of its requested input side packets are available
     * (and won't be called if a PacketFactory or PacketGenerator which
     * produces one fails).
     * </pre>
     *
     * <code>repeated string input_side_packet = 2;</code>
     */
    int getInputSidePacketCount();
    /**
     * <pre>
     * The name of the input side packets.  The StatusHandler can access its
     * input side packets by index or by tag.  A StatusHandler will only
     * be called if all of its requested input side packets are available
     * (and won't be called if a PacketFactory or PacketGenerator which
     * produces one fails).
     * </pre>
     *
     * <code>repeated string input_side_packet = 2;</code>
     */
    java.lang.String getInputSidePacket(int index);
    /**
     * <pre>
     * The name of the input side packets.  The StatusHandler can access its
     * input side packets by index or by tag.  A StatusHandler will only
     * be called if all of its requested input side packets are available
     * (and won't be called if a PacketFactory or PacketGenerator which
     * produces one fails).
     * </pre>
     *
     * <code>repeated string input_side_packet = 2;</code>
     */
    com.google.protobuf.ByteString
        getInputSidePacketBytes(int index);

    /**
     * <pre>
     * DEPRECATED(mgeorg) The old name for input_side_packet.
     * </pre>
     *
     * <code>repeated string external_input = 1002;</code>
     */
    java.util.List<java.lang.String>
        getExternalInputList();
    /**
     * <pre>
     * DEPRECATED(mgeorg) The old name for input_side_packet.
     * </pre>
     *
     * <code>repeated string external_input = 1002;</code>
     */
    int getExternalInputCount();
    /**
     * <pre>
     * DEPRECATED(mgeorg) The old name for input_side_packet.
     * </pre>
     *
     * <code>repeated string external_input = 1002;</code>
     */
    java.lang.String getExternalInput(int index);
    /**
     * <pre>
     * DEPRECATED(mgeorg) The old name for input_side_packet.
     * </pre>
     *
     * <code>repeated string external_input = 1002;</code>
     */
    com.google.protobuf.ByteString
        getExternalInputBytes(int index);

    /**
     * <pre>
     * The options for the status handler.
     * </pre>
     *
     * <code>optional .mediapipe.MediaPipeOptions options = 3;</code>
     */
    boolean hasOptions();
    /**
     * <pre>
     * The options for the status handler.
     * </pre>
     *
     * <code>optional .mediapipe.MediaPipeOptions options = 3;</code>
     */
    mediapipe.MediapipeOptions.MediaPipeOptions getOptions();
    /**
     * <pre>
     * The options for the status handler.
     * </pre>
     *
     * <code>optional .mediapipe.MediaPipeOptions options = 3;</code>
     */
    mediapipe.MediapipeOptions.MediaPipeOptionsOrBuilder getOptionsOrBuilder();
  }
  /**
   * <pre>
   * The settings specifying a status handler and its required external inputs.
   * </pre>
   *
   * Protobuf type {@code mediapipe.StatusHandlerConfig}
   */
  public  static final class StatusHandlerConfig extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:mediapipe.StatusHandlerConfig)
      StatusHandlerConfigOrBuilder {
    // Use StatusHandlerConfig.newBuilder() to construct.
    private StatusHandlerConfig(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private StatusHandlerConfig() {
      statusHandler_ = "";
      inputSidePacket_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      externalInput_ = com.google.protobuf.LazyStringArrayList.EMPTY;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private StatusHandlerConfig(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000001;
              statusHandler_ = bs;
              break;
            }
            case 18: {
              com.google.protobuf.ByteString bs = input.readBytes();
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                inputSidePacket_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00000002;
              }
              inputSidePacket_.add(bs);
              break;
            }
            case 26: {
              mediapipe.MediapipeOptions.MediaPipeOptions.Builder subBuilder = null;
              if (((bitField0_ & 0x00000002) == 0x00000002)) {
                subBuilder = options_.toBuilder();
              }
              options_ = input.readMessage(mediapipe.MediapipeOptions.MediaPipeOptions.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(options_);
                options_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000002;
              break;
            }
            case 8018: {
              com.google.protobuf.ByteString bs = input.readBytes();
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                externalInput_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00000004;
              }
              externalInput_.add(bs);
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          inputSidePacket_ = inputSidePacket_.getUnmodifiableView();
        }
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          externalInput_ = externalInput_.getUnmodifiableView();
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return mediapipe.StatusHandler.internal_static_mediapipe_StatusHandlerConfig_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return mediapipe.StatusHandler.internal_static_mediapipe_StatusHandlerConfig_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              mediapipe.StatusHandler.StatusHandlerConfig.class, mediapipe.StatusHandler.StatusHandlerConfig.Builder.class);
    }

    private int bitField0_;
    public static final int STATUS_HANDLER_FIELD_NUMBER = 1;
    private volatile java.lang.Object statusHandler_;
    /**
     * <pre>
     * The name of the registered status handler class.
     * </pre>
     *
     * <code>optional string status_handler = 1;</code>
     */
    public boolean hasStatusHandler() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <pre>
     * The name of the registered status handler class.
     * </pre>
     *
     * <code>optional string status_handler = 1;</code>
     */
    public java.lang.String getStatusHandler() {
      java.lang.Object ref = statusHandler_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          statusHandler_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     * The name of the registered status handler class.
     * </pre>
     *
     * <code>optional string status_handler = 1;</code>
     */
    public com.google.protobuf.ByteString
        getStatusHandlerBytes() {
      java.lang.Object ref = statusHandler_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        statusHandler_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int INPUT_SIDE_PACKET_FIELD_NUMBER = 2;
    private com.google.protobuf.LazyStringList inputSidePacket_;
    /**
     * <pre>
     * The name of the input side packets.  The StatusHandler can access its
     * input side packets by index or by tag.  A StatusHandler will only
     * be called if all of its requested input side packets are available
     * (and won't be called if a PacketFactory or PacketGenerator which
     * produces one fails).
     * </pre>
     *
     * <code>repeated string input_side_packet = 2;</code>
     */
    public com.google.protobuf.ProtocolStringList
        getInputSidePacketList() {
      return inputSidePacket_;
    }
    /**
     * <pre>
     * The name of the input side packets.  The StatusHandler can access its
     * input side packets by index or by tag.  A StatusHandler will only
     * be called if all of its requested input side packets are available
     * (and won't be called if a PacketFactory or PacketGenerator which
     * produces one fails).
     * </pre>
     *
     * <code>repeated string input_side_packet = 2;</code>
     */
    public int getInputSidePacketCount() {
      return inputSidePacket_.size();
    }
    /**
     * <pre>
     * The name of the input side packets.  The StatusHandler can access its
     * input side packets by index or by tag.  A StatusHandler will only
     * be called if all of its requested input side packets are available
     * (and won't be called if a PacketFactory or PacketGenerator which
     * produces one fails).
     * </pre>
     *
     * <code>repeated string input_side_packet = 2;</code>
     */
    public java.lang.String getInputSidePacket(int index) {
      return inputSidePacket_.get(index);
    }
    /**
     * <pre>
     * The name of the input side packets.  The StatusHandler can access its
     * input side packets by index or by tag.  A StatusHandler will only
     * be called if all of its requested input side packets are available
     * (and won't be called if a PacketFactory or PacketGenerator which
     * produces one fails).
     * </pre>
     *
     * <code>repeated string input_side_packet = 2;</code>
     */
    public com.google.protobuf.ByteString
        getInputSidePacketBytes(int index) {
      return inputSidePacket_.getByteString(index);
    }

    public static final int EXTERNAL_INPUT_FIELD_NUMBER = 1002;
    private com.google.protobuf.LazyStringList externalInput_;
    /**
     * <pre>
     * DEPRECATED(mgeorg) The old name for input_side_packet.
     * </pre>
     *
     * <code>repeated string external_input = 1002;</code>
     */
    public com.google.protobuf.ProtocolStringList
        getExternalInputList() {
      return externalInput_;
    }
    /**
     * <pre>
     * DEPRECATED(mgeorg) The old name for input_side_packet.
     * </pre>
     *
     * <code>repeated string external_input = 1002;</code>
     */
    public int getExternalInputCount() {
      return externalInput_.size();
    }
    /**
     * <pre>
     * DEPRECATED(mgeorg) The old name for input_side_packet.
     * </pre>
     *
     * <code>repeated string external_input = 1002;</code>
     */
    public java.lang.String getExternalInput(int index) {
      return externalInput_.get(index);
    }
    /**
     * <pre>
     * DEPRECATED(mgeorg) The old name for input_side_packet.
     * </pre>
     *
     * <code>repeated string external_input = 1002;</code>
     */
    public com.google.protobuf.ByteString
        getExternalInputBytes(int index) {
      return externalInput_.getByteString(index);
    }

    public static final int OPTIONS_FIELD_NUMBER = 3;
    private mediapipe.MediapipeOptions.MediaPipeOptions options_;
    /**
     * <pre>
     * The options for the status handler.
     * </pre>
     *
     * <code>optional .mediapipe.MediaPipeOptions options = 3;</code>
     */
    public boolean hasOptions() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <pre>
     * The options for the status handler.
     * </pre>
     *
     * <code>optional .mediapipe.MediaPipeOptions options = 3;</code>
     */
    public mediapipe.MediapipeOptions.MediaPipeOptions getOptions() {
      return options_ == null ? mediapipe.MediapipeOptions.MediaPipeOptions.getDefaultInstance() : options_;
    }
    /**
     * <pre>
     * The options for the status handler.
     * </pre>
     *
     * <code>optional .mediapipe.MediaPipeOptions options = 3;</code>
     */
    public mediapipe.MediapipeOptions.MediaPipeOptionsOrBuilder getOptionsOrBuilder() {
      return options_ == null ? mediapipe.MediapipeOptions.MediaPipeOptions.getDefaultInstance() : options_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (hasOptions()) {
        if (!getOptions().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, statusHandler_);
      }
      for (int i = 0; i < inputSidePacket_.size(); i++) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, inputSidePacket_.getRaw(i));
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(3, getOptions());
      }
      for (int i = 0; i < externalInput_.size(); i++) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1002, externalInput_.getRaw(i));
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, statusHandler_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < inputSidePacket_.size(); i++) {
          dataSize += computeStringSizeNoTag(inputSidePacket_.getRaw(i));
        }
        size += dataSize;
        size += 1 * getInputSidePacketList().size();
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getOptions());
      }
      {
        int dataSize = 0;
        for (int i = 0; i < externalInput_.size(); i++) {
          dataSize += computeStringSizeNoTag(externalInput_.getRaw(i));
        }
        size += dataSize;
        size += 2 * getExternalInputList().size();
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof mediapipe.StatusHandler.StatusHandlerConfig)) {
        return super.equals(obj);
      }
      mediapipe.StatusHandler.StatusHandlerConfig other = (mediapipe.StatusHandler.StatusHandlerConfig) obj;

      boolean result = true;
      result = result && (hasStatusHandler() == other.hasStatusHandler());
      if (hasStatusHandler()) {
        result = result && getStatusHandler()
            .equals(other.getStatusHandler());
      }
      result = result && getInputSidePacketList()
          .equals(other.getInputSidePacketList());
      result = result && getExternalInputList()
          .equals(other.getExternalInputList());
      result = result && (hasOptions() == other.hasOptions());
      if (hasOptions()) {
        result = result && getOptions()
            .equals(other.getOptions());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      if (hasStatusHandler()) {
        hash = (37 * hash) + STATUS_HANDLER_FIELD_NUMBER;
        hash = (53 * hash) + getStatusHandler().hashCode();
      }
      if (getInputSidePacketCount() > 0) {
        hash = (37 * hash) + INPUT_SIDE_PACKET_FIELD_NUMBER;
        hash = (53 * hash) + getInputSidePacketList().hashCode();
      }
      if (getExternalInputCount() > 0) {
        hash = (37 * hash) + EXTERNAL_INPUT_FIELD_NUMBER;
        hash = (53 * hash) + getExternalInputList().hashCode();
      }
      if (hasOptions()) {
        hash = (37 * hash) + OPTIONS_FIELD_NUMBER;
        hash = (53 * hash) + getOptions().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static mediapipe.StatusHandler.StatusHandlerConfig parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static mediapipe.StatusHandler.StatusHandlerConfig parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static mediapipe.StatusHandler.StatusHandlerConfig parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static mediapipe.StatusHandler.StatusHandlerConfig parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static mediapipe.StatusHandler.StatusHandlerConfig parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static mediapipe.StatusHandler.StatusHandlerConfig parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static mediapipe.StatusHandler.StatusHandlerConfig parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static mediapipe.StatusHandler.StatusHandlerConfig parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static mediapipe.StatusHandler.StatusHandlerConfig parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static mediapipe.StatusHandler.StatusHandlerConfig parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(mediapipe.StatusHandler.StatusHandlerConfig prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * The settings specifying a status handler and its required external inputs.
     * </pre>
     *
     * Protobuf type {@code mediapipe.StatusHandlerConfig}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:mediapipe.StatusHandlerConfig)
        mediapipe.StatusHandler.StatusHandlerConfigOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return mediapipe.StatusHandler.internal_static_mediapipe_StatusHandlerConfig_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return mediapipe.StatusHandler.internal_static_mediapipe_StatusHandlerConfig_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                mediapipe.StatusHandler.StatusHandlerConfig.class, mediapipe.StatusHandler.StatusHandlerConfig.Builder.class);
      }

      // Construct using mediapipe.StatusHandler.StatusHandlerConfig.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getOptionsFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        statusHandler_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        inputSidePacket_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000002);
        externalInput_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000004);
        if (optionsBuilder_ == null) {
          options_ = null;
        } else {
          optionsBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return mediapipe.StatusHandler.internal_static_mediapipe_StatusHandlerConfig_descriptor;
      }

      public mediapipe.StatusHandler.StatusHandlerConfig getDefaultInstanceForType() {
        return mediapipe.StatusHandler.StatusHandlerConfig.getDefaultInstance();
      }

      public mediapipe.StatusHandler.StatusHandlerConfig build() {
        mediapipe.StatusHandler.StatusHandlerConfig result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public mediapipe.StatusHandler.StatusHandlerConfig buildPartial() {
        mediapipe.StatusHandler.StatusHandlerConfig result = new mediapipe.StatusHandler.StatusHandlerConfig(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.statusHandler_ = statusHandler_;
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          inputSidePacket_ = inputSidePacket_.getUnmodifiableView();
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.inputSidePacket_ = inputSidePacket_;
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          externalInput_ = externalInput_.getUnmodifiableView();
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.externalInput_ = externalInput_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000002;
        }
        if (optionsBuilder_ == null) {
          result.options_ = options_;
        } else {
          result.options_ = optionsBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof mediapipe.StatusHandler.StatusHandlerConfig) {
          return mergeFrom((mediapipe.StatusHandler.StatusHandlerConfig)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(mediapipe.StatusHandler.StatusHandlerConfig other) {
        if (other == mediapipe.StatusHandler.StatusHandlerConfig.getDefaultInstance()) return this;
        if (other.hasStatusHandler()) {
          bitField0_ |= 0x00000001;
          statusHandler_ = other.statusHandler_;
          onChanged();
        }
        if (!other.inputSidePacket_.isEmpty()) {
          if (inputSidePacket_.isEmpty()) {
            inputSidePacket_ = other.inputSidePacket_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureInputSidePacketIsMutable();
            inputSidePacket_.addAll(other.inputSidePacket_);
          }
          onChanged();
        }
        if (!other.externalInput_.isEmpty()) {
          if (externalInput_.isEmpty()) {
            externalInput_ = other.externalInput_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureExternalInputIsMutable();
            externalInput_.addAll(other.externalInput_);
          }
          onChanged();
        }
        if (other.hasOptions()) {
          mergeOptions(other.getOptions());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        if (hasOptions()) {
          if (!getOptions().isInitialized()) {
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        mediapipe.StatusHandler.StatusHandlerConfig parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (mediapipe.StatusHandler.StatusHandlerConfig) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object statusHandler_ = "";
      /**
       * <pre>
       * The name of the registered status handler class.
       * </pre>
       *
       * <code>optional string status_handler = 1;</code>
       */
      public boolean hasStatusHandler() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <pre>
       * The name of the registered status handler class.
       * </pre>
       *
       * <code>optional string status_handler = 1;</code>
       */
      public java.lang.String getStatusHandler() {
        java.lang.Object ref = statusHandler_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            statusHandler_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The name of the registered status handler class.
       * </pre>
       *
       * <code>optional string status_handler = 1;</code>
       */
      public com.google.protobuf.ByteString
          getStatusHandlerBytes() {
        java.lang.Object ref = statusHandler_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          statusHandler_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The name of the registered status handler class.
       * </pre>
       *
       * <code>optional string status_handler = 1;</code>
       */
      public Builder setStatusHandler(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        statusHandler_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The name of the registered status handler class.
       * </pre>
       *
       * <code>optional string status_handler = 1;</code>
       */
      public Builder clearStatusHandler() {
        bitField0_ = (bitField0_ & ~0x00000001);
        statusHandler_ = getDefaultInstance().getStatusHandler();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The name of the registered status handler class.
       * </pre>
       *
       * <code>optional string status_handler = 1;</code>
       */
      public Builder setStatusHandlerBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        statusHandler_ = value;
        onChanged();
        return this;
      }

      private com.google.protobuf.LazyStringList inputSidePacket_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureInputSidePacketIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          inputSidePacket_ = new com.google.protobuf.LazyStringArrayList(inputSidePacket_);
          bitField0_ |= 0x00000002;
         }
      }
      /**
       * <pre>
       * The name of the input side packets.  The StatusHandler can access its
       * input side packets by index or by tag.  A StatusHandler will only
       * be called if all of its requested input side packets are available
       * (and won't be called if a PacketFactory or PacketGenerator which
       * produces one fails).
       * </pre>
       *
       * <code>repeated string input_side_packet = 2;</code>
       */
      public com.google.protobuf.ProtocolStringList
          getInputSidePacketList() {
        return inputSidePacket_.getUnmodifiableView();
      }
      /**
       * <pre>
       * The name of the input side packets.  The StatusHandler can access its
       * input side packets by index or by tag.  A StatusHandler will only
       * be called if all of its requested input side packets are available
       * (and won't be called if a PacketFactory or PacketGenerator which
       * produces one fails).
       * </pre>
       *
       * <code>repeated string input_side_packet = 2;</code>
       */
      public int getInputSidePacketCount() {
        return inputSidePacket_.size();
      }
      /**
       * <pre>
       * The name of the input side packets.  The StatusHandler can access its
       * input side packets by index or by tag.  A StatusHandler will only
       * be called if all of its requested input side packets are available
       * (and won't be called if a PacketFactory or PacketGenerator which
       * produces one fails).
       * </pre>
       *
       * <code>repeated string input_side_packet = 2;</code>
       */
      public java.lang.String getInputSidePacket(int index) {
        return inputSidePacket_.get(index);
      }
      /**
       * <pre>
       * The name of the input side packets.  The StatusHandler can access its
       * input side packets by index or by tag.  A StatusHandler will only
       * be called if all of its requested input side packets are available
       * (and won't be called if a PacketFactory or PacketGenerator which
       * produces one fails).
       * </pre>
       *
       * <code>repeated string input_side_packet = 2;</code>
       */
      public com.google.protobuf.ByteString
          getInputSidePacketBytes(int index) {
        return inputSidePacket_.getByteString(index);
      }
      /**
       * <pre>
       * The name of the input side packets.  The StatusHandler can access its
       * input side packets by index or by tag.  A StatusHandler will only
       * be called if all of its requested input side packets are available
       * (and won't be called if a PacketFactory or PacketGenerator which
       * produces one fails).
       * </pre>
       *
       * <code>repeated string input_side_packet = 2;</code>
       */
      public Builder setInputSidePacket(
          int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureInputSidePacketIsMutable();
        inputSidePacket_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The name of the input side packets.  The StatusHandler can access its
       * input side packets by index or by tag.  A StatusHandler will only
       * be called if all of its requested input side packets are available
       * (and won't be called if a PacketFactory or PacketGenerator which
       * produces one fails).
       * </pre>
       *
       * <code>repeated string input_side_packet = 2;</code>
       */
      public Builder addInputSidePacket(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureInputSidePacketIsMutable();
        inputSidePacket_.add(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The name of the input side packets.  The StatusHandler can access its
       * input side packets by index or by tag.  A StatusHandler will only
       * be called if all of its requested input side packets are available
       * (and won't be called if a PacketFactory or PacketGenerator which
       * produces one fails).
       * </pre>
       *
       * <code>repeated string input_side_packet = 2;</code>
       */
      public Builder addAllInputSidePacket(
          java.lang.Iterable<java.lang.String> values) {
        ensureInputSidePacketIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, inputSidePacket_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The name of the input side packets.  The StatusHandler can access its
       * input side packets by index or by tag.  A StatusHandler will only
       * be called if all of its requested input side packets are available
       * (and won't be called if a PacketFactory or PacketGenerator which
       * produces one fails).
       * </pre>
       *
       * <code>repeated string input_side_packet = 2;</code>
       */
      public Builder clearInputSidePacket() {
        inputSidePacket_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The name of the input side packets.  The StatusHandler can access its
       * input side packets by index or by tag.  A StatusHandler will only
       * be called if all of its requested input side packets are available
       * (and won't be called if a PacketFactory or PacketGenerator which
       * produces one fails).
       * </pre>
       *
       * <code>repeated string input_side_packet = 2;</code>
       */
      public Builder addInputSidePacketBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureInputSidePacketIsMutable();
        inputSidePacket_.add(value);
        onChanged();
        return this;
      }

      private com.google.protobuf.LazyStringList externalInput_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureExternalInputIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          externalInput_ = new com.google.protobuf.LazyStringArrayList(externalInput_);
          bitField0_ |= 0x00000004;
         }
      }
      /**
       * <pre>
       * DEPRECATED(mgeorg) The old name for input_side_packet.
       * </pre>
       *
       * <code>repeated string external_input = 1002;</code>
       */
      public com.google.protobuf.ProtocolStringList
          getExternalInputList() {
        return externalInput_.getUnmodifiableView();
      }
      /**
       * <pre>
       * DEPRECATED(mgeorg) The old name for input_side_packet.
       * </pre>
       *
       * <code>repeated string external_input = 1002;</code>
       */
      public int getExternalInputCount() {
        return externalInput_.size();
      }
      /**
       * <pre>
       * DEPRECATED(mgeorg) The old name for input_side_packet.
       * </pre>
       *
       * <code>repeated string external_input = 1002;</code>
       */
      public java.lang.String getExternalInput(int index) {
        return externalInput_.get(index);
      }
      /**
       * <pre>
       * DEPRECATED(mgeorg) The old name for input_side_packet.
       * </pre>
       *
       * <code>repeated string external_input = 1002;</code>
       */
      public com.google.protobuf.ByteString
          getExternalInputBytes(int index) {
        return externalInput_.getByteString(index);
      }
      /**
       * <pre>
       * DEPRECATED(mgeorg) The old name for input_side_packet.
       * </pre>
       *
       * <code>repeated string external_input = 1002;</code>
       */
      public Builder setExternalInput(
          int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureExternalInputIsMutable();
        externalInput_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * DEPRECATED(mgeorg) The old name for input_side_packet.
       * </pre>
       *
       * <code>repeated string external_input = 1002;</code>
       */
      public Builder addExternalInput(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureExternalInputIsMutable();
        externalInput_.add(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * DEPRECATED(mgeorg) The old name for input_side_packet.
       * </pre>
       *
       * <code>repeated string external_input = 1002;</code>
       */
      public Builder addAllExternalInput(
          java.lang.Iterable<java.lang.String> values) {
        ensureExternalInputIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, externalInput_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * DEPRECATED(mgeorg) The old name for input_side_packet.
       * </pre>
       *
       * <code>repeated string external_input = 1002;</code>
       */
      public Builder clearExternalInput() {
        externalInput_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * DEPRECATED(mgeorg) The old name for input_side_packet.
       * </pre>
       *
       * <code>repeated string external_input = 1002;</code>
       */
      public Builder addExternalInputBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureExternalInputIsMutable();
        externalInput_.add(value);
        onChanged();
        return this;
      }

      private mediapipe.MediapipeOptions.MediaPipeOptions options_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          mediapipe.MediapipeOptions.MediaPipeOptions, mediapipe.MediapipeOptions.MediaPipeOptions.Builder, mediapipe.MediapipeOptions.MediaPipeOptionsOrBuilder> optionsBuilder_;
      /**
       * <pre>
       * The options for the status handler.
       * </pre>
       *
       * <code>optional .mediapipe.MediaPipeOptions options = 3;</code>
       */
      public boolean hasOptions() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <pre>
       * The options for the status handler.
       * </pre>
       *
       * <code>optional .mediapipe.MediaPipeOptions options = 3;</code>
       */
      public mediapipe.MediapipeOptions.MediaPipeOptions getOptions() {
        if (optionsBuilder_ == null) {
          return options_ == null ? mediapipe.MediapipeOptions.MediaPipeOptions.getDefaultInstance() : options_;
        } else {
          return optionsBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * The options for the status handler.
       * </pre>
       *
       * <code>optional .mediapipe.MediaPipeOptions options = 3;</code>
       */
      public Builder setOptions(mediapipe.MediapipeOptions.MediaPipeOptions value) {
        if (optionsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          options_ = value;
          onChanged();
        } else {
          optionsBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <pre>
       * The options for the status handler.
       * </pre>
       *
       * <code>optional .mediapipe.MediaPipeOptions options = 3;</code>
       */
      public Builder setOptions(
          mediapipe.MediapipeOptions.MediaPipeOptions.Builder builderForValue) {
        if (optionsBuilder_ == null) {
          options_ = builderForValue.build();
          onChanged();
        } else {
          optionsBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <pre>
       * The options for the status handler.
       * </pre>
       *
       * <code>optional .mediapipe.MediaPipeOptions options = 3;</code>
       */
      public Builder mergeOptions(mediapipe.MediapipeOptions.MediaPipeOptions value) {
        if (optionsBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008) &&
              options_ != null &&
              options_ != mediapipe.MediapipeOptions.MediaPipeOptions.getDefaultInstance()) {
            options_ =
              mediapipe.MediapipeOptions.MediaPipeOptions.newBuilder(options_).mergeFrom(value).buildPartial();
          } else {
            options_ = value;
          }
          onChanged();
        } else {
          optionsBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <pre>
       * The options for the status handler.
       * </pre>
       *
       * <code>optional .mediapipe.MediaPipeOptions options = 3;</code>
       */
      public Builder clearOptions() {
        if (optionsBuilder_ == null) {
          options_ = null;
          onChanged();
        } else {
          optionsBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }
      /**
       * <pre>
       * The options for the status handler.
       * </pre>
       *
       * <code>optional .mediapipe.MediaPipeOptions options = 3;</code>
       */
      public mediapipe.MediapipeOptions.MediaPipeOptions.Builder getOptionsBuilder() {
        bitField0_ |= 0x00000008;
        onChanged();
        return getOptionsFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * The options for the status handler.
       * </pre>
       *
       * <code>optional .mediapipe.MediaPipeOptions options = 3;</code>
       */
      public mediapipe.MediapipeOptions.MediaPipeOptionsOrBuilder getOptionsOrBuilder() {
        if (optionsBuilder_ != null) {
          return optionsBuilder_.getMessageOrBuilder();
        } else {
          return options_ == null ?
              mediapipe.MediapipeOptions.MediaPipeOptions.getDefaultInstance() : options_;
        }
      }
      /**
       * <pre>
       * The options for the status handler.
       * </pre>
       *
       * <code>optional .mediapipe.MediaPipeOptions options = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          mediapipe.MediapipeOptions.MediaPipeOptions, mediapipe.MediapipeOptions.MediaPipeOptions.Builder, mediapipe.MediapipeOptions.MediaPipeOptionsOrBuilder> 
          getOptionsFieldBuilder() {
        if (optionsBuilder_ == null) {
          optionsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              mediapipe.MediapipeOptions.MediaPipeOptions, mediapipe.MediapipeOptions.MediaPipeOptions.Builder, mediapipe.MediapipeOptions.MediaPipeOptionsOrBuilder>(
                  getOptions(),
                  getParentForChildren(),
                  isClean());
          options_ = null;
        }
        return optionsBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:mediapipe.StatusHandlerConfig)
    }

    // @@protoc_insertion_point(class_scope:mediapipe.StatusHandlerConfig)
    private static final mediapipe.StatusHandler.StatusHandlerConfig DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new mediapipe.StatusHandler.StatusHandlerConfig();
    }

    public static mediapipe.StatusHandler.StatusHandlerConfig getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<StatusHandlerConfig>
        PARSER = new com.google.protobuf.AbstractParser<StatusHandlerConfig>() {
      public StatusHandlerConfig parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new StatusHandlerConfig(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<StatusHandlerConfig> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<StatusHandlerConfig> getParserForType() {
      return PARSER;
    }

    public mediapipe.StatusHandler.StatusHandlerConfig getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_mediapipe_StatusHandlerConfig_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_mediapipe_StatusHandlerConfig_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n(mediapipe/framework/status_handler.pro" +
      "to\022\tmediapipe\032+mediapipe/framework/media" +
      "pipe_options.proto\"\217\001\n\023StatusHandlerConf" +
      "ig\022\026\n\016status_handler\030\001 \001(\t\022\031\n\021input_side" +
      "_packet\030\002 \003(\t\022\027\n\016external_input\030\352\007 \003(\t\022," +
      "\n\007options\030\003 \001(\0132\033.mediapipe.MediaPipeOpt" +
      "ions"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          mediapipe.MediapipeOptions.getDescriptor(),
        }, assigner);
    internal_static_mediapipe_StatusHandlerConfig_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_mediapipe_StatusHandlerConfig_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_mediapipe_StatusHandlerConfig_descriptor,
        new java.lang.String[] { "StatusHandler", "InputSidePacket", "ExternalInput", "Options", });
    mediapipe.MediapipeOptions.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
