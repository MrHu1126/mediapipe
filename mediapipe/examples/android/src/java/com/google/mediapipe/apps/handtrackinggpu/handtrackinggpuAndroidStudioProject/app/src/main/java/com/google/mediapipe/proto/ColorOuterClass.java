// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: mediapipe/util/color.proto

package mediapipe;

public final class ColorOuterClass {
  private ColorOuterClass() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface ColorOrBuilder extends
      // @@protoc_insertion_point(interface_extends:mediapipe.Color)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional int32 r = 1;</code>
     */
    boolean hasR();
    /**
     * <code>optional int32 r = 1;</code>
     */
    int getR();

    /**
     * <code>optional int32 g = 2;</code>
     */
    boolean hasG();
    /**
     * <code>optional int32 g = 2;</code>
     */
    int getG();

    /**
     * <code>optional int32 b = 3;</code>
     */
    boolean hasB();
    /**
     * <code>optional int32 b = 3;</code>
     */
    int getB();
  }
  /**
   * Protobuf type {@code mediapipe.Color}
   */
  public  static final class Color extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:mediapipe.Color)
      ColorOrBuilder {
    // Use Color.newBuilder() to construct.
    private Color(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Color() {
      r_ = 0;
      g_ = 0;
      b_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Color(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              r_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              g_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              b_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return mediapipe.ColorOuterClass.internal_static_mediapipe_Color_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return mediapipe.ColorOuterClass.internal_static_mediapipe_Color_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              mediapipe.ColorOuterClass.Color.class, mediapipe.ColorOuterClass.Color.Builder.class);
    }

    private int bitField0_;
    public static final int R_FIELD_NUMBER = 1;
    private int r_;
    /**
     * <code>optional int32 r = 1;</code>
     */
    public boolean hasR() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 r = 1;</code>
     */
    public int getR() {
      return r_;
    }

    public static final int G_FIELD_NUMBER = 2;
    private int g_;
    /**
     * <code>optional int32 g = 2;</code>
     */
    public boolean hasG() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 g = 2;</code>
     */
    public int getG() {
      return g_;
    }

    public static final int B_FIELD_NUMBER = 3;
    private int b_;
    /**
     * <code>optional int32 b = 3;</code>
     */
    public boolean hasB() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 b = 3;</code>
     */
    public int getB() {
      return b_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, r_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, g_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, b_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, r_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, g_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, b_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof mediapipe.ColorOuterClass.Color)) {
        return super.equals(obj);
      }
      mediapipe.ColorOuterClass.Color other = (mediapipe.ColorOuterClass.Color) obj;

      boolean result = true;
      result = result && (hasR() == other.hasR());
      if (hasR()) {
        result = result && (getR()
            == other.getR());
      }
      result = result && (hasG() == other.hasG());
      if (hasG()) {
        result = result && (getG()
            == other.getG());
      }
      result = result && (hasB() == other.hasB());
      if (hasB()) {
        result = result && (getB()
            == other.getB());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      if (hasR()) {
        hash = (37 * hash) + R_FIELD_NUMBER;
        hash = (53 * hash) + getR();
      }
      if (hasG()) {
        hash = (37 * hash) + G_FIELD_NUMBER;
        hash = (53 * hash) + getG();
      }
      if (hasB()) {
        hash = (37 * hash) + B_FIELD_NUMBER;
        hash = (53 * hash) + getB();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static mediapipe.ColorOuterClass.Color parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static mediapipe.ColorOuterClass.Color parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static mediapipe.ColorOuterClass.Color parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static mediapipe.ColorOuterClass.Color parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static mediapipe.ColorOuterClass.Color parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static mediapipe.ColorOuterClass.Color parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static mediapipe.ColorOuterClass.Color parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static mediapipe.ColorOuterClass.Color parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static mediapipe.ColorOuterClass.Color parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static mediapipe.ColorOuterClass.Color parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(mediapipe.ColorOuterClass.Color prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code mediapipe.Color}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:mediapipe.Color)
        mediapipe.ColorOuterClass.ColorOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return mediapipe.ColorOuterClass.internal_static_mediapipe_Color_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return mediapipe.ColorOuterClass.internal_static_mediapipe_Color_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                mediapipe.ColorOuterClass.Color.class, mediapipe.ColorOuterClass.Color.Builder.class);
      }

      // Construct using mediapipe.ColorOuterClass.Color.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        r_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        g_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        b_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return mediapipe.ColorOuterClass.internal_static_mediapipe_Color_descriptor;
      }

      public mediapipe.ColorOuterClass.Color getDefaultInstanceForType() {
        return mediapipe.ColorOuterClass.Color.getDefaultInstance();
      }

      public mediapipe.ColorOuterClass.Color build() {
        mediapipe.ColorOuterClass.Color result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public mediapipe.ColorOuterClass.Color buildPartial() {
        mediapipe.ColorOuterClass.Color result = new mediapipe.ColorOuterClass.Color(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.r_ = r_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.g_ = g_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.b_ = b_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof mediapipe.ColorOuterClass.Color) {
          return mergeFrom((mediapipe.ColorOuterClass.Color)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(mediapipe.ColorOuterClass.Color other) {
        if (other == mediapipe.ColorOuterClass.Color.getDefaultInstance()) return this;
        if (other.hasR()) {
          setR(other.getR());
        }
        if (other.hasG()) {
          setG(other.getG());
        }
        if (other.hasB()) {
          setB(other.getB());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        mediapipe.ColorOuterClass.Color parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (mediapipe.ColorOuterClass.Color) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int r_ ;
      /**
       * <code>optional int32 r = 1;</code>
       */
      public boolean hasR() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 r = 1;</code>
       */
      public int getR() {
        return r_;
      }
      /**
       * <code>optional int32 r = 1;</code>
       */
      public Builder setR(int value) {
        bitField0_ |= 0x00000001;
        r_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 r = 1;</code>
       */
      public Builder clearR() {
        bitField0_ = (bitField0_ & ~0x00000001);
        r_ = 0;
        onChanged();
        return this;
      }

      private int g_ ;
      /**
       * <code>optional int32 g = 2;</code>
       */
      public boolean hasG() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 g = 2;</code>
       */
      public int getG() {
        return g_;
      }
      /**
       * <code>optional int32 g = 2;</code>
       */
      public Builder setG(int value) {
        bitField0_ |= 0x00000002;
        g_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 g = 2;</code>
       */
      public Builder clearG() {
        bitField0_ = (bitField0_ & ~0x00000002);
        g_ = 0;
        onChanged();
        return this;
      }

      private int b_ ;
      /**
       * <code>optional int32 b = 3;</code>
       */
      public boolean hasB() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 b = 3;</code>
       */
      public int getB() {
        return b_;
      }
      /**
       * <code>optional int32 b = 3;</code>
       */
      public Builder setB(int value) {
        bitField0_ |= 0x00000004;
        b_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 b = 3;</code>
       */
      public Builder clearB() {
        bitField0_ = (bitField0_ & ~0x00000004);
        b_ = 0;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:mediapipe.Color)
    }

    // @@protoc_insertion_point(class_scope:mediapipe.Color)
    private static final mediapipe.ColorOuterClass.Color DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new mediapipe.ColorOuterClass.Color();
    }

    public static mediapipe.ColorOuterClass.Color getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<Color>
        PARSER = new com.google.protobuf.AbstractParser<Color>() {
      public Color parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new Color(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Color> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Color> getParserForType() {
      return PARSER;
    }

    public mediapipe.ColorOuterClass.Color getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ColorMapOrBuilder extends
      // @@protoc_insertion_point(interface_extends:mediapipe.ColorMap)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>map&lt;string, .mediapipe.Color&gt; label_to_color = 1;</code>
     */
    int getLabelToColorCount();
    /**
     * <code>map&lt;string, .mediapipe.Color&gt; label_to_color = 1;</code>
     */
    boolean containsLabelToColor(
        java.lang.String key);
    /**
     * Use {@link #getLabelToColorMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.String, mediapipe.ColorOuterClass.Color>
    getLabelToColor();
    /**
     * <code>map&lt;string, .mediapipe.Color&gt; label_to_color = 1;</code>
     */
    java.util.Map<java.lang.String, mediapipe.ColorOuterClass.Color>
    getLabelToColorMap();
    /**
     * <code>map&lt;string, .mediapipe.Color&gt; label_to_color = 1;</code>
     */

    mediapipe.ColorOuterClass.Color getLabelToColorOrDefault(
        java.lang.String key,
        mediapipe.ColorOuterClass.Color defaultValue);
    /**
     * <code>map&lt;string, .mediapipe.Color&gt; label_to_color = 1;</code>
     */

    mediapipe.ColorOuterClass.Color getLabelToColorOrThrow(
        java.lang.String key);
  }
  /**
   * <pre>
   * Mapping from string label to a color.
   * </pre>
   *
   * Protobuf type {@code mediapipe.ColorMap}
   */
  public  static final class ColorMap extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:mediapipe.ColorMap)
      ColorMapOrBuilder {
    // Use ColorMap.newBuilder() to construct.
    private ColorMap(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ColorMap() {
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ColorMap(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                labelToColor_ = com.google.protobuf.MapField.newMapField(
                    LabelToColorDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000001;
              }
              com.google.protobuf.MapEntry<java.lang.String, mediapipe.ColorOuterClass.Color>
              labelToColor = input.readMessage(
                  LabelToColorDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              labelToColor_.getMutableMap().put(labelToColor.getKey(), labelToColor.getValue());
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return mediapipe.ColorOuterClass.internal_static_mediapipe_ColorMap_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    protected com.google.protobuf.MapField internalGetMapField(
        int number) {
      switch (number) {
        case 1:
          return internalGetLabelToColor();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return mediapipe.ColorOuterClass.internal_static_mediapipe_ColorMap_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              mediapipe.ColorOuterClass.ColorMap.class, mediapipe.ColorOuterClass.ColorMap.Builder.class);
    }

    public static final int LABEL_TO_COLOR_FIELD_NUMBER = 1;
    private static final class LabelToColorDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.String, mediapipe.ColorOuterClass.Color> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.String, mediapipe.ColorOuterClass.Color>newDefaultInstance(
                  mediapipe.ColorOuterClass.internal_static_mediapipe_ColorMap_LabelToColorEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "",
                  com.google.protobuf.WireFormat.FieldType.MESSAGE,
                  mediapipe.ColorOuterClass.Color.getDefaultInstance());
    }
    private com.google.protobuf.MapField<
        java.lang.String, mediapipe.ColorOuterClass.Color> labelToColor_;
    private com.google.protobuf.MapField<java.lang.String, mediapipe.ColorOuterClass.Color>
    internalGetLabelToColor() {
      if (labelToColor_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            LabelToColorDefaultEntryHolder.defaultEntry);
      }
      return labelToColor_;
    }

    public int getLabelToColorCount() {
      return internalGetLabelToColor().getMap().size();
    }
    /**
     * <code>map&lt;string, .mediapipe.Color&gt; label_to_color = 1;</code>
     */

    public boolean containsLabelToColor(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      return internalGetLabelToColor().getMap().containsKey(key);
    }
    /**
     * Use {@link #getLabelToColorMap()} instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, mediapipe.ColorOuterClass.Color> getLabelToColor() {
      return getLabelToColorMap();
    }
    /**
     * <code>map&lt;string, .mediapipe.Color&gt; label_to_color = 1;</code>
     */

    public java.util.Map<java.lang.String, mediapipe.ColorOuterClass.Color> getLabelToColorMap() {
      return internalGetLabelToColor().getMap();
    }
    /**
     * <code>map&lt;string, .mediapipe.Color&gt; label_to_color = 1;</code>
     */

    public mediapipe.ColorOuterClass.Color getLabelToColorOrDefault(
        java.lang.String key,
        mediapipe.ColorOuterClass.Color defaultValue) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, mediapipe.ColorOuterClass.Color> map =
          internalGetLabelToColor().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;string, .mediapipe.Color&gt; label_to_color = 1;</code>
     */

    public mediapipe.ColorOuterClass.Color getLabelToColorOrThrow(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, mediapipe.ColorOuterClass.Color> map =
          internalGetLabelToColor().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (java.util.Map.Entry<java.lang.String, mediapipe.ColorOuterClass.Color> entry
           : internalGetLabelToColor().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.String, mediapipe.ColorOuterClass.Color>
        labelToColor = LabelToColorDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        output.writeMessage(1, labelToColor);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (java.util.Map.Entry<java.lang.String, mediapipe.ColorOuterClass.Color> entry
           : internalGetLabelToColor().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.String, mediapipe.ColorOuterClass.Color>
        labelToColor = LabelToColorDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(1, labelToColor);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof mediapipe.ColorOuterClass.ColorMap)) {
        return super.equals(obj);
      }
      mediapipe.ColorOuterClass.ColorMap other = (mediapipe.ColorOuterClass.ColorMap) obj;

      boolean result = true;
      result = result && internalGetLabelToColor().equals(
          other.internalGetLabelToColor());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      if (!internalGetLabelToColor().getMap().isEmpty()) {
        hash = (37 * hash) + LABEL_TO_COLOR_FIELD_NUMBER;
        hash = (53 * hash) + internalGetLabelToColor().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static mediapipe.ColorOuterClass.ColorMap parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static mediapipe.ColorOuterClass.ColorMap parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static mediapipe.ColorOuterClass.ColorMap parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static mediapipe.ColorOuterClass.ColorMap parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static mediapipe.ColorOuterClass.ColorMap parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static mediapipe.ColorOuterClass.ColorMap parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static mediapipe.ColorOuterClass.ColorMap parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static mediapipe.ColorOuterClass.ColorMap parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static mediapipe.ColorOuterClass.ColorMap parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static mediapipe.ColorOuterClass.ColorMap parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(mediapipe.ColorOuterClass.ColorMap prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Mapping from string label to a color.
     * </pre>
     *
     * Protobuf type {@code mediapipe.ColorMap}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:mediapipe.ColorMap)
        mediapipe.ColorOuterClass.ColorMapOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return mediapipe.ColorOuterClass.internal_static_mediapipe_ColorMap_descriptor;
      }

      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMapField(
          int number) {
        switch (number) {
          case 1:
            return internalGetLabelToColor();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMutableMapField(
          int number) {
        switch (number) {
          case 1:
            return internalGetMutableLabelToColor();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return mediapipe.ColorOuterClass.internal_static_mediapipe_ColorMap_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                mediapipe.ColorOuterClass.ColorMap.class, mediapipe.ColorOuterClass.ColorMap.Builder.class);
      }

      // Construct using mediapipe.ColorOuterClass.ColorMap.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        internalGetMutableLabelToColor().clear();
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return mediapipe.ColorOuterClass.internal_static_mediapipe_ColorMap_descriptor;
      }

      public mediapipe.ColorOuterClass.ColorMap getDefaultInstanceForType() {
        return mediapipe.ColorOuterClass.ColorMap.getDefaultInstance();
      }

      public mediapipe.ColorOuterClass.ColorMap build() {
        mediapipe.ColorOuterClass.ColorMap result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public mediapipe.ColorOuterClass.ColorMap buildPartial() {
        mediapipe.ColorOuterClass.ColorMap result = new mediapipe.ColorOuterClass.ColorMap(this);
        int from_bitField0_ = bitField0_;
        result.labelToColor_ = internalGetLabelToColor();
        result.labelToColor_.makeImmutable();
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof mediapipe.ColorOuterClass.ColorMap) {
          return mergeFrom((mediapipe.ColorOuterClass.ColorMap)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(mediapipe.ColorOuterClass.ColorMap other) {
        if (other == mediapipe.ColorOuterClass.ColorMap.getDefaultInstance()) return this;
        internalGetMutableLabelToColor().mergeFrom(
            other.internalGetLabelToColor());
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        mediapipe.ColorOuterClass.ColorMap parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (mediapipe.ColorOuterClass.ColorMap) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private com.google.protobuf.MapField<
          java.lang.String, mediapipe.ColorOuterClass.Color> labelToColor_;
      private com.google.protobuf.MapField<java.lang.String, mediapipe.ColorOuterClass.Color>
      internalGetLabelToColor() {
        if (labelToColor_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              LabelToColorDefaultEntryHolder.defaultEntry);
        }
        return labelToColor_;
      }
      private com.google.protobuf.MapField<java.lang.String, mediapipe.ColorOuterClass.Color>
      internalGetMutableLabelToColor() {
        onChanged();;
        if (labelToColor_ == null) {
          labelToColor_ = com.google.protobuf.MapField.newMapField(
              LabelToColorDefaultEntryHolder.defaultEntry);
        }
        if (!labelToColor_.isMutable()) {
          labelToColor_ = labelToColor_.copy();
        }
        return labelToColor_;
      }

      public int getLabelToColorCount() {
        return internalGetLabelToColor().getMap().size();
      }
      /**
       * <code>map&lt;string, .mediapipe.Color&gt; label_to_color = 1;</code>
       */

      public boolean containsLabelToColor(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        return internalGetLabelToColor().getMap().containsKey(key);
      }
      /**
       * Use {@link #getLabelToColorMap()} instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, mediapipe.ColorOuterClass.Color> getLabelToColor() {
        return getLabelToColorMap();
      }
      /**
       * <code>map&lt;string, .mediapipe.Color&gt; label_to_color = 1;</code>
       */

      public java.util.Map<java.lang.String, mediapipe.ColorOuterClass.Color> getLabelToColorMap() {
        return internalGetLabelToColor().getMap();
      }
      /**
       * <code>map&lt;string, .mediapipe.Color&gt; label_to_color = 1;</code>
       */

      public mediapipe.ColorOuterClass.Color getLabelToColorOrDefault(
          java.lang.String key,
          mediapipe.ColorOuterClass.Color defaultValue) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, mediapipe.ColorOuterClass.Color> map =
            internalGetLabelToColor().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <code>map&lt;string, .mediapipe.Color&gt; label_to_color = 1;</code>
       */

      public mediapipe.ColorOuterClass.Color getLabelToColorOrThrow(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, mediapipe.ColorOuterClass.Color> map =
            internalGetLabelToColor().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearLabelToColor() {
        getMutableLabelToColor().clear();
        return this;
      }
      /**
       * <code>map&lt;string, .mediapipe.Color&gt; label_to_color = 1;</code>
       */

      public Builder removeLabelToColor(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        getMutableLabelToColor().remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, mediapipe.ColorOuterClass.Color>
      getMutableLabelToColor() {
        return internalGetMutableLabelToColor().getMutableMap();
      }
      /**
       * <code>map&lt;string, .mediapipe.Color&gt; label_to_color = 1;</code>
       */
      public Builder putLabelToColor(
          java.lang.String key,
          mediapipe.ColorOuterClass.Color value) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        if (value == null) { throw new java.lang.NullPointerException(); }
        getMutableLabelToColor().put(key, value);
        return this;
      }
      /**
       * <code>map&lt;string, .mediapipe.Color&gt; label_to_color = 1;</code>
       */

      public Builder putAllLabelToColor(
          java.util.Map<java.lang.String, mediapipe.ColorOuterClass.Color> values) {
        getMutableLabelToColor().putAll(values);
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:mediapipe.ColorMap)
    }

    // @@protoc_insertion_point(class_scope:mediapipe.ColorMap)
    private static final mediapipe.ColorOuterClass.ColorMap DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new mediapipe.ColorOuterClass.ColorMap();
    }

    public static mediapipe.ColorOuterClass.ColorMap getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<ColorMap>
        PARSER = new com.google.protobuf.AbstractParser<ColorMap>() {
      public ColorMap parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new ColorMap(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ColorMap> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ColorMap> getParserForType() {
      return PARSER;
    }

    public mediapipe.ColorOuterClass.ColorMap getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_mediapipe_Color_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_mediapipe_Color_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_mediapipe_ColorMap_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_mediapipe_ColorMap_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_mediapipe_ColorMap_LabelToColorEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_mediapipe_ColorMap_LabelToColorEntry_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\032mediapipe/util/color.proto\022\tmediapipe\"" +
      "(\n\005Color\022\t\n\001r\030\001 \001(\005\022\t\n\001g\030\002 \001(\005\022\t\n\001b\030\003 \001(" +
      "\005\"\220\001\n\010ColorMap\022=\n\016label_to_color\030\001 \003(\0132%" +
      ".mediapipe.ColorMap.LabelToColorEntry\032E\n" +
      "\021LabelToColorEntry\022\013\n\003key\030\001 \001(\t\022\037\n\005value" +
      "\030\002 \001(\0132\020.mediapipe.Color:\0028\001"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
    internal_static_mediapipe_Color_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_mediapipe_Color_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_mediapipe_Color_descriptor,
        new java.lang.String[] { "R", "G", "B", });
    internal_static_mediapipe_ColorMap_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_mediapipe_ColorMap_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_mediapipe_ColorMap_descriptor,
        new java.lang.String[] { "LabelToColor", });
    internal_static_mediapipe_ColorMap_LabelToColorEntry_descriptor =
      internal_static_mediapipe_ColorMap_descriptor.getNestedTypes().get(0);
    internal_static_mediapipe_ColorMap_LabelToColorEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_mediapipe_ColorMap_LabelToColorEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
