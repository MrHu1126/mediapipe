// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: mediapipe/util/render_data.proto

package mediapipe;

public final class RenderDataOuterClass {
  private RenderDataOuterClass() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface RenderDataOrBuilder extends
      // @@protoc_insertion_point(interface_extends:mediapipe.RenderData)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .mediapipe.RenderAnnotation render_annotations = 1;</code>
     */
    java.util.List<mediapipe.RenderDataOuterClass.RenderAnnotation> 
        getRenderAnnotationsList();
    /**
     * <code>repeated .mediapipe.RenderAnnotation render_annotations = 1;</code>
     */
    mediapipe.RenderDataOuterClass.RenderAnnotation getRenderAnnotations(int index);
    /**
     * <code>repeated .mediapipe.RenderAnnotation render_annotations = 1;</code>
     */
    int getRenderAnnotationsCount();
    /**
     * <code>repeated .mediapipe.RenderAnnotation render_annotations = 1;</code>
     */
    java.util.List<? extends mediapipe.RenderDataOuterClass.RenderAnnotationOrBuilder> 
        getRenderAnnotationsOrBuilderList();
    /**
     * <code>repeated .mediapipe.RenderAnnotation render_annotations = 1;</code>
     */
    mediapipe.RenderDataOuterClass.RenderAnnotationOrBuilder getRenderAnnotationsOrBuilder(
        int index);

    /**
     * <pre>
     * An optional string that uniquely identifies this class of annotations.
     * </pre>
     *
     * <code>optional string scene_class = 2;</code>
     */
    boolean hasSceneClass();
    /**
     * <pre>
     * An optional string that uniquely identifies this class of annotations.
     * </pre>
     *
     * <code>optional string scene_class = 2;</code>
     */
    java.lang.String getSceneClass();
    /**
     * <pre>
     * An optional string that uniquely identifies this class of annotations.
     * </pre>
     *
     * <code>optional string scene_class = 2;</code>
     */
    com.google.protobuf.ByteString
        getSceneClassBytes();

    /**
     * <pre>
     * An optional viewport to which this set of annotations are intended to be
     * rendered. If left unset, the annotations are meant to render overtop of the
     * existing camera feed in the "main" viewport. If set, the annotations are to
     * be rendered in a separate viewport.
     * </pre>
     *
     * <code>optional .mediapipe.RenderViewport scene_viewport = 3;</code>
     */
    boolean hasSceneViewport();
    /**
     * <pre>
     * An optional viewport to which this set of annotations are intended to be
     * rendered. If left unset, the annotations are meant to render overtop of the
     * existing camera feed in the "main" viewport. If set, the annotations are to
     * be rendered in a separate viewport.
     * </pre>
     *
     * <code>optional .mediapipe.RenderViewport scene_viewport = 3;</code>
     */
    mediapipe.RenderDataOuterClass.RenderViewport getSceneViewport();
    /**
     * <pre>
     * An optional viewport to which this set of annotations are intended to be
     * rendered. If left unset, the annotations are meant to render overtop of the
     * existing camera feed in the "main" viewport. If set, the annotations are to
     * be rendered in a separate viewport.
     * </pre>
     *
     * <code>optional .mediapipe.RenderViewport scene_viewport = 3;</code>
     */
    mediapipe.RenderDataOuterClass.RenderViewportOrBuilder getSceneViewportOrBuilder();
  }
  /**
   * <pre>
   * A RenderData is a collection of multiple RenderAnnotations. For example, a
   * face can be rendered using a group of annotations: a bounding box around the
   * face (rectangle) and annotations for various face parts such as eyes, nose
   * etc (2D points).
   * </pre>
   *
   * Protobuf type {@code mediapipe.RenderData}
   */
  public  static final class RenderData extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:mediapipe.RenderData)
      RenderDataOrBuilder {
    // Use RenderData.newBuilder() to construct.
    private RenderData(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private RenderData() {
      renderAnnotations_ = java.util.Collections.emptyList();
      sceneClass_ = "";
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private RenderData(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                renderAnnotations_ = new java.util.ArrayList<mediapipe.RenderDataOuterClass.RenderAnnotation>();
                mutable_bitField0_ |= 0x00000001;
              }
              renderAnnotations_.add(
                  input.readMessage(mediapipe.RenderDataOuterClass.RenderAnnotation.PARSER, extensionRegistry));
              break;
            }
            case 18: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000001;
              sceneClass_ = bs;
              break;
            }
            case 26: {
              mediapipe.RenderDataOuterClass.RenderViewport.Builder subBuilder = null;
              if (((bitField0_ & 0x00000002) == 0x00000002)) {
                subBuilder = sceneViewport_.toBuilder();
              }
              sceneViewport_ = input.readMessage(mediapipe.RenderDataOuterClass.RenderViewport.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(sceneViewport_);
                sceneViewport_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000002;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          renderAnnotations_ = java.util.Collections.unmodifiableList(renderAnnotations_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return mediapipe.RenderDataOuterClass.internal_static_mediapipe_RenderData_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return mediapipe.RenderDataOuterClass.internal_static_mediapipe_RenderData_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              mediapipe.RenderDataOuterClass.RenderData.class, mediapipe.RenderDataOuterClass.RenderData.Builder.class);
    }

    private int bitField0_;
    public static final int RENDER_ANNOTATIONS_FIELD_NUMBER = 1;
    private java.util.List<mediapipe.RenderDataOuterClass.RenderAnnotation> renderAnnotations_;
    /**
     * <code>repeated .mediapipe.RenderAnnotation render_annotations = 1;</code>
     */
    public java.util.List<mediapipe.RenderDataOuterClass.RenderAnnotation> getRenderAnnotationsList() {
      return renderAnnotations_;
    }
    /**
     * <code>repeated .mediapipe.RenderAnnotation render_annotations = 1;</code>
     */
    public java.util.List<? extends mediapipe.RenderDataOuterClass.RenderAnnotationOrBuilder> 
        getRenderAnnotationsOrBuilderList() {
      return renderAnnotations_;
    }
    /**
     * <code>repeated .mediapipe.RenderAnnotation render_annotations = 1;</code>
     */
    public int getRenderAnnotationsCount() {
      return renderAnnotations_.size();
    }
    /**
     * <code>repeated .mediapipe.RenderAnnotation render_annotations = 1;</code>
     */
    public mediapipe.RenderDataOuterClass.RenderAnnotation getRenderAnnotations(int index) {
      return renderAnnotations_.get(index);
    }
    /**
     * <code>repeated .mediapipe.RenderAnnotation render_annotations = 1;</code>
     */
    public mediapipe.RenderDataOuterClass.RenderAnnotationOrBuilder getRenderAnnotationsOrBuilder(
        int index) {
      return renderAnnotations_.get(index);
    }

    public static final int SCENE_CLASS_FIELD_NUMBER = 2;
    private volatile java.lang.Object sceneClass_;
    /**
     * <pre>
     * An optional string that uniquely identifies this class of annotations.
     * </pre>
     *
     * <code>optional string scene_class = 2;</code>
     */
    public boolean hasSceneClass() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <pre>
     * An optional string that uniquely identifies this class of annotations.
     * </pre>
     *
     * <code>optional string scene_class = 2;</code>
     */
    public java.lang.String getSceneClass() {
      java.lang.Object ref = sceneClass_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          sceneClass_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     * An optional string that uniquely identifies this class of annotations.
     * </pre>
     *
     * <code>optional string scene_class = 2;</code>
     */
    public com.google.protobuf.ByteString
        getSceneClassBytes() {
      java.lang.Object ref = sceneClass_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        sceneClass_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int SCENE_VIEWPORT_FIELD_NUMBER = 3;
    private mediapipe.RenderDataOuterClass.RenderViewport sceneViewport_;
    /**
     * <pre>
     * An optional viewport to which this set of annotations are intended to be
     * rendered. If left unset, the annotations are meant to render overtop of the
     * existing camera feed in the "main" viewport. If set, the annotations are to
     * be rendered in a separate viewport.
     * </pre>
     *
     * <code>optional .mediapipe.RenderViewport scene_viewport = 3;</code>
     */
    public boolean hasSceneViewport() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <pre>
     * An optional viewport to which this set of annotations are intended to be
     * rendered. If left unset, the annotations are meant to render overtop of the
     * existing camera feed in the "main" viewport. If set, the annotations are to
     * be rendered in a separate viewport.
     * </pre>
     *
     * <code>optional .mediapipe.RenderViewport scene_viewport = 3;</code>
     */
    public mediapipe.RenderDataOuterClass.RenderViewport getSceneViewport() {
      return sceneViewport_ == null ? mediapipe.RenderDataOuterClass.RenderViewport.getDefaultInstance() : sceneViewport_;
    }
    /**
     * <pre>
     * An optional viewport to which this set of annotations are intended to be
     * rendered. If left unset, the annotations are meant to render overtop of the
     * existing camera feed in the "main" viewport. If set, the annotations are to
     * be rendered in a separate viewport.
     * </pre>
     *
     * <code>optional .mediapipe.RenderViewport scene_viewport = 3;</code>
     */
    public mediapipe.RenderDataOuterClass.RenderViewportOrBuilder getSceneViewportOrBuilder() {
      return sceneViewport_ == null ? mediapipe.RenderDataOuterClass.RenderViewport.getDefaultInstance() : sceneViewport_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < renderAnnotations_.size(); i++) {
        output.writeMessage(1, renderAnnotations_.get(i));
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, sceneClass_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(3, getSceneViewport());
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < renderAnnotations_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, renderAnnotations_.get(i));
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, sceneClass_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getSceneViewport());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof mediapipe.RenderDataOuterClass.RenderData)) {
        return super.equals(obj);
      }
      mediapipe.RenderDataOuterClass.RenderData other = (mediapipe.RenderDataOuterClass.RenderData) obj;

      boolean result = true;
      result = result && getRenderAnnotationsList()
          .equals(other.getRenderAnnotationsList());
      result = result && (hasSceneClass() == other.hasSceneClass());
      if (hasSceneClass()) {
        result = result && getSceneClass()
            .equals(other.getSceneClass());
      }
      result = result && (hasSceneViewport() == other.hasSceneViewport());
      if (hasSceneViewport()) {
        result = result && getSceneViewport()
            .equals(other.getSceneViewport());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      if (getRenderAnnotationsCount() > 0) {
        hash = (37 * hash) + RENDER_ANNOTATIONS_FIELD_NUMBER;
        hash = (53 * hash) + getRenderAnnotationsList().hashCode();
      }
      if (hasSceneClass()) {
        hash = (37 * hash) + SCENE_CLASS_FIELD_NUMBER;
        hash = (53 * hash) + getSceneClass().hashCode();
      }
      if (hasSceneViewport()) {
        hash = (37 * hash) + SCENE_VIEWPORT_FIELD_NUMBER;
        hash = (53 * hash) + getSceneViewport().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static mediapipe.RenderDataOuterClass.RenderData parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static mediapipe.RenderDataOuterClass.RenderData parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static mediapipe.RenderDataOuterClass.RenderData parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static mediapipe.RenderDataOuterClass.RenderData parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static mediapipe.RenderDataOuterClass.RenderData parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static mediapipe.RenderDataOuterClass.RenderData parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static mediapipe.RenderDataOuterClass.RenderData parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static mediapipe.RenderDataOuterClass.RenderData parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static mediapipe.RenderDataOuterClass.RenderData parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static mediapipe.RenderDataOuterClass.RenderData parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(mediapipe.RenderDataOuterClass.RenderData prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * A RenderData is a collection of multiple RenderAnnotations. For example, a
     * face can be rendered using a group of annotations: a bounding box around the
     * face (rectangle) and annotations for various face parts such as eyes, nose
     * etc (2D points).
     * </pre>
     *
     * Protobuf type {@code mediapipe.RenderData}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:mediapipe.RenderData)
        mediapipe.RenderDataOuterClass.RenderDataOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return mediapipe.RenderDataOuterClass.internal_static_mediapipe_RenderData_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return mediapipe.RenderDataOuterClass.internal_static_mediapipe_RenderData_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                mediapipe.RenderDataOuterClass.RenderData.class, mediapipe.RenderDataOuterClass.RenderData.Builder.class);
      }

      // Construct using mediapipe.RenderDataOuterClass.RenderData.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getRenderAnnotationsFieldBuilder();
          getSceneViewportFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        if (renderAnnotationsBuilder_ == null) {
          renderAnnotations_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          renderAnnotationsBuilder_.clear();
        }
        sceneClass_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        if (sceneViewportBuilder_ == null) {
          sceneViewport_ = null;
        } else {
          sceneViewportBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return mediapipe.RenderDataOuterClass.internal_static_mediapipe_RenderData_descriptor;
      }

      public mediapipe.RenderDataOuterClass.RenderData getDefaultInstanceForType() {
        return mediapipe.RenderDataOuterClass.RenderData.getDefaultInstance();
      }

      public mediapipe.RenderDataOuterClass.RenderData build() {
        mediapipe.RenderDataOuterClass.RenderData result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public mediapipe.RenderDataOuterClass.RenderData buildPartial() {
        mediapipe.RenderDataOuterClass.RenderData result = new mediapipe.RenderDataOuterClass.RenderData(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (renderAnnotationsBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            renderAnnotations_ = java.util.Collections.unmodifiableList(renderAnnotations_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.renderAnnotations_ = renderAnnotations_;
        } else {
          result.renderAnnotations_ = renderAnnotationsBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000001;
        }
        result.sceneClass_ = sceneClass_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000002;
        }
        if (sceneViewportBuilder_ == null) {
          result.sceneViewport_ = sceneViewport_;
        } else {
          result.sceneViewport_ = sceneViewportBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof mediapipe.RenderDataOuterClass.RenderData) {
          return mergeFrom((mediapipe.RenderDataOuterClass.RenderData)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(mediapipe.RenderDataOuterClass.RenderData other) {
        if (other == mediapipe.RenderDataOuterClass.RenderData.getDefaultInstance()) return this;
        if (renderAnnotationsBuilder_ == null) {
          if (!other.renderAnnotations_.isEmpty()) {
            if (renderAnnotations_.isEmpty()) {
              renderAnnotations_ = other.renderAnnotations_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureRenderAnnotationsIsMutable();
              renderAnnotations_.addAll(other.renderAnnotations_);
            }
            onChanged();
          }
        } else {
          if (!other.renderAnnotations_.isEmpty()) {
            if (renderAnnotationsBuilder_.isEmpty()) {
              renderAnnotationsBuilder_.dispose();
              renderAnnotationsBuilder_ = null;
              renderAnnotations_ = other.renderAnnotations_;
              bitField0_ = (bitField0_ & ~0x00000001);
              renderAnnotationsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getRenderAnnotationsFieldBuilder() : null;
            } else {
              renderAnnotationsBuilder_.addAllMessages(other.renderAnnotations_);
            }
          }
        }
        if (other.hasSceneClass()) {
          bitField0_ |= 0x00000002;
          sceneClass_ = other.sceneClass_;
          onChanged();
        }
        if (other.hasSceneViewport()) {
          mergeSceneViewport(other.getSceneViewport());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        mediapipe.RenderDataOuterClass.RenderData parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (mediapipe.RenderDataOuterClass.RenderData) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<mediapipe.RenderDataOuterClass.RenderAnnotation> renderAnnotations_ =
        java.util.Collections.emptyList();
      private void ensureRenderAnnotationsIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          renderAnnotations_ = new java.util.ArrayList<mediapipe.RenderDataOuterClass.RenderAnnotation>(renderAnnotations_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          mediapipe.RenderDataOuterClass.RenderAnnotation, mediapipe.RenderDataOuterClass.RenderAnnotation.Builder, mediapipe.RenderDataOuterClass.RenderAnnotationOrBuilder> renderAnnotationsBuilder_;

      /**
       * <code>repeated .mediapipe.RenderAnnotation render_annotations = 1;</code>
       */
      public java.util.List<mediapipe.RenderDataOuterClass.RenderAnnotation> getRenderAnnotationsList() {
        if (renderAnnotationsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(renderAnnotations_);
        } else {
          return renderAnnotationsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .mediapipe.RenderAnnotation render_annotations = 1;</code>
       */
      public int getRenderAnnotationsCount() {
        if (renderAnnotationsBuilder_ == null) {
          return renderAnnotations_.size();
        } else {
          return renderAnnotationsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .mediapipe.RenderAnnotation render_annotations = 1;</code>
       */
      public mediapipe.RenderDataOuterClass.RenderAnnotation getRenderAnnotations(int index) {
        if (renderAnnotationsBuilder_ == null) {
          return renderAnnotations_.get(index);
        } else {
          return renderAnnotationsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .mediapipe.RenderAnnotation render_annotations = 1;</code>
       */
      public Builder setRenderAnnotations(
          int index, mediapipe.RenderDataOuterClass.RenderAnnotation value) {
        if (renderAnnotationsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRenderAnnotationsIsMutable();
          renderAnnotations_.set(index, value);
          onChanged();
        } else {
          renderAnnotationsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .mediapipe.RenderAnnotation render_annotations = 1;</code>
       */
      public Builder setRenderAnnotations(
          int index, mediapipe.RenderDataOuterClass.RenderAnnotation.Builder builderForValue) {
        if (renderAnnotationsBuilder_ == null) {
          ensureRenderAnnotationsIsMutable();
          renderAnnotations_.set(index, builderForValue.build());
          onChanged();
        } else {
          renderAnnotationsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .mediapipe.RenderAnnotation render_annotations = 1;</code>
       */
      public Builder addRenderAnnotations(mediapipe.RenderDataOuterClass.RenderAnnotation value) {
        if (renderAnnotationsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRenderAnnotationsIsMutable();
          renderAnnotations_.add(value);
          onChanged();
        } else {
          renderAnnotationsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .mediapipe.RenderAnnotation render_annotations = 1;</code>
       */
      public Builder addRenderAnnotations(
          int index, mediapipe.RenderDataOuterClass.RenderAnnotation value) {
        if (renderAnnotationsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRenderAnnotationsIsMutable();
          renderAnnotations_.add(index, value);
          onChanged();
        } else {
          renderAnnotationsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .mediapipe.RenderAnnotation render_annotations = 1;</code>
       */
      public Builder addRenderAnnotations(
          mediapipe.RenderDataOuterClass.RenderAnnotation.Builder builderForValue) {
        if (renderAnnotationsBuilder_ == null) {
          ensureRenderAnnotationsIsMutable();
          renderAnnotations_.add(builderForValue.build());
          onChanged();
        } else {
          renderAnnotationsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .mediapipe.RenderAnnotation render_annotations = 1;</code>
       */
      public Builder addRenderAnnotations(
          int index, mediapipe.RenderDataOuterClass.RenderAnnotation.Builder builderForValue) {
        if (renderAnnotationsBuilder_ == null) {
          ensureRenderAnnotationsIsMutable();
          renderAnnotations_.add(index, builderForValue.build());
          onChanged();
        } else {
          renderAnnotationsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .mediapipe.RenderAnnotation render_annotations = 1;</code>
       */
      public Builder addAllRenderAnnotations(
          java.lang.Iterable<? extends mediapipe.RenderDataOuterClass.RenderAnnotation> values) {
        if (renderAnnotationsBuilder_ == null) {
          ensureRenderAnnotationsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, renderAnnotations_);
          onChanged();
        } else {
          renderAnnotationsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .mediapipe.RenderAnnotation render_annotations = 1;</code>
       */
      public Builder clearRenderAnnotations() {
        if (renderAnnotationsBuilder_ == null) {
          renderAnnotations_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          renderAnnotationsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .mediapipe.RenderAnnotation render_annotations = 1;</code>
       */
      public Builder removeRenderAnnotations(int index) {
        if (renderAnnotationsBuilder_ == null) {
          ensureRenderAnnotationsIsMutable();
          renderAnnotations_.remove(index);
          onChanged();
        } else {
          renderAnnotationsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .mediapipe.RenderAnnotation render_annotations = 1;</code>
       */
      public mediapipe.RenderDataOuterClass.RenderAnnotation.Builder getRenderAnnotationsBuilder(
          int index) {
        return getRenderAnnotationsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .mediapipe.RenderAnnotation render_annotations = 1;</code>
       */
      public mediapipe.RenderDataOuterClass.RenderAnnotationOrBuilder getRenderAnnotationsOrBuilder(
          int index) {
        if (renderAnnotationsBuilder_ == null) {
          return renderAnnotations_.get(index);  } else {
          return renderAnnotationsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .mediapipe.RenderAnnotation render_annotations = 1;</code>
       */
      public java.util.List<? extends mediapipe.RenderDataOuterClass.RenderAnnotationOrBuilder> 
           getRenderAnnotationsOrBuilderList() {
        if (renderAnnotationsBuilder_ != null) {
          return renderAnnotationsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(renderAnnotations_);
        }
      }
      /**
       * <code>repeated .mediapipe.RenderAnnotation render_annotations = 1;</code>
       */
      public mediapipe.RenderDataOuterClass.RenderAnnotation.Builder addRenderAnnotationsBuilder() {
        return getRenderAnnotationsFieldBuilder().addBuilder(
            mediapipe.RenderDataOuterClass.RenderAnnotation.getDefaultInstance());
      }
      /**
       * <code>repeated .mediapipe.RenderAnnotation render_annotations = 1;</code>
       */
      public mediapipe.RenderDataOuterClass.RenderAnnotation.Builder addRenderAnnotationsBuilder(
          int index) {
        return getRenderAnnotationsFieldBuilder().addBuilder(
            index, mediapipe.RenderDataOuterClass.RenderAnnotation.getDefaultInstance());
      }
      /**
       * <code>repeated .mediapipe.RenderAnnotation render_annotations = 1;</code>
       */
      public java.util.List<mediapipe.RenderDataOuterClass.RenderAnnotation.Builder> 
           getRenderAnnotationsBuilderList() {
        return getRenderAnnotationsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          mediapipe.RenderDataOuterClass.RenderAnnotation, mediapipe.RenderDataOuterClass.RenderAnnotation.Builder, mediapipe.RenderDataOuterClass.RenderAnnotationOrBuilder> 
          getRenderAnnotationsFieldBuilder() {
        if (renderAnnotationsBuilder_ == null) {
          renderAnnotationsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              mediapipe.RenderDataOuterClass.RenderAnnotation, mediapipe.RenderDataOuterClass.RenderAnnotation.Builder, mediapipe.RenderDataOuterClass.RenderAnnotationOrBuilder>(
                  renderAnnotations_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          renderAnnotations_ = null;
        }
        return renderAnnotationsBuilder_;
      }

      private java.lang.Object sceneClass_ = "";
      /**
       * <pre>
       * An optional string that uniquely identifies this class of annotations.
       * </pre>
       *
       * <code>optional string scene_class = 2;</code>
       */
      public boolean hasSceneClass() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <pre>
       * An optional string that uniquely identifies this class of annotations.
       * </pre>
       *
       * <code>optional string scene_class = 2;</code>
       */
      public java.lang.String getSceneClass() {
        java.lang.Object ref = sceneClass_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            sceneClass_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * An optional string that uniquely identifies this class of annotations.
       * </pre>
       *
       * <code>optional string scene_class = 2;</code>
       */
      public com.google.protobuf.ByteString
          getSceneClassBytes() {
        java.lang.Object ref = sceneClass_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          sceneClass_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * An optional string that uniquely identifies this class of annotations.
       * </pre>
       *
       * <code>optional string scene_class = 2;</code>
       */
      public Builder setSceneClass(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        sceneClass_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * An optional string that uniquely identifies this class of annotations.
       * </pre>
       *
       * <code>optional string scene_class = 2;</code>
       */
      public Builder clearSceneClass() {
        bitField0_ = (bitField0_ & ~0x00000002);
        sceneClass_ = getDefaultInstance().getSceneClass();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * An optional string that uniquely identifies this class of annotations.
       * </pre>
       *
       * <code>optional string scene_class = 2;</code>
       */
      public Builder setSceneClassBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        sceneClass_ = value;
        onChanged();
        return this;
      }

      private mediapipe.RenderDataOuterClass.RenderViewport sceneViewport_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          mediapipe.RenderDataOuterClass.RenderViewport, mediapipe.RenderDataOuterClass.RenderViewport.Builder, mediapipe.RenderDataOuterClass.RenderViewportOrBuilder> sceneViewportBuilder_;
      /**
       * <pre>
       * An optional viewport to which this set of annotations are intended to be
       * rendered. If left unset, the annotations are meant to render overtop of the
       * existing camera feed in the "main" viewport. If set, the annotations are to
       * be rendered in a separate viewport.
       * </pre>
       *
       * <code>optional .mediapipe.RenderViewport scene_viewport = 3;</code>
       */
      public boolean hasSceneViewport() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <pre>
       * An optional viewport to which this set of annotations are intended to be
       * rendered. If left unset, the annotations are meant to render overtop of the
       * existing camera feed in the "main" viewport. If set, the annotations are to
       * be rendered in a separate viewport.
       * </pre>
       *
       * <code>optional .mediapipe.RenderViewport scene_viewport = 3;</code>
       */
      public mediapipe.RenderDataOuterClass.RenderViewport getSceneViewport() {
        if (sceneViewportBuilder_ == null) {
          return sceneViewport_ == null ? mediapipe.RenderDataOuterClass.RenderViewport.getDefaultInstance() : sceneViewport_;
        } else {
          return sceneViewportBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * An optional viewport to which this set of annotations are intended to be
       * rendered. If left unset, the annotations are meant to render overtop of the
       * existing camera feed in the "main" viewport. If set, the annotations are to
       * be rendered in a separate viewport.
       * </pre>
       *
       * <code>optional .mediapipe.RenderViewport scene_viewport = 3;</code>
       */
      public Builder setSceneViewport(mediapipe.RenderDataOuterClass.RenderViewport value) {
        if (sceneViewportBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          sceneViewport_ = value;
          onChanged();
        } else {
          sceneViewportBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <pre>
       * An optional viewport to which this set of annotations are intended to be
       * rendered. If left unset, the annotations are meant to render overtop of the
       * existing camera feed in the "main" viewport. If set, the annotations are to
       * be rendered in a separate viewport.
       * </pre>
       *
       * <code>optional .mediapipe.RenderViewport scene_viewport = 3;</code>
       */
      public Builder setSceneViewport(
          mediapipe.RenderDataOuterClass.RenderViewport.Builder builderForValue) {
        if (sceneViewportBuilder_ == null) {
          sceneViewport_ = builderForValue.build();
          onChanged();
        } else {
          sceneViewportBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <pre>
       * An optional viewport to which this set of annotations are intended to be
       * rendered. If left unset, the annotations are meant to render overtop of the
       * existing camera feed in the "main" viewport. If set, the annotations are to
       * be rendered in a separate viewport.
       * </pre>
       *
       * <code>optional .mediapipe.RenderViewport scene_viewport = 3;</code>
       */
      public Builder mergeSceneViewport(mediapipe.RenderDataOuterClass.RenderViewport value) {
        if (sceneViewportBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004) &&
              sceneViewport_ != null &&
              sceneViewport_ != mediapipe.RenderDataOuterClass.RenderViewport.getDefaultInstance()) {
            sceneViewport_ =
              mediapipe.RenderDataOuterClass.RenderViewport.newBuilder(sceneViewport_).mergeFrom(value).buildPartial();
          } else {
            sceneViewport_ = value;
          }
          onChanged();
        } else {
          sceneViewportBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <pre>
       * An optional viewport to which this set of annotations are intended to be
       * rendered. If left unset, the annotations are meant to render overtop of the
       * existing camera feed in the "main" viewport. If set, the annotations are to
       * be rendered in a separate viewport.
       * </pre>
       *
       * <code>optional .mediapipe.RenderViewport scene_viewport = 3;</code>
       */
      public Builder clearSceneViewport() {
        if (sceneViewportBuilder_ == null) {
          sceneViewport_ = null;
          onChanged();
        } else {
          sceneViewportBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      /**
       * <pre>
       * An optional viewport to which this set of annotations are intended to be
       * rendered. If left unset, the annotations are meant to render overtop of the
       * existing camera feed in the "main" viewport. If set, the annotations are to
       * be rendered in a separate viewport.
       * </pre>
       *
       * <code>optional .mediapipe.RenderViewport scene_viewport = 3;</code>
       */
      public mediapipe.RenderDataOuterClass.RenderViewport.Builder getSceneViewportBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getSceneViewportFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * An optional viewport to which this set of annotations are intended to be
       * rendered. If left unset, the annotations are meant to render overtop of the
       * existing camera feed in the "main" viewport. If set, the annotations are to
       * be rendered in a separate viewport.
       * </pre>
       *
       * <code>optional .mediapipe.RenderViewport scene_viewport = 3;</code>
       */
      public mediapipe.RenderDataOuterClass.RenderViewportOrBuilder getSceneViewportOrBuilder() {
        if (sceneViewportBuilder_ != null) {
          return sceneViewportBuilder_.getMessageOrBuilder();
        } else {
          return sceneViewport_ == null ?
              mediapipe.RenderDataOuterClass.RenderViewport.getDefaultInstance() : sceneViewport_;
        }
      }
      /**
       * <pre>
       * An optional viewport to which this set of annotations are intended to be
       * rendered. If left unset, the annotations are meant to render overtop of the
       * existing camera feed in the "main" viewport. If set, the annotations are to
       * be rendered in a separate viewport.
       * </pre>
       *
       * <code>optional .mediapipe.RenderViewport scene_viewport = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          mediapipe.RenderDataOuterClass.RenderViewport, mediapipe.RenderDataOuterClass.RenderViewport.Builder, mediapipe.RenderDataOuterClass.RenderViewportOrBuilder> 
          getSceneViewportFieldBuilder() {
        if (sceneViewportBuilder_ == null) {
          sceneViewportBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              mediapipe.RenderDataOuterClass.RenderViewport, mediapipe.RenderDataOuterClass.RenderViewport.Builder, mediapipe.RenderDataOuterClass.RenderViewportOrBuilder>(
                  getSceneViewport(),
                  getParentForChildren(),
                  isClean());
          sceneViewport_ = null;
        }
        return sceneViewportBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:mediapipe.RenderData)
    }

    // @@protoc_insertion_point(class_scope:mediapipe.RenderData)
    private static final mediapipe.RenderDataOuterClass.RenderData DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new mediapipe.RenderDataOuterClass.RenderData();
    }

    public static mediapipe.RenderDataOuterClass.RenderData getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<RenderData>
        PARSER = new com.google.protobuf.AbstractParser<RenderData>() {
      public RenderData parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new RenderData(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<RenderData> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<RenderData> getParserForType() {
      return PARSER;
    }

    public mediapipe.RenderDataOuterClass.RenderData getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface RenderAnnotationOrBuilder extends
      // @@protoc_insertion_point(interface_extends:mediapipe.RenderAnnotation)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional .mediapipe.RenderAnnotation.Rectangle rectangle = 1;</code>
     */
    boolean hasRectangle();
    /**
     * <code>optional .mediapipe.RenderAnnotation.Rectangle rectangle = 1;</code>
     */
    mediapipe.RenderDataOuterClass.RenderAnnotation.Rectangle getRectangle();
    /**
     * <code>optional .mediapipe.RenderAnnotation.Rectangle rectangle = 1;</code>
     */
    mediapipe.RenderDataOuterClass.RenderAnnotation.RectangleOrBuilder getRectangleOrBuilder();

    /**
     * <code>optional .mediapipe.RenderAnnotation.FilledRectangle filled_rectangle = 2;</code>
     */
    boolean hasFilledRectangle();
    /**
     * <code>optional .mediapipe.RenderAnnotation.FilledRectangle filled_rectangle = 2;</code>
     */
    mediapipe.RenderDataOuterClass.RenderAnnotation.FilledRectangle getFilledRectangle();
    /**
     * <code>optional .mediapipe.RenderAnnotation.FilledRectangle filled_rectangle = 2;</code>
     */
    mediapipe.RenderDataOuterClass.RenderAnnotation.FilledRectangleOrBuilder getFilledRectangleOrBuilder();

    /**
     * <code>optional .mediapipe.RenderAnnotation.Oval oval = 3;</code>
     */
    boolean hasOval();
    /**
     * <code>optional .mediapipe.RenderAnnotation.Oval oval = 3;</code>
     */
    mediapipe.RenderDataOuterClass.RenderAnnotation.Oval getOval();
    /**
     * <code>optional .mediapipe.RenderAnnotation.Oval oval = 3;</code>
     */
    mediapipe.RenderDataOuterClass.RenderAnnotation.OvalOrBuilder getOvalOrBuilder();

    /**
     * <code>optional .mediapipe.RenderAnnotation.FilledOval filled_oval = 4;</code>
     */
    boolean hasFilledOval();
    /**
     * <code>optional .mediapipe.RenderAnnotation.FilledOval filled_oval = 4;</code>
     */
    mediapipe.RenderDataOuterClass.RenderAnnotation.FilledOval getFilledOval();
    /**
     * <code>optional .mediapipe.RenderAnnotation.FilledOval filled_oval = 4;</code>
     */
    mediapipe.RenderDataOuterClass.RenderAnnotation.FilledOvalOrBuilder getFilledOvalOrBuilder();

    /**
     * <code>optional .mediapipe.RenderAnnotation.Point point = 5;</code>
     */
    boolean hasPoint();
    /**
     * <code>optional .mediapipe.RenderAnnotation.Point point = 5;</code>
     */
    mediapipe.RenderDataOuterClass.RenderAnnotation.Point getPoint();
    /**
     * <code>optional .mediapipe.RenderAnnotation.Point point = 5;</code>
     */
    mediapipe.RenderDataOuterClass.RenderAnnotation.PointOrBuilder getPointOrBuilder();

    /**
     * <code>optional .mediapipe.RenderAnnotation.Line line = 6;</code>
     */
    boolean hasLine();
    /**
     * <code>optional .mediapipe.RenderAnnotation.Line line = 6;</code>
     */
    mediapipe.RenderDataOuterClass.RenderAnnotation.Line getLine();
    /**
     * <code>optional .mediapipe.RenderAnnotation.Line line = 6;</code>
     */
    mediapipe.RenderDataOuterClass.RenderAnnotation.LineOrBuilder getLineOrBuilder();

    /**
     * <code>optional .mediapipe.RenderAnnotation.Arrow arrow = 7;</code>
     */
    boolean hasArrow();
    /**
     * <code>optional .mediapipe.RenderAnnotation.Arrow arrow = 7;</code>
     */
    mediapipe.RenderDataOuterClass.RenderAnnotation.Arrow getArrow();
    /**
     * <code>optional .mediapipe.RenderAnnotation.Arrow arrow = 7;</code>
     */
    mediapipe.RenderDataOuterClass.RenderAnnotation.ArrowOrBuilder getArrowOrBuilder();

    /**
     * <code>optional .mediapipe.RenderAnnotation.Text text = 8;</code>
     */
    boolean hasText();
    /**
     * <code>optional .mediapipe.RenderAnnotation.Text text = 8;</code>
     */
    mediapipe.RenderDataOuterClass.RenderAnnotation.Text getText();
    /**
     * <code>optional .mediapipe.RenderAnnotation.Text text = 8;</code>
     */
    mediapipe.RenderDataOuterClass.RenderAnnotation.TextOrBuilder getTextOrBuilder();

    /**
     * <code>optional .mediapipe.RenderAnnotation.RoundedRectangle rounded_rectangle = 9;</code>
     */
    boolean hasRoundedRectangle();
    /**
     * <code>optional .mediapipe.RenderAnnotation.RoundedRectangle rounded_rectangle = 9;</code>
     */
    mediapipe.RenderDataOuterClass.RenderAnnotation.RoundedRectangle getRoundedRectangle();
    /**
     * <code>optional .mediapipe.RenderAnnotation.RoundedRectangle rounded_rectangle = 9;</code>
     */
    mediapipe.RenderDataOuterClass.RenderAnnotation.RoundedRectangleOrBuilder getRoundedRectangleOrBuilder();

    /**
     * <code>optional .mediapipe.RenderAnnotation.FilledRoundedRectangle filled_rounded_rectangle = 10;</code>
     */
    boolean hasFilledRoundedRectangle();
    /**
     * <code>optional .mediapipe.RenderAnnotation.FilledRoundedRectangle filled_rounded_rectangle = 10;</code>
     */
    mediapipe.RenderDataOuterClass.RenderAnnotation.FilledRoundedRectangle getFilledRoundedRectangle();
    /**
     * <code>optional .mediapipe.RenderAnnotation.FilledRoundedRectangle filled_rounded_rectangle = 10;</code>
     */
    mediapipe.RenderDataOuterClass.RenderAnnotation.FilledRoundedRectangleOrBuilder getFilledRoundedRectangleOrBuilder();

    /**
     * <code>optional .mediapipe.RenderAnnotation.GradientLine gradient_line = 14;</code>
     */
    boolean hasGradientLine();
    /**
     * <code>optional .mediapipe.RenderAnnotation.GradientLine gradient_line = 14;</code>
     */
    mediapipe.RenderDataOuterClass.RenderAnnotation.GradientLine getGradientLine();
    /**
     * <code>optional .mediapipe.RenderAnnotation.GradientLine gradient_line = 14;</code>
     */
    mediapipe.RenderDataOuterClass.RenderAnnotation.GradientLineOrBuilder getGradientLineOrBuilder();

    /**
     * <pre>
     * Thickness for drawing the annotation.
     * </pre>
     *
     * <code>optional double thickness = 11 [default = 1];</code>
     */
    boolean hasThickness();
    /**
     * <pre>
     * Thickness for drawing the annotation.
     * </pre>
     *
     * <code>optional double thickness = 11 [default = 1];</code>
     */
    double getThickness();

    /**
     * <pre>
     * Color for drawing the annotation. For FilledRectangle and FilledOval, this
     * color is used only for drawing the boundary.
     * </pre>
     *
     * <code>optional .mediapipe.Color color = 12;</code>
     */
    boolean hasColor();
    /**
     * <pre>
     * Color for drawing the annotation. For FilledRectangle and FilledOval, this
     * color is used only for drawing the boundary.
     * </pre>
     *
     * <code>optional .mediapipe.Color color = 12;</code>
     */
    mediapipe.ColorOuterClass.Color getColor();
    /**
     * <pre>
     * Color for drawing the annotation. For FilledRectangle and FilledOval, this
     * color is used only for drawing the boundary.
     * </pre>
     *
     * <code>optional .mediapipe.Color color = 12;</code>
     */
    mediapipe.ColorOuterClass.ColorOrBuilder getColorOrBuilder();

    /**
     * <pre>
     * A hint regarding what this annotation is for. Should be unique across all
     * annotation types.
     * </pre>
     *
     * <code>optional string scene_tag = 13;</code>
     */
    boolean hasSceneTag();
    /**
     * <pre>
     * A hint regarding what this annotation is for. Should be unique across all
     * annotation types.
     * </pre>
     *
     * <code>optional string scene_tag = 13;</code>
     */
    java.lang.String getSceneTag();
    /**
     * <pre>
     * A hint regarding what this annotation is for. Should be unique across all
     * annotation types.
     * </pre>
     *
     * <code>optional string scene_tag = 13;</code>
     */
    com.google.protobuf.ByteString
        getSceneTagBytes();

    public mediapipe.RenderDataOuterClass.RenderAnnotation.DataCase getDataCase();
  }
  /**
   * Protobuf type {@code mediapipe.RenderAnnotation}
   */
  public  static final class RenderAnnotation extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:mediapipe.RenderAnnotation)
      RenderAnnotationOrBuilder {
    // Use RenderAnnotation.newBuilder() to construct.
    private RenderAnnotation(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private RenderAnnotation() {
      thickness_ = 1D;
      sceneTag_ = "";
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private RenderAnnotation(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              mediapipe.RenderDataOuterClass.RenderAnnotation.Rectangle.Builder subBuilder = null;
              if (dataCase_ == 1) {
                subBuilder = ((mediapipe.RenderDataOuterClass.RenderAnnotation.Rectangle) data_).toBuilder();
              }
              data_ =
                  input.readMessage(mediapipe.RenderDataOuterClass.RenderAnnotation.Rectangle.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((mediapipe.RenderDataOuterClass.RenderAnnotation.Rectangle) data_);
                data_ = subBuilder.buildPartial();
              }
              dataCase_ = 1;
              break;
            }
            case 18: {
              mediapipe.RenderDataOuterClass.RenderAnnotation.FilledRectangle.Builder subBuilder = null;
              if (dataCase_ == 2) {
                subBuilder = ((mediapipe.RenderDataOuterClass.RenderAnnotation.FilledRectangle) data_).toBuilder();
              }
              data_ =
                  input.readMessage(mediapipe.RenderDataOuterClass.RenderAnnotation.FilledRectangle.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((mediapipe.RenderDataOuterClass.RenderAnnotation.FilledRectangle) data_);
                data_ = subBuilder.buildPartial();
              }
              dataCase_ = 2;
              break;
            }
            case 26: {
              mediapipe.RenderDataOuterClass.RenderAnnotation.Oval.Builder subBuilder = null;
              if (dataCase_ == 3) {
                subBuilder = ((mediapipe.RenderDataOuterClass.RenderAnnotation.Oval) data_).toBuilder();
              }
              data_ =
                  input.readMessage(mediapipe.RenderDataOuterClass.RenderAnnotation.Oval.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((mediapipe.RenderDataOuterClass.RenderAnnotation.Oval) data_);
                data_ = subBuilder.buildPartial();
              }
              dataCase_ = 3;
              break;
            }
            case 34: {
              mediapipe.RenderDataOuterClass.RenderAnnotation.FilledOval.Builder subBuilder = null;
              if (dataCase_ == 4) {
                subBuilder = ((mediapipe.RenderDataOuterClass.RenderAnnotation.FilledOval) data_).toBuilder();
              }
              data_ =
                  input.readMessage(mediapipe.RenderDataOuterClass.RenderAnnotation.FilledOval.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((mediapipe.RenderDataOuterClass.RenderAnnotation.FilledOval) data_);
                data_ = subBuilder.buildPartial();
              }
              dataCase_ = 4;
              break;
            }
            case 42: {
              mediapipe.RenderDataOuterClass.RenderAnnotation.Point.Builder subBuilder = null;
              if (dataCase_ == 5) {
                subBuilder = ((mediapipe.RenderDataOuterClass.RenderAnnotation.Point) data_).toBuilder();
              }
              data_ =
                  input.readMessage(mediapipe.RenderDataOuterClass.RenderAnnotation.Point.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((mediapipe.RenderDataOuterClass.RenderAnnotation.Point) data_);
                data_ = subBuilder.buildPartial();
              }
              dataCase_ = 5;
              break;
            }
            case 50: {
              mediapipe.RenderDataOuterClass.RenderAnnotation.Line.Builder subBuilder = null;
              if (dataCase_ == 6) {
                subBuilder = ((mediapipe.RenderDataOuterClass.RenderAnnotation.Line) data_).toBuilder();
              }
              data_ =
                  input.readMessage(mediapipe.RenderDataOuterClass.RenderAnnotation.Line.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((mediapipe.RenderDataOuterClass.RenderAnnotation.Line) data_);
                data_ = subBuilder.buildPartial();
              }
              dataCase_ = 6;
              break;
            }
            case 58: {
              mediapipe.RenderDataOuterClass.RenderAnnotation.Arrow.Builder subBuilder = null;
              if (dataCase_ == 7) {
                subBuilder = ((mediapipe.RenderDataOuterClass.RenderAnnotation.Arrow) data_).toBuilder();
              }
              data_ =
                  input.readMessage(mediapipe.RenderDataOuterClass.RenderAnnotation.Arrow.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((mediapipe.RenderDataOuterClass.RenderAnnotation.Arrow) data_);
                data_ = subBuilder.buildPartial();
              }
              dataCase_ = 7;
              break;
            }
            case 66: {
              mediapipe.RenderDataOuterClass.RenderAnnotation.Text.Builder subBuilder = null;
              if (dataCase_ == 8) {
                subBuilder = ((mediapipe.RenderDataOuterClass.RenderAnnotation.Text) data_).toBuilder();
              }
              data_ =
                  input.readMessage(mediapipe.RenderDataOuterClass.RenderAnnotation.Text.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((mediapipe.RenderDataOuterClass.RenderAnnotation.Text) data_);
                data_ = subBuilder.buildPartial();
              }
              dataCase_ = 8;
              break;
            }
            case 74: {
              mediapipe.RenderDataOuterClass.RenderAnnotation.RoundedRectangle.Builder subBuilder = null;
              if (dataCase_ == 9) {
                subBuilder = ((mediapipe.RenderDataOuterClass.RenderAnnotation.RoundedRectangle) data_).toBuilder();
              }
              data_ =
                  input.readMessage(mediapipe.RenderDataOuterClass.RenderAnnotation.RoundedRectangle.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((mediapipe.RenderDataOuterClass.RenderAnnotation.RoundedRectangle) data_);
                data_ = subBuilder.buildPartial();
              }
              dataCase_ = 9;
              break;
            }
            case 82: {
              mediapipe.RenderDataOuterClass.RenderAnnotation.FilledRoundedRectangle.Builder subBuilder = null;
              if (dataCase_ == 10) {
                subBuilder = ((mediapipe.RenderDataOuterClass.RenderAnnotation.FilledRoundedRectangle) data_).toBuilder();
              }
              data_ =
                  input.readMessage(mediapipe.RenderDataOuterClass.RenderAnnotation.FilledRoundedRectangle.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((mediapipe.RenderDataOuterClass.RenderAnnotation.FilledRoundedRectangle) data_);
                data_ = subBuilder.buildPartial();
              }
              dataCase_ = 10;
              break;
            }
            case 89: {
              bitField0_ |= 0x00000800;
              thickness_ = input.readDouble();
              break;
            }
            case 98: {
              mediapipe.ColorOuterClass.Color.Builder subBuilder = null;
              if (((bitField0_ & 0x00001000) == 0x00001000)) {
                subBuilder = color_.toBuilder();
              }
              color_ = input.readMessage(mediapipe.ColorOuterClass.Color.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(color_);
                color_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00001000;
              break;
            }
            case 106: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00002000;
              sceneTag_ = bs;
              break;
            }
            case 114: {
              mediapipe.RenderDataOuterClass.RenderAnnotation.GradientLine.Builder subBuilder = null;
              if (dataCase_ == 14) {
                subBuilder = ((mediapipe.RenderDataOuterClass.RenderAnnotation.GradientLine) data_).toBuilder();
              }
              data_ =
                  input.readMessage(mediapipe.RenderDataOuterClass.RenderAnnotation.GradientLine.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((mediapipe.RenderDataOuterClass.RenderAnnotation.GradientLine) data_);
                data_ = subBuilder.buildPartial();
              }
              dataCase_ = 14;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return mediapipe.RenderDataOuterClass.internal_static_mediapipe_RenderAnnotation_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return mediapipe.RenderDataOuterClass.internal_static_mediapipe_RenderAnnotation_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              mediapipe.RenderDataOuterClass.RenderAnnotation.class, mediapipe.RenderDataOuterClass.RenderAnnotation.Builder.class);
    }

    public interface RectangleOrBuilder extends
        // @@protoc_insertion_point(interface_extends:mediapipe.RenderAnnotation.Rectangle)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <pre>
       * Left and top refer to the x and y coordinates of the top-left corner
       * of rectangle, whereas right and bottom refer to the x and y coordinates
       * of the bottom-right corner of rectangle.
       * </pre>
       *
       * <code>optional double left = 1;</code>
       */
      boolean hasLeft();
      /**
       * <pre>
       * Left and top refer to the x and y coordinates of the top-left corner
       * of rectangle, whereas right and bottom refer to the x and y coordinates
       * of the bottom-right corner of rectangle.
       * </pre>
       *
       * <code>optional double left = 1;</code>
       */
      double getLeft();

      /**
       * <code>optional double top = 2;</code>
       */
      boolean hasTop();
      /**
       * <code>optional double top = 2;</code>
       */
      double getTop();

      /**
       * <code>optional double right = 3;</code>
       */
      boolean hasRight();
      /**
       * <code>optional double right = 3;</code>
       */
      double getRight();

      /**
       * <code>optional double bottom = 4;</code>
       */
      boolean hasBottom();
      /**
       * <code>optional double bottom = 4;</code>
       */
      double getBottom();

      /**
       * <code>optional bool normalized = 5 [default = false];</code>
       */
      boolean hasNormalized();
      /**
       * <code>optional bool normalized = 5 [default = false];</code>
       */
      boolean getNormalized();

      /**
       * <pre>
       * Rotation in radians.
       * </pre>
       *
       * <code>optional double rotation = 6;</code>
       */
      boolean hasRotation();
      /**
       * <pre>
       * Rotation in radians.
       * </pre>
       *
       * <code>optional double rotation = 6;</code>
       */
      double getRotation();
    }
    /**
     * Protobuf type {@code mediapipe.RenderAnnotation.Rectangle}
     */
    public  static final class Rectangle extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:mediapipe.RenderAnnotation.Rectangle)
        RectangleOrBuilder {
      // Use Rectangle.newBuilder() to construct.
      private Rectangle(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private Rectangle() {
        left_ = 0D;
        top_ = 0D;
        right_ = 0D;
        bottom_ = 0D;
        normalized_ = false;
        rotation_ = 0D;
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private Rectangle(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 9: {
                bitField0_ |= 0x00000001;
                left_ = input.readDouble();
                break;
              }
              case 17: {
                bitField0_ |= 0x00000002;
                top_ = input.readDouble();
                break;
              }
              case 25: {
                bitField0_ |= 0x00000004;
                right_ = input.readDouble();
                break;
              }
              case 33: {
                bitField0_ |= 0x00000008;
                bottom_ = input.readDouble();
                break;
              }
              case 40: {
                bitField0_ |= 0x00000010;
                normalized_ = input.readBool();
                break;
              }
              case 49: {
                bitField0_ |= 0x00000020;
                rotation_ = input.readDouble();
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return mediapipe.RenderDataOuterClass.internal_static_mediapipe_RenderAnnotation_Rectangle_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return mediapipe.RenderDataOuterClass.internal_static_mediapipe_RenderAnnotation_Rectangle_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                mediapipe.RenderDataOuterClass.RenderAnnotation.Rectangle.class, mediapipe.RenderDataOuterClass.RenderAnnotation.Rectangle.Builder.class);
      }

      private int bitField0_;
      public static final int LEFT_FIELD_NUMBER = 1;
      private double left_;
      /**
       * <pre>
       * Left and top refer to the x and y coordinates of the top-left corner
       * of rectangle, whereas right and bottom refer to the x and y coordinates
       * of the bottom-right corner of rectangle.
       * </pre>
       *
       * <code>optional double left = 1;</code>
       */
      public boolean hasLeft() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <pre>
       * Left and top refer to the x and y coordinates of the top-left corner
       * of rectangle, whereas right and bottom refer to the x and y coordinates
       * of the bottom-right corner of rectangle.
       * </pre>
       *
       * <code>optional double left = 1;</code>
       */
      public double getLeft() {
        return left_;
      }

      public static final int TOP_FIELD_NUMBER = 2;
      private double top_;
      /**
       * <code>optional double top = 2;</code>
       */
      public boolean hasTop() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional double top = 2;</code>
       */
      public double getTop() {
        return top_;
      }

      public static final int RIGHT_FIELD_NUMBER = 3;
      private double right_;
      /**
       * <code>optional double right = 3;</code>
       */
      public boolean hasRight() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional double right = 3;</code>
       */
      public double getRight() {
        return right_;
      }

      public static final int BOTTOM_FIELD_NUMBER = 4;
      private double bottom_;
      /**
       * <code>optional double bottom = 4;</code>
       */
      public boolean hasBottom() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional double bottom = 4;</code>
       */
      public double getBottom() {
        return bottom_;
      }

      public static final int NORMALIZED_FIELD_NUMBER = 5;
      private boolean normalized_;
      /**
       * <code>optional bool normalized = 5 [default = false];</code>
       */
      public boolean hasNormalized() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional bool normalized = 5 [default = false];</code>
       */
      public boolean getNormalized() {
        return normalized_;
      }

      public static final int ROTATION_FIELD_NUMBER = 6;
      private double rotation_;
      /**
       * <pre>
       * Rotation in radians.
       * </pre>
       *
       * <code>optional double rotation = 6;</code>
       */
      public boolean hasRotation() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <pre>
       * Rotation in radians.
       * </pre>
       *
       * <code>optional double rotation = 6;</code>
       */
      public double getRotation() {
        return rotation_;
      }

      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeDouble(1, left_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeDouble(2, top_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          output.writeDouble(3, right_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          output.writeDouble(4, bottom_);
        }
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          output.writeBool(5, normalized_);
        }
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          output.writeDouble(6, rotation_);
        }
        unknownFields.writeTo(output);
      }

      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeDoubleSize(1, left_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeDoubleSize(2, top_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          size += com.google.protobuf.CodedOutputStream
            .computeDoubleSize(3, right_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          size += com.google.protobuf.CodedOutputStream
            .computeDoubleSize(4, bottom_);
        }
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBoolSize(5, normalized_);
        }
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          size += com.google.protobuf.CodedOutputStream
            .computeDoubleSize(6, rotation_);
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof mediapipe.RenderDataOuterClass.RenderAnnotation.Rectangle)) {
          return super.equals(obj);
        }
        mediapipe.RenderDataOuterClass.RenderAnnotation.Rectangle other = (mediapipe.RenderDataOuterClass.RenderAnnotation.Rectangle) obj;

        boolean result = true;
        result = result && (hasLeft() == other.hasLeft());
        if (hasLeft()) {
          result = result && (
              java.lang.Double.doubleToLongBits(getLeft())
              == java.lang.Double.doubleToLongBits(
                  other.getLeft()));
        }
        result = result && (hasTop() == other.hasTop());
        if (hasTop()) {
          result = result && (
              java.lang.Double.doubleToLongBits(getTop())
              == java.lang.Double.doubleToLongBits(
                  other.getTop()));
        }
        result = result && (hasRight() == other.hasRight());
        if (hasRight()) {
          result = result && (
              java.lang.Double.doubleToLongBits(getRight())
              == java.lang.Double.doubleToLongBits(
                  other.getRight()));
        }
        result = result && (hasBottom() == other.hasBottom());
        if (hasBottom()) {
          result = result && (
              java.lang.Double.doubleToLongBits(getBottom())
              == java.lang.Double.doubleToLongBits(
                  other.getBottom()));
        }
        result = result && (hasNormalized() == other.hasNormalized());
        if (hasNormalized()) {
          result = result && (getNormalized()
              == other.getNormalized());
        }
        result = result && (hasRotation() == other.hasRotation());
        if (hasRotation()) {
          result = result && (
              java.lang.Double.doubleToLongBits(getRotation())
              == java.lang.Double.doubleToLongBits(
                  other.getRotation()));
        }
        result = result && unknownFields.equals(other.unknownFields);
        return result;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptorForType().hashCode();
        if (hasLeft()) {
          hash = (37 * hash) + LEFT_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
              java.lang.Double.doubleToLongBits(getLeft()));
        }
        if (hasTop()) {
          hash = (37 * hash) + TOP_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
              java.lang.Double.doubleToLongBits(getTop()));
        }
        if (hasRight()) {
          hash = (37 * hash) + RIGHT_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
              java.lang.Double.doubleToLongBits(getRight()));
        }
        if (hasBottom()) {
          hash = (37 * hash) + BOTTOM_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
              java.lang.Double.doubleToLongBits(getBottom()));
        }
        if (hasNormalized()) {
          hash = (37 * hash) + NORMALIZED_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
              getNormalized());
        }
        if (hasRotation()) {
          hash = (37 * hash) + ROTATION_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
              java.lang.Double.doubleToLongBits(getRotation()));
        }
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static mediapipe.RenderDataOuterClass.RenderAnnotation.Rectangle parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static mediapipe.RenderDataOuterClass.RenderAnnotation.Rectangle parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static mediapipe.RenderDataOuterClass.RenderAnnotation.Rectangle parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static mediapipe.RenderDataOuterClass.RenderAnnotation.Rectangle parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static mediapipe.RenderDataOuterClass.RenderAnnotation.Rectangle parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static mediapipe.RenderDataOuterClass.RenderAnnotation.Rectangle parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static mediapipe.RenderDataOuterClass.RenderAnnotation.Rectangle parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static mediapipe.RenderDataOuterClass.RenderAnnotation.Rectangle parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static mediapipe.RenderDataOuterClass.RenderAnnotation.Rectangle parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static mediapipe.RenderDataOuterClass.RenderAnnotation.Rectangle parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(mediapipe.RenderDataOuterClass.RenderAnnotation.Rectangle prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code mediapipe.RenderAnnotation.Rectangle}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:mediapipe.RenderAnnotation.Rectangle)
          mediapipe.RenderDataOuterClass.RenderAnnotation.RectangleOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return mediapipe.RenderDataOuterClass.internal_static_mediapipe_RenderAnnotation_Rectangle_descriptor;
        }

        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return mediapipe.RenderDataOuterClass.internal_static_mediapipe_RenderAnnotation_Rectangle_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  mediapipe.RenderDataOuterClass.RenderAnnotation.Rectangle.class, mediapipe.RenderDataOuterClass.RenderAnnotation.Rectangle.Builder.class);
        }

        // Construct using mediapipe.RenderDataOuterClass.RenderAnnotation.Rectangle.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        public Builder clear() {
          super.clear();
          left_ = 0D;
          bitField0_ = (bitField0_ & ~0x00000001);
          top_ = 0D;
          bitField0_ = (bitField0_ & ~0x00000002);
          right_ = 0D;
          bitField0_ = (bitField0_ & ~0x00000004);
          bottom_ = 0D;
          bitField0_ = (bitField0_ & ~0x00000008);
          normalized_ = false;
          bitField0_ = (bitField0_ & ~0x00000010);
          rotation_ = 0D;
          bitField0_ = (bitField0_ & ~0x00000020);
          return this;
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return mediapipe.RenderDataOuterClass.internal_static_mediapipe_RenderAnnotation_Rectangle_descriptor;
        }

        public mediapipe.RenderDataOuterClass.RenderAnnotation.Rectangle getDefaultInstanceForType() {
          return mediapipe.RenderDataOuterClass.RenderAnnotation.Rectangle.getDefaultInstance();
        }

        public mediapipe.RenderDataOuterClass.RenderAnnotation.Rectangle build() {
          mediapipe.RenderDataOuterClass.RenderAnnotation.Rectangle result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public mediapipe.RenderDataOuterClass.RenderAnnotation.Rectangle buildPartial() {
          mediapipe.RenderDataOuterClass.RenderAnnotation.Rectangle result = new mediapipe.RenderDataOuterClass.RenderAnnotation.Rectangle(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.left_ = left_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.top_ = top_;
          if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
            to_bitField0_ |= 0x00000004;
          }
          result.right_ = right_;
          if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
            to_bitField0_ |= 0x00000008;
          }
          result.bottom_ = bottom_;
          if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
            to_bitField0_ |= 0x00000010;
          }
          result.normalized_ = normalized_;
          if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
            to_bitField0_ |= 0x00000020;
          }
          result.rotation_ = rotation_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder clone() {
          return (Builder) super.clone();
        }
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            Object value) {
          return (Builder) super.setField(field, value);
        }
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return (Builder) super.clearField(field);
        }
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return (Builder) super.clearOneof(oneof);
        }
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, Object value) {
          return (Builder) super.setRepeatedField(field, index, value);
        }
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            Object value) {
          return (Builder) super.addRepeatedField(field, value);
        }
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof mediapipe.RenderDataOuterClass.RenderAnnotation.Rectangle) {
            return mergeFrom((mediapipe.RenderDataOuterClass.RenderAnnotation.Rectangle)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(mediapipe.RenderDataOuterClass.RenderAnnotation.Rectangle other) {
          if (other == mediapipe.RenderDataOuterClass.RenderAnnotation.Rectangle.getDefaultInstance()) return this;
          if (other.hasLeft()) {
            setLeft(other.getLeft());
          }
          if (other.hasTop()) {
            setTop(other.getTop());
          }
          if (other.hasRight()) {
            setRight(other.getRight());
          }
          if (other.hasBottom()) {
            setBottom(other.getBottom());
          }
          if (other.hasNormalized()) {
            setNormalized(other.getNormalized());
          }
          if (other.hasRotation()) {
            setRotation(other.getRotation());
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          mediapipe.RenderDataOuterClass.RenderAnnotation.Rectangle parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (mediapipe.RenderDataOuterClass.RenderAnnotation.Rectangle) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private double left_ ;
        /**
         * <pre>
         * Left and top refer to the x and y coordinates of the top-left corner
         * of rectangle, whereas right and bottom refer to the x and y coordinates
         * of the bottom-right corner of rectangle.
         * </pre>
         *
         * <code>optional double left = 1;</code>
         */
        public boolean hasLeft() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <pre>
         * Left and top refer to the x and y coordinates of the top-left corner
         * of rectangle, whereas right and bottom refer to the x and y coordinates
         * of the bottom-right corner of rectangle.
         * </pre>
         *
         * <code>optional double left = 1;</code>
         */
        public double getLeft() {
          return left_;
        }
        /**
         * <pre>
         * Left and top refer to the x and y coordinates of the top-left corner
         * of rectangle, whereas right and bottom refer to the x and y coordinates
         * of the bottom-right corner of rectangle.
         * </pre>
         *
         * <code>optional double left = 1;</code>
         */
        public Builder setLeft(double value) {
          bitField0_ |= 0x00000001;
          left_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Left and top refer to the x and y coordinates of the top-left corner
         * of rectangle, whereas right and bottom refer to the x and y coordinates
         * of the bottom-right corner of rectangle.
         * </pre>
         *
         * <code>optional double left = 1;</code>
         */
        public Builder clearLeft() {
          bitField0_ = (bitField0_ & ~0x00000001);
          left_ = 0D;
          onChanged();
          return this;
        }

        private double top_ ;
        /**
         * <code>optional double top = 2;</code>
         */
        public boolean hasTop() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>optional double top = 2;</code>
         */
        public double getTop() {
          return top_;
        }
        /**
         * <code>optional double top = 2;</code>
         */
        public Builder setTop(double value) {
          bitField0_ |= 0x00000002;
          top_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional double top = 2;</code>
         */
        public Builder clearTop() {
          bitField0_ = (bitField0_ & ~0x00000002);
          top_ = 0D;
          onChanged();
          return this;
        }

        private double right_ ;
        /**
         * <code>optional double right = 3;</code>
         */
        public boolean hasRight() {
          return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        /**
         * <code>optional double right = 3;</code>
         */
        public double getRight() {
          return right_;
        }
        /**
         * <code>optional double right = 3;</code>
         */
        public Builder setRight(double value) {
          bitField0_ |= 0x00000004;
          right_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional double right = 3;</code>
         */
        public Builder clearRight() {
          bitField0_ = (bitField0_ & ~0x00000004);
          right_ = 0D;
          onChanged();
          return this;
        }

        private double bottom_ ;
        /**
         * <code>optional double bottom = 4;</code>
         */
        public boolean hasBottom() {
          return ((bitField0_ & 0x00000008) == 0x00000008);
        }
        /**
         * <code>optional double bottom = 4;</code>
         */
        public double getBottom() {
          return bottom_;
        }
        /**
         * <code>optional double bottom = 4;</code>
         */
        public Builder setBottom(double value) {
          bitField0_ |= 0x00000008;
          bottom_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional double bottom = 4;</code>
         */
        public Builder clearBottom() {
          bitField0_ = (bitField0_ & ~0x00000008);
          bottom_ = 0D;
          onChanged();
          return this;
        }

        private boolean normalized_ ;
        /**
         * <code>optional bool normalized = 5 [default = false];</code>
         */
        public boolean hasNormalized() {
          return ((bitField0_ & 0x00000010) == 0x00000010);
        }
        /**
         * <code>optional bool normalized = 5 [default = false];</code>
         */
        public boolean getNormalized() {
          return normalized_;
        }
        /**
         * <code>optional bool normalized = 5 [default = false];</code>
         */
        public Builder setNormalized(boolean value) {
          bitField0_ |= 0x00000010;
          normalized_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional bool normalized = 5 [default = false];</code>
         */
        public Builder clearNormalized() {
          bitField0_ = (bitField0_ & ~0x00000010);
          normalized_ = false;
          onChanged();
          return this;
        }

        private double rotation_ ;
        /**
         * <pre>
         * Rotation in radians.
         * </pre>
         *
         * <code>optional double rotation = 6;</code>
         */
        public boolean hasRotation() {
          return ((bitField0_ & 0x00000020) == 0x00000020);
        }
        /**
         * <pre>
         * Rotation in radians.
         * </pre>
         *
         * <code>optional double rotation = 6;</code>
         */
        public double getRotation() {
          return rotation_;
        }
        /**
         * <pre>
         * Rotation in radians.
         * </pre>
         *
         * <code>optional double rotation = 6;</code>
         */
        public Builder setRotation(double value) {
          bitField0_ |= 0x00000020;
          rotation_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Rotation in radians.
         * </pre>
         *
         * <code>optional double rotation = 6;</code>
         */
        public Builder clearRotation() {
          bitField0_ = (bitField0_ & ~0x00000020);
          rotation_ = 0D;
          onChanged();
          return this;
        }
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:mediapipe.RenderAnnotation.Rectangle)
      }

      // @@protoc_insertion_point(class_scope:mediapipe.RenderAnnotation.Rectangle)
      private static final mediapipe.RenderDataOuterClass.RenderAnnotation.Rectangle DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new mediapipe.RenderDataOuterClass.RenderAnnotation.Rectangle();
      }

      public static mediapipe.RenderDataOuterClass.RenderAnnotation.Rectangle getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      @java.lang.Deprecated public static final com.google.protobuf.Parser<Rectangle>
          PARSER = new com.google.protobuf.AbstractParser<Rectangle>() {
        public Rectangle parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
            return new Rectangle(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<Rectangle> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<Rectangle> getParserForType() {
        return PARSER;
      }

      public mediapipe.RenderDataOuterClass.RenderAnnotation.Rectangle getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface FilledRectangleOrBuilder extends
        // @@protoc_insertion_point(interface_extends:mediapipe.RenderAnnotation.FilledRectangle)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional .mediapipe.RenderAnnotation.Rectangle rectangle = 1;</code>
       */
      boolean hasRectangle();
      /**
       * <code>optional .mediapipe.RenderAnnotation.Rectangle rectangle = 1;</code>
       */
      mediapipe.RenderDataOuterClass.RenderAnnotation.Rectangle getRectangle();
      /**
       * <code>optional .mediapipe.RenderAnnotation.Rectangle rectangle = 1;</code>
       */
      mediapipe.RenderDataOuterClass.RenderAnnotation.RectangleOrBuilder getRectangleOrBuilder();

      /**
       * <pre>
       * Color to fill in the rectangle.
       * </pre>
       *
       * <code>optional .mediapipe.Color fill_color = 2;</code>
       */
      boolean hasFillColor();
      /**
       * <pre>
       * Color to fill in the rectangle.
       * </pre>
       *
       * <code>optional .mediapipe.Color fill_color = 2;</code>
       */
      mediapipe.ColorOuterClass.Color getFillColor();
      /**
       * <pre>
       * Color to fill in the rectangle.
       * </pre>
       *
       * <code>optional .mediapipe.Color fill_color = 2;</code>
       */
      mediapipe.ColorOuterClass.ColorOrBuilder getFillColorOrBuilder();
    }
    /**
     * Protobuf type {@code mediapipe.RenderAnnotation.FilledRectangle}
     */
    public  static final class FilledRectangle extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:mediapipe.RenderAnnotation.FilledRectangle)
        FilledRectangleOrBuilder {
      // Use FilledRectangle.newBuilder() to construct.
      private FilledRectangle(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private FilledRectangle() {
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private FilledRectangle(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 10: {
                mediapipe.RenderDataOuterClass.RenderAnnotation.Rectangle.Builder subBuilder = null;
                if (((bitField0_ & 0x00000001) == 0x00000001)) {
                  subBuilder = rectangle_.toBuilder();
                }
                rectangle_ = input.readMessage(mediapipe.RenderDataOuterClass.RenderAnnotation.Rectangle.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(rectangle_);
                  rectangle_ = subBuilder.buildPartial();
                }
                bitField0_ |= 0x00000001;
                break;
              }
              case 18: {
                mediapipe.ColorOuterClass.Color.Builder subBuilder = null;
                if (((bitField0_ & 0x00000002) == 0x00000002)) {
                  subBuilder = fillColor_.toBuilder();
                }
                fillColor_ = input.readMessage(mediapipe.ColorOuterClass.Color.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(fillColor_);
                  fillColor_ = subBuilder.buildPartial();
                }
                bitField0_ |= 0x00000002;
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return mediapipe.RenderDataOuterClass.internal_static_mediapipe_RenderAnnotation_FilledRectangle_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return mediapipe.RenderDataOuterClass.internal_static_mediapipe_RenderAnnotation_FilledRectangle_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                mediapipe.RenderDataOuterClass.RenderAnnotation.FilledRectangle.class, mediapipe.RenderDataOuterClass.RenderAnnotation.FilledRectangle.Builder.class);
      }

      private int bitField0_;
      public static final int RECTANGLE_FIELD_NUMBER = 1;
      private mediapipe.RenderDataOuterClass.RenderAnnotation.Rectangle rectangle_;
      /**
       * <code>optional .mediapipe.RenderAnnotation.Rectangle rectangle = 1;</code>
       */
      public boolean hasRectangle() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .mediapipe.RenderAnnotation.Rectangle rectangle = 1;</code>
       */
      public mediapipe.RenderDataOuterClass.RenderAnnotation.Rectangle getRectangle() {
        return rectangle_ == null ? mediapipe.RenderDataOuterClass.RenderAnnotation.Rectangle.getDefaultInstance() : rectangle_;
      }
      /**
       * <code>optional .mediapipe.RenderAnnotation.Rectangle rectangle = 1;</code>
       */
      public mediapipe.RenderDataOuterClass.RenderAnnotation.RectangleOrBuilder getRectangleOrBuilder() {
        return rectangle_ == null ? mediapipe.RenderDataOuterClass.RenderAnnotation.Rectangle.getDefaultInstance() : rectangle_;
      }

      public static final int FILL_COLOR_FIELD_NUMBER = 2;
      private mediapipe.ColorOuterClass.Color fillColor_;
      /**
       * <pre>
       * Color to fill in the rectangle.
       * </pre>
       *
       * <code>optional .mediapipe.Color fill_color = 2;</code>
       */
      public boolean hasFillColor() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <pre>
       * Color to fill in the rectangle.
       * </pre>
       *
       * <code>optional .mediapipe.Color fill_color = 2;</code>
       */
      public mediapipe.ColorOuterClass.Color getFillColor() {
        return fillColor_ == null ? mediapipe.ColorOuterClass.Color.getDefaultInstance() : fillColor_;
      }
      /**
       * <pre>
       * Color to fill in the rectangle.
       * </pre>
       *
       * <code>optional .mediapipe.Color fill_color = 2;</code>
       */
      public mediapipe.ColorOuterClass.ColorOrBuilder getFillColorOrBuilder() {
        return fillColor_ == null ? mediapipe.ColorOuterClass.Color.getDefaultInstance() : fillColor_;
      }

      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeMessage(1, getRectangle());
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeMessage(2, getFillColor());
        }
        unknownFields.writeTo(output);
      }

      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(1, getRectangle());
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(2, getFillColor());
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof mediapipe.RenderDataOuterClass.RenderAnnotation.FilledRectangle)) {
          return super.equals(obj);
        }
        mediapipe.RenderDataOuterClass.RenderAnnotation.FilledRectangle other = (mediapipe.RenderDataOuterClass.RenderAnnotation.FilledRectangle) obj;

        boolean result = true;
        result = result && (hasRectangle() == other.hasRectangle());
        if (hasRectangle()) {
          result = result && getRectangle()
              .equals(other.getRectangle());
        }
        result = result && (hasFillColor() == other.hasFillColor());
        if (hasFillColor()) {
          result = result && getFillColor()
              .equals(other.getFillColor());
        }
        result = result && unknownFields.equals(other.unknownFields);
        return result;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptorForType().hashCode();
        if (hasRectangle()) {
          hash = (37 * hash) + RECTANGLE_FIELD_NUMBER;
          hash = (53 * hash) + getRectangle().hashCode();
        }
        if (hasFillColor()) {
          hash = (37 * hash) + FILL_COLOR_FIELD_NUMBER;
          hash = (53 * hash) + getFillColor().hashCode();
        }
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static mediapipe.RenderDataOuterClass.RenderAnnotation.FilledRectangle parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static mediapipe.RenderDataOuterClass.RenderAnnotation.FilledRectangle parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static mediapipe.RenderDataOuterClass.RenderAnnotation.FilledRectangle parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static mediapipe.RenderDataOuterClass.RenderAnnotation.FilledRectangle parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static mediapipe.RenderDataOuterClass.RenderAnnotation.FilledRectangle parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static mediapipe.RenderDataOuterClass.RenderAnnotation.FilledRectangle parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static mediapipe.RenderDataOuterClass.RenderAnnotation.FilledRectangle parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static mediapipe.RenderDataOuterClass.RenderAnnotation.FilledRectangle parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static mediapipe.RenderDataOuterClass.RenderAnnotation.FilledRectangle parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static mediapipe.RenderDataOuterClass.RenderAnnotation.FilledRectangle parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(mediapipe.RenderDataOuterClass.RenderAnnotation.FilledRectangle prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code mediapipe.RenderAnnotation.FilledRectangle}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:mediapipe.RenderAnnotation.FilledRectangle)
          mediapipe.RenderDataOuterClass.RenderAnnotation.FilledRectangleOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return mediapipe.RenderDataOuterClass.internal_static_mediapipe_RenderAnnotation_FilledRectangle_descriptor;
        }

        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return mediapipe.RenderDataOuterClass.internal_static_mediapipe_RenderAnnotation_FilledRectangle_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  mediapipe.RenderDataOuterClass.RenderAnnotation.FilledRectangle.class, mediapipe.RenderDataOuterClass.RenderAnnotation.FilledRectangle.Builder.class);
        }

        // Construct using mediapipe.RenderDataOuterClass.RenderAnnotation.FilledRectangle.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
            getRectangleFieldBuilder();
            getFillColorFieldBuilder();
          }
        }
        public Builder clear() {
          super.clear();
          if (rectangleBuilder_ == null) {
            rectangle_ = null;
          } else {
            rectangleBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000001);
          if (fillColorBuilder_ == null) {
            fillColor_ = null;
          } else {
            fillColorBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000002);
          return this;
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return mediapipe.RenderDataOuterClass.internal_static_mediapipe_RenderAnnotation_FilledRectangle_descriptor;
        }

        public mediapipe.RenderDataOuterClass.RenderAnnotation.FilledRectangle getDefaultInstanceForType() {
          return mediapipe.RenderDataOuterClass.RenderAnnotation.FilledRectangle.getDefaultInstance();
        }

        public mediapipe.RenderDataOuterClass.RenderAnnotation.FilledRectangle build() {
          mediapipe.RenderDataOuterClass.RenderAnnotation.FilledRectangle result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public mediapipe.RenderDataOuterClass.RenderAnnotation.FilledRectangle buildPartial() {
          mediapipe.RenderDataOuterClass.RenderAnnotation.FilledRectangle result = new mediapipe.RenderDataOuterClass.RenderAnnotation.FilledRectangle(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          if (rectangleBuilder_ == null) {
            result.rectangle_ = rectangle_;
          } else {
            result.rectangle_ = rectangleBuilder_.build();
          }
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          if (fillColorBuilder_ == null) {
            result.fillColor_ = fillColor_;
          } else {
            result.fillColor_ = fillColorBuilder_.build();
          }
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder clone() {
          return (Builder) super.clone();
        }
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            Object value) {
          return (Builder) super.setField(field, value);
        }
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return (Builder) super.clearField(field);
        }
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return (Builder) super.clearOneof(oneof);
        }
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, Object value) {
          return (Builder) super.setRepeatedField(field, index, value);
        }
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            Object value) {
          return (Builder) super.addRepeatedField(field, value);
        }
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof mediapipe.RenderDataOuterClass.RenderAnnotation.FilledRectangle) {
            return mergeFrom((mediapipe.RenderDataOuterClass.RenderAnnotation.FilledRectangle)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(mediapipe.RenderDataOuterClass.RenderAnnotation.FilledRectangle other) {
          if (other == mediapipe.RenderDataOuterClass.RenderAnnotation.FilledRectangle.getDefaultInstance()) return this;
          if (other.hasRectangle()) {
            mergeRectangle(other.getRectangle());
          }
          if (other.hasFillColor()) {
            mergeFillColor(other.getFillColor());
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          mediapipe.RenderDataOuterClass.RenderAnnotation.FilledRectangle parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (mediapipe.RenderDataOuterClass.RenderAnnotation.FilledRectangle) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private mediapipe.RenderDataOuterClass.RenderAnnotation.Rectangle rectangle_ = null;
        private com.google.protobuf.SingleFieldBuilderV3<
            mediapipe.RenderDataOuterClass.RenderAnnotation.Rectangle, mediapipe.RenderDataOuterClass.RenderAnnotation.Rectangle.Builder, mediapipe.RenderDataOuterClass.RenderAnnotation.RectangleOrBuilder> rectangleBuilder_;
        /**
         * <code>optional .mediapipe.RenderAnnotation.Rectangle rectangle = 1;</code>
         */
        public boolean hasRectangle() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional .mediapipe.RenderAnnotation.Rectangle rectangle = 1;</code>
         */
        public mediapipe.RenderDataOuterClass.RenderAnnotation.Rectangle getRectangle() {
          if (rectangleBuilder_ == null) {
            return rectangle_ == null ? mediapipe.RenderDataOuterClass.RenderAnnotation.Rectangle.getDefaultInstance() : rectangle_;
          } else {
            return rectangleBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .mediapipe.RenderAnnotation.Rectangle rectangle = 1;</code>
         */
        public Builder setRectangle(mediapipe.RenderDataOuterClass.RenderAnnotation.Rectangle value) {
          if (rectangleBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            rectangle_ = value;
            onChanged();
          } else {
            rectangleBuilder_.setMessage(value);
          }
          bitField0_ |= 0x00000001;
          return this;
        }
        /**
         * <code>optional .mediapipe.RenderAnnotation.Rectangle rectangle = 1;</code>
         */
        public Builder setRectangle(
            mediapipe.RenderDataOuterClass.RenderAnnotation.Rectangle.Builder builderForValue) {
          if (rectangleBuilder_ == null) {
            rectangle_ = builderForValue.build();
            onChanged();
          } else {
            rectangleBuilder_.setMessage(builderForValue.build());
          }
          bitField0_ |= 0x00000001;
          return this;
        }
        /**
         * <code>optional .mediapipe.RenderAnnotation.Rectangle rectangle = 1;</code>
         */
        public Builder mergeRectangle(mediapipe.RenderDataOuterClass.RenderAnnotation.Rectangle value) {
          if (rectangleBuilder_ == null) {
            if (((bitField0_ & 0x00000001) == 0x00000001) &&
                rectangle_ != null &&
                rectangle_ != mediapipe.RenderDataOuterClass.RenderAnnotation.Rectangle.getDefaultInstance()) {
              rectangle_ =
                mediapipe.RenderDataOuterClass.RenderAnnotation.Rectangle.newBuilder(rectangle_).mergeFrom(value).buildPartial();
            } else {
              rectangle_ = value;
            }
            onChanged();
          } else {
            rectangleBuilder_.mergeFrom(value);
          }
          bitField0_ |= 0x00000001;
          return this;
        }
        /**
         * <code>optional .mediapipe.RenderAnnotation.Rectangle rectangle = 1;</code>
         */
        public Builder clearRectangle() {
          if (rectangleBuilder_ == null) {
            rectangle_ = null;
            onChanged();
          } else {
            rectangleBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000001);
          return this;
        }
        /**
         * <code>optional .mediapipe.RenderAnnotation.Rectangle rectangle = 1;</code>
         */
        public mediapipe.RenderDataOuterClass.RenderAnnotation.Rectangle.Builder getRectangleBuilder() {
          bitField0_ |= 0x00000001;
          onChanged();
          return getRectangleFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .mediapipe.RenderAnnotation.Rectangle rectangle = 1;</code>
         */
        public mediapipe.RenderDataOuterClass.RenderAnnotation.RectangleOrBuilder getRectangleOrBuilder() {
          if (rectangleBuilder_ != null) {
            return rectangleBuilder_.getMessageOrBuilder();
          } else {
            return rectangle_ == null ?
                mediapipe.RenderDataOuterClass.RenderAnnotation.Rectangle.getDefaultInstance() : rectangle_;
          }
        }
        /**
         * <code>optional .mediapipe.RenderAnnotation.Rectangle rectangle = 1;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            mediapipe.RenderDataOuterClass.RenderAnnotation.Rectangle, mediapipe.RenderDataOuterClass.RenderAnnotation.Rectangle.Builder, mediapipe.RenderDataOuterClass.RenderAnnotation.RectangleOrBuilder> 
            getRectangleFieldBuilder() {
          if (rectangleBuilder_ == null) {
            rectangleBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                mediapipe.RenderDataOuterClass.RenderAnnotation.Rectangle, mediapipe.RenderDataOuterClass.RenderAnnotation.Rectangle.Builder, mediapipe.RenderDataOuterClass.RenderAnnotation.RectangleOrBuilder>(
                    getRectangle(),
                    getParentForChildren(),
                    isClean());
            rectangle_ = null;
          }
          return rectangleBuilder_;
        }

        private mediapipe.ColorOuterClass.Color fillColor_ = null;
        private com.google.protobuf.SingleFieldBuilderV3<
            mediapipe.ColorOuterClass.Color, mediapipe.ColorOuterClass.Color.Builder, mediapipe.ColorOuterClass.ColorOrBuilder> fillColorBuilder_;
        /**
         * <pre>
         * Color to fill in the rectangle.
         * </pre>
         *
         * <code>optional .mediapipe.Color fill_color = 2;</code>
         */
        public boolean hasFillColor() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <pre>
         * Color to fill in the rectangle.
         * </pre>
         *
         * <code>optional .mediapipe.Color fill_color = 2;</code>
         */
        public mediapipe.ColorOuterClass.Color getFillColor() {
          if (fillColorBuilder_ == null) {
            return fillColor_ == null ? mediapipe.ColorOuterClass.Color.getDefaultInstance() : fillColor_;
          } else {
            return fillColorBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * Color to fill in the rectangle.
         * </pre>
         *
         * <code>optional .mediapipe.Color fill_color = 2;</code>
         */
        public Builder setFillColor(mediapipe.ColorOuterClass.Color value) {
          if (fillColorBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            fillColor_ = value;
            onChanged();
          } else {
            fillColorBuilder_.setMessage(value);
          }
          bitField0_ |= 0x00000002;
          return this;
        }
        /**
         * <pre>
         * Color to fill in the rectangle.
         * </pre>
         *
         * <code>optional .mediapipe.Color fill_color = 2;</code>
         */
        public Builder setFillColor(
            mediapipe.ColorOuterClass.Color.Builder builderForValue) {
          if (fillColorBuilder_ == null) {
            fillColor_ = builderForValue.build();
            onChanged();
          } else {
            fillColorBuilder_.setMessage(builderForValue.build());
          }
          bitField0_ |= 0x00000002;
          return this;
        }
        /**
         * <pre>
         * Color to fill in the rectangle.
         * </pre>
         *
         * <code>optional .mediapipe.Color fill_color = 2;</code>
         */
        public Builder mergeFillColor(mediapipe.ColorOuterClass.Color value) {
          if (fillColorBuilder_ == null) {
            if (((bitField0_ & 0x00000002) == 0x00000002) &&
                fillColor_ != null &&
                fillColor_ != mediapipe.ColorOuterClass.Color.getDefaultInstance()) {
              fillColor_ =
                mediapipe.ColorOuterClass.Color.newBuilder(fillColor_).mergeFrom(value).buildPartial();
            } else {
              fillColor_ = value;
            }
            onChanged();
          } else {
            fillColorBuilder_.mergeFrom(value);
          }
          bitField0_ |= 0x00000002;
          return this;
        }
        /**
         * <pre>
         * Color to fill in the rectangle.
         * </pre>
         *
         * <code>optional .mediapipe.Color fill_color = 2;</code>
         */
        public Builder clearFillColor() {
          if (fillColorBuilder_ == null) {
            fillColor_ = null;
            onChanged();
          } else {
            fillColorBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000002);
          return this;
        }
        /**
         * <pre>
         * Color to fill in the rectangle.
         * </pre>
         *
         * <code>optional .mediapipe.Color fill_color = 2;</code>
         */
        public mediapipe.ColorOuterClass.Color.Builder getFillColorBuilder() {
          bitField0_ |= 0x00000002;
          onChanged();
          return getFillColorFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * Color to fill in the rectangle.
         * </pre>
         *
         * <code>optional .mediapipe.Color fill_color = 2;</code>
         */
        public mediapipe.ColorOuterClass.ColorOrBuilder getFillColorOrBuilder() {
          if (fillColorBuilder_ != null) {
            return fillColorBuilder_.getMessageOrBuilder();
          } else {
            return fillColor_ == null ?
                mediapipe.ColorOuterClass.Color.getDefaultInstance() : fillColor_;
          }
        }
        /**
         * <pre>
         * Color to fill in the rectangle.
         * </pre>
         *
         * <code>optional .mediapipe.Color fill_color = 2;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            mediapipe.ColorOuterClass.Color, mediapipe.ColorOuterClass.Color.Builder, mediapipe.ColorOuterClass.ColorOrBuilder> 
            getFillColorFieldBuilder() {
          if (fillColorBuilder_ == null) {
            fillColorBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                mediapipe.ColorOuterClass.Color, mediapipe.ColorOuterClass.Color.Builder, mediapipe.ColorOuterClass.ColorOrBuilder>(
                    getFillColor(),
                    getParentForChildren(),
                    isClean());
            fillColor_ = null;
          }
          return fillColorBuilder_;
        }
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:mediapipe.RenderAnnotation.FilledRectangle)
      }

      // @@protoc_insertion_point(class_scope:mediapipe.RenderAnnotation.FilledRectangle)
      private static final mediapipe.RenderDataOuterClass.RenderAnnotation.FilledRectangle DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new mediapipe.RenderDataOuterClass.RenderAnnotation.FilledRectangle();
      }

      public static mediapipe.RenderDataOuterClass.RenderAnnotation.FilledRectangle getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      @java.lang.Deprecated public static final com.google.protobuf.Parser<FilledRectangle>
          PARSER = new com.google.protobuf.AbstractParser<FilledRectangle>() {
        public FilledRectangle parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
            return new FilledRectangle(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<FilledRectangle> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<FilledRectangle> getParserForType() {
        return PARSER;
      }

      public mediapipe.RenderDataOuterClass.RenderAnnotation.FilledRectangle getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface RoundedRectangleOrBuilder extends
        // @@protoc_insertion_point(interface_extends:mediapipe.RenderAnnotation.RoundedRectangle)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <pre>
       * A rounded rectangle is specified by a rectangle and a corner radius to
       * round each corner by. A corner radius of 0 implies a standard non-rounded
       * rectangle (i.e. sharp edges) but as the radius increases proportionally
       * to the width and height of the overall rectangle size, the corners
       * increasingly round.
       * </pre>
       *
       * <code>optional .mediapipe.RenderAnnotation.Rectangle rectangle = 1;</code>
       */
      boolean hasRectangle();
      /**
       * <pre>
       * A rounded rectangle is specified by a rectangle and a corner radius to
       * round each corner by. A corner radius of 0 implies a standard non-rounded
       * rectangle (i.e. sharp edges) but as the radius increases proportionally
       * to the width and height of the overall rectangle size, the corners
       * increasingly round.
       * </pre>
       *
       * <code>optional .mediapipe.RenderAnnotation.Rectangle rectangle = 1;</code>
       */
      mediapipe.RenderDataOuterClass.RenderAnnotation.Rectangle getRectangle();
      /**
       * <pre>
       * A rounded rectangle is specified by a rectangle and a corner radius to
       * round each corner by. A corner radius of 0 implies a standard non-rounded
       * rectangle (i.e. sharp edges) but as the radius increases proportionally
       * to the width and height of the overall rectangle size, the corners
       * increasingly round.
       * </pre>
       *
       * <code>optional .mediapipe.RenderAnnotation.Rectangle rectangle = 1;</code>
       */
      mediapipe.RenderDataOuterClass.RenderAnnotation.RectangleOrBuilder getRectangleOrBuilder();

      /**
       * <pre>
       * The radius of the round corners.
       * </pre>
       *
       * <code>optional int32 corner_radius = 2 [default = 0];</code>
       */
      boolean hasCornerRadius();
      /**
       * <pre>
       * The radius of the round corners.
       * </pre>
       *
       * <code>optional int32 corner_radius = 2 [default = 0];</code>
       */
      int getCornerRadius();

      /**
       * <pre>
       * Use one of the following:
       * -1: a filled line (FILLED)
       *  4: a 4-connected line (LINE_4)
       *  8: a 8-connected line (LINE_8)
       * 16: an antialiased line (LINE_AA).
       * </pre>
       *
       * <code>optional int32 line_type = 3 [default = 4];</code>
       */
      boolean hasLineType();
      /**
       * <pre>
       * Use one of the following:
       * -1: a filled line (FILLED)
       *  4: a 4-connected line (LINE_4)
       *  8: a 8-connected line (LINE_8)
       * 16: an antialiased line (LINE_AA).
       * </pre>
       *
       * <code>optional int32 line_type = 3 [default = 4];</code>
       */
      int getLineType();
    }
    /**
     * Protobuf type {@code mediapipe.RenderAnnotation.RoundedRectangle}
     */
    public  static final class RoundedRectangle extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:mediapipe.RenderAnnotation.RoundedRectangle)
        RoundedRectangleOrBuilder {
      // Use RoundedRectangle.newBuilder() to construct.
      private RoundedRectangle(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private RoundedRectangle() {
        cornerRadius_ = 0;
        lineType_ = 4;
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private RoundedRectangle(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 10: {
                mediapipe.RenderDataOuterClass.RenderAnnotation.Rectangle.Builder subBuilder = null;
                if (((bitField0_ & 0x00000001) == 0x00000001)) {
                  subBuilder = rectangle_.toBuilder();
                }
                rectangle_ = input.readMessage(mediapipe.RenderDataOuterClass.RenderAnnotation.Rectangle.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(rectangle_);
                  rectangle_ = subBuilder.buildPartial();
                }
                bitField0_ |= 0x00000001;
                break;
              }
              case 16: {
                bitField0_ |= 0x00000002;
                cornerRadius_ = input.readInt32();
                break;
              }
              case 24: {
                bitField0_ |= 0x00000004;
                lineType_ = input.readInt32();
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return mediapipe.RenderDataOuterClass.internal_static_mediapipe_RenderAnnotation_RoundedRectangle_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return mediapipe.RenderDataOuterClass.internal_static_mediapipe_RenderAnnotation_RoundedRectangle_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                mediapipe.RenderDataOuterClass.RenderAnnotation.RoundedRectangle.class, mediapipe.RenderDataOuterClass.RenderAnnotation.RoundedRectangle.Builder.class);
      }

      private int bitField0_;
      public static final int RECTANGLE_FIELD_NUMBER = 1;
      private mediapipe.RenderDataOuterClass.RenderAnnotation.Rectangle rectangle_;
      /**
       * <pre>
       * A rounded rectangle is specified by a rectangle and a corner radius to
       * round each corner by. A corner radius of 0 implies a standard non-rounded
       * rectangle (i.e. sharp edges) but as the radius increases proportionally
       * to the width and height of the overall rectangle size, the corners
       * increasingly round.
       * </pre>
       *
       * <code>optional .mediapipe.RenderAnnotation.Rectangle rectangle = 1;</code>
       */
      public boolean hasRectangle() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <pre>
       * A rounded rectangle is specified by a rectangle and a corner radius to
       * round each corner by. A corner radius of 0 implies a standard non-rounded
       * rectangle (i.e. sharp edges) but as the radius increases proportionally
       * to the width and height of the overall rectangle size, the corners
       * increasingly round.
       * </pre>
       *
       * <code>optional .mediapipe.RenderAnnotation.Rectangle rectangle = 1;</code>
       */
      public mediapipe.RenderDataOuterClass.RenderAnnotation.Rectangle getRectangle() {
        return rectangle_ == null ? mediapipe.RenderDataOuterClass.RenderAnnotation.Rectangle.getDefaultInstance() : rectangle_;
      }
      /**
       * <pre>
       * A rounded rectangle is specified by a rectangle and a corner radius to
       * round each corner by. A corner radius of 0 implies a standard non-rounded
       * rectangle (i.e. sharp edges) but as the radius increases proportionally
       * to the width and height of the overall rectangle size, the corners
       * increasingly round.
       * </pre>
       *
       * <code>optional .mediapipe.RenderAnnotation.Rectangle rectangle = 1;</code>
       */
      public mediapipe.RenderDataOuterClass.RenderAnnotation.RectangleOrBuilder getRectangleOrBuilder() {
        return rectangle_ == null ? mediapipe.RenderDataOuterClass.RenderAnnotation.Rectangle.getDefaultInstance() : rectangle_;
      }

      public static final int CORNER_RADIUS_FIELD_NUMBER = 2;
      private int cornerRadius_;
      /**
       * <pre>
       * The radius of the round corners.
       * </pre>
       *
       * <code>optional int32 corner_radius = 2 [default = 0];</code>
       */
      public boolean hasCornerRadius() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <pre>
       * The radius of the round corners.
       * </pre>
       *
       * <code>optional int32 corner_radius = 2 [default = 0];</code>
       */
      public int getCornerRadius() {
        return cornerRadius_;
      }

      public static final int LINE_TYPE_FIELD_NUMBER = 3;
      private int lineType_;
      /**
       * <pre>
       * Use one of the following:
       * -1: a filled line (FILLED)
       *  4: a 4-connected line (LINE_4)
       *  8: a 8-connected line (LINE_8)
       * 16: an antialiased line (LINE_AA).
       * </pre>
       *
       * <code>optional int32 line_type = 3 [default = 4];</code>
       */
      public boolean hasLineType() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <pre>
       * Use one of the following:
       * -1: a filled line (FILLED)
       *  4: a 4-connected line (LINE_4)
       *  8: a 8-connected line (LINE_8)
       * 16: an antialiased line (LINE_AA).
       * </pre>
       *
       * <code>optional int32 line_type = 3 [default = 4];</code>
       */
      public int getLineType() {
        return lineType_;
      }

      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeMessage(1, getRectangle());
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeInt32(2, cornerRadius_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          output.writeInt32(3, lineType_);
        }
        unknownFields.writeTo(output);
      }

      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(1, getRectangle());
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(2, cornerRadius_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(3, lineType_);
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof mediapipe.RenderDataOuterClass.RenderAnnotation.RoundedRectangle)) {
          return super.equals(obj);
        }
        mediapipe.RenderDataOuterClass.RenderAnnotation.RoundedRectangle other = (mediapipe.RenderDataOuterClass.RenderAnnotation.RoundedRectangle) obj;

        boolean result = true;
        result = result && (hasRectangle() == other.hasRectangle());
        if (hasRectangle()) {
          result = result && getRectangle()
              .equals(other.getRectangle());
        }
        result = result && (hasCornerRadius() == other.hasCornerRadius());
        if (hasCornerRadius()) {
          result = result && (getCornerRadius()
              == other.getCornerRadius());
        }
        result = result && (hasLineType() == other.hasLineType());
        if (hasLineType()) {
          result = result && (getLineType()
              == other.getLineType());
        }
        result = result && unknownFields.equals(other.unknownFields);
        return result;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptorForType().hashCode();
        if (hasRectangle()) {
          hash = (37 * hash) + RECTANGLE_FIELD_NUMBER;
          hash = (53 * hash) + getRectangle().hashCode();
        }
        if (hasCornerRadius()) {
          hash = (37 * hash) + CORNER_RADIUS_FIELD_NUMBER;
          hash = (53 * hash) + getCornerRadius();
        }
        if (hasLineType()) {
          hash = (37 * hash) + LINE_TYPE_FIELD_NUMBER;
          hash = (53 * hash) + getLineType();
        }
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static mediapipe.RenderDataOuterClass.RenderAnnotation.RoundedRectangle parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static mediapipe.RenderDataOuterClass.RenderAnnotation.RoundedRectangle parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static mediapipe.RenderDataOuterClass.RenderAnnotation.RoundedRectangle parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static mediapipe.RenderDataOuterClass.RenderAnnotation.RoundedRectangle parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static mediapipe.RenderDataOuterClass.RenderAnnotation.RoundedRectangle parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static mediapipe.RenderDataOuterClass.RenderAnnotation.RoundedRectangle parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static mediapipe.RenderDataOuterClass.RenderAnnotation.RoundedRectangle parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static mediapipe.RenderDataOuterClass.RenderAnnotation.RoundedRectangle parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static mediapipe.RenderDataOuterClass.RenderAnnotation.RoundedRectangle parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static mediapipe.RenderDataOuterClass.RenderAnnotation.RoundedRectangle parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(mediapipe.RenderDataOuterClass.RenderAnnotation.RoundedRectangle prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code mediapipe.RenderAnnotation.RoundedRectangle}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:mediapipe.RenderAnnotation.RoundedRectangle)
          mediapipe.RenderDataOuterClass.RenderAnnotation.RoundedRectangleOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return mediapipe.RenderDataOuterClass.internal_static_mediapipe_RenderAnnotation_RoundedRectangle_descriptor;
        }

        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return mediapipe.RenderDataOuterClass.internal_static_mediapipe_RenderAnnotation_RoundedRectangle_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  mediapipe.RenderDataOuterClass.RenderAnnotation.RoundedRectangle.class, mediapipe.RenderDataOuterClass.RenderAnnotation.RoundedRectangle.Builder.class);
        }

        // Construct using mediapipe.RenderDataOuterClass.RenderAnnotation.RoundedRectangle.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
            getRectangleFieldBuilder();
          }
        }
        public Builder clear() {
          super.clear();
          if (rectangleBuilder_ == null) {
            rectangle_ = null;
          } else {
            rectangleBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000001);
          cornerRadius_ = 0;
          bitField0_ = (bitField0_ & ~0x00000002);
          lineType_ = 4;
          bitField0_ = (bitField0_ & ~0x00000004);
          return this;
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return mediapipe.RenderDataOuterClass.internal_static_mediapipe_RenderAnnotation_RoundedRectangle_descriptor;
        }

        public mediapipe.RenderDataOuterClass.RenderAnnotation.RoundedRectangle getDefaultInstanceForType() {
          return mediapipe.RenderDataOuterClass.RenderAnnotation.RoundedRectangle.getDefaultInstance();
        }

        public mediapipe.RenderDataOuterClass.RenderAnnotation.RoundedRectangle build() {
          mediapipe.RenderDataOuterClass.RenderAnnotation.RoundedRectangle result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public mediapipe.RenderDataOuterClass.RenderAnnotation.RoundedRectangle buildPartial() {
          mediapipe.RenderDataOuterClass.RenderAnnotation.RoundedRectangle result = new mediapipe.RenderDataOuterClass.RenderAnnotation.RoundedRectangle(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          if (rectangleBuilder_ == null) {
            result.rectangle_ = rectangle_;
          } else {
            result.rectangle_ = rectangleBuilder_.build();
          }
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.cornerRadius_ = cornerRadius_;
          if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
            to_bitField0_ |= 0x00000004;
          }
          result.lineType_ = lineType_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder clone() {
          return (Builder) super.clone();
        }
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            Object value) {
          return (Builder) super.setField(field, value);
        }
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return (Builder) super.clearField(field);
        }
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return (Builder) super.clearOneof(oneof);
        }
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, Object value) {
          return (Builder) super.setRepeatedField(field, index, value);
        }
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            Object value) {
          return (Builder) super.addRepeatedField(field, value);
        }
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof mediapipe.RenderDataOuterClass.RenderAnnotation.RoundedRectangle) {
            return mergeFrom((mediapipe.RenderDataOuterClass.RenderAnnotation.RoundedRectangle)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(mediapipe.RenderDataOuterClass.RenderAnnotation.RoundedRectangle other) {
          if (other == mediapipe.RenderDataOuterClass.RenderAnnotation.RoundedRectangle.getDefaultInstance()) return this;
          if (other.hasRectangle()) {
            mergeRectangle(other.getRectangle());
          }
          if (other.hasCornerRadius()) {
            setCornerRadius(other.getCornerRadius());
          }
          if (other.hasLineType()) {
            setLineType(other.getLineType());
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          mediapipe.RenderDataOuterClass.RenderAnnotation.RoundedRectangle parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (mediapipe.RenderDataOuterClass.RenderAnnotation.RoundedRectangle) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private mediapipe.RenderDataOuterClass.RenderAnnotation.Rectangle rectangle_ = null;
        private com.google.protobuf.SingleFieldBuilderV3<
            mediapipe.RenderDataOuterClass.RenderAnnotation.Rectangle, mediapipe.RenderDataOuterClass.RenderAnnotation.Rectangle.Builder, mediapipe.RenderDataOuterClass.RenderAnnotation.RectangleOrBuilder> rectangleBuilder_;
        /**
         * <pre>
         * A rounded rectangle is specified by a rectangle and a corner radius to
         * round each corner by. A corner radius of 0 implies a standard non-rounded
         * rectangle (i.e. sharp edges) but as the radius increases proportionally
         * to the width and height of the overall rectangle size, the corners
         * increasingly round.
         * </pre>
         *
         * <code>optional .mediapipe.RenderAnnotation.Rectangle rectangle = 1;</code>
         */
        public boolean hasRectangle() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <pre>
         * A rounded rectangle is specified by a rectangle and a corner radius to
         * round each corner by. A corner radius of 0 implies a standard non-rounded
         * rectangle (i.e. sharp edges) but as the radius increases proportionally
         * to the width and height of the overall rectangle size, the corners
         * increasingly round.
         * </pre>
         *
         * <code>optional .mediapipe.RenderAnnotation.Rectangle rectangle = 1;</code>
         */
        public mediapipe.RenderDataOuterClass.RenderAnnotation.Rectangle getRectangle() {
          if (rectangleBuilder_ == null) {
            return rectangle_ == null ? mediapipe.RenderDataOuterClass.RenderAnnotation.Rectangle.getDefaultInstance() : rectangle_;
          } else {
            return rectangleBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * A rounded rectangle is specified by a rectangle and a corner radius to
         * round each corner by. A corner radius of 0 implies a standard non-rounded
         * rectangle (i.e. sharp edges) but as the radius increases proportionally
         * to the width and height of the overall rectangle size, the corners
         * increasingly round.
         * </pre>
         *
         * <code>optional .mediapipe.RenderAnnotation.Rectangle rectangle = 1;</code>
         */
        public Builder setRectangle(mediapipe.RenderDataOuterClass.RenderAnnotation.Rectangle value) {
          if (rectangleBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            rectangle_ = value;
            onChanged();
          } else {
            rectangleBuilder_.setMessage(value);
          }
          bitField0_ |= 0x00000001;
          return this;
        }
        /**
         * <pre>
         * A rounded rectangle is specified by a rectangle and a corner radius to
         * round each corner by. A corner radius of 0 implies a standard non-rounded
         * rectangle (i.e. sharp edges) but as the radius increases proportionally
         * to the width and height of the overall rectangle size, the corners
         * increasingly round.
         * </pre>
         *
         * <code>optional .mediapipe.RenderAnnotation.Rectangle rectangle = 1;</code>
         */
        public Builder setRectangle(
            mediapipe.RenderDataOuterClass.RenderAnnotation.Rectangle.Builder builderForValue) {
          if (rectangleBuilder_ == null) {
            rectangle_ = builderForValue.build();
            onChanged();
          } else {
            rectangleBuilder_.setMessage(builderForValue.build());
          }
          bitField0_ |= 0x00000001;
          return this;
        }
        /**
         * <pre>
         * A rounded rectangle is specified by a rectangle and a corner radius to
         * round each corner by. A corner radius of 0 implies a standard non-rounded
         * rectangle (i.e. sharp edges) but as the radius increases proportionally
         * to the width and height of the overall rectangle size, the corners
         * increasingly round.
         * </pre>
         *
         * <code>optional .mediapipe.RenderAnnotation.Rectangle rectangle = 1;</code>
         */
        public Builder mergeRectangle(mediapipe.RenderDataOuterClass.RenderAnnotation.Rectangle value) {
          if (rectangleBuilder_ == null) {
            if (((bitField0_ & 0x00000001) == 0x00000001) &&
                rectangle_ != null &&
                rectangle_ != mediapipe.RenderDataOuterClass.RenderAnnotation.Rectangle.getDefaultInstance()) {
              rectangle_ =
                mediapipe.RenderDataOuterClass.RenderAnnotation.Rectangle.newBuilder(rectangle_).mergeFrom(value).buildPartial();
            } else {
              rectangle_ = value;
            }
            onChanged();
          } else {
            rectangleBuilder_.mergeFrom(value);
          }
          bitField0_ |= 0x00000001;
          return this;
        }
        /**
         * <pre>
         * A rounded rectangle is specified by a rectangle and a corner radius to
         * round each corner by. A corner radius of 0 implies a standard non-rounded
         * rectangle (i.e. sharp edges) but as the radius increases proportionally
         * to the width and height of the overall rectangle size, the corners
         * increasingly round.
         * </pre>
         *
         * <code>optional .mediapipe.RenderAnnotation.Rectangle rectangle = 1;</code>
         */
        public Builder clearRectangle() {
          if (rectangleBuilder_ == null) {
            rectangle_ = null;
            onChanged();
          } else {
            rectangleBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000001);
          return this;
        }
        /**
         * <pre>
         * A rounded rectangle is specified by a rectangle and a corner radius to
         * round each corner by. A corner radius of 0 implies a standard non-rounded
         * rectangle (i.e. sharp edges) but as the radius increases proportionally
         * to the width and height of the overall rectangle size, the corners
         * increasingly round.
         * </pre>
         *
         * <code>optional .mediapipe.RenderAnnotation.Rectangle rectangle = 1;</code>
         */
        public mediapipe.RenderDataOuterClass.RenderAnnotation.Rectangle.Builder getRectangleBuilder() {
          bitField0_ |= 0x00000001;
          onChanged();
          return getRectangleFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * A rounded rectangle is specified by a rectangle and a corner radius to
         * round each corner by. A corner radius of 0 implies a standard non-rounded
         * rectangle (i.e. sharp edges) but as the radius increases proportionally
         * to the width and height of the overall rectangle size, the corners
         * increasingly round.
         * </pre>
         *
         * <code>optional .mediapipe.RenderAnnotation.Rectangle rectangle = 1;</code>
         */
        public mediapipe.RenderDataOuterClass.RenderAnnotation.RectangleOrBuilder getRectangleOrBuilder() {
          if (rectangleBuilder_ != null) {
            return rectangleBuilder_.getMessageOrBuilder();
          } else {
            return rectangle_ == null ?
                mediapipe.RenderDataOuterClass.RenderAnnotation.Rectangle.getDefaultInstance() : rectangle_;
          }
        }
        /**
         * <pre>
         * A rounded rectangle is specified by a rectangle and a corner radius to
         * round each corner by. A corner radius of 0 implies a standard non-rounded
         * rectangle (i.e. sharp edges) but as the radius increases proportionally
         * to the width and height of the overall rectangle size, the corners
         * increasingly round.
         * </pre>
         *
         * <code>optional .mediapipe.RenderAnnotation.Rectangle rectangle = 1;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            mediapipe.RenderDataOuterClass.RenderAnnotation.Rectangle, mediapipe.RenderDataOuterClass.RenderAnnotation.Rectangle.Builder, mediapipe.RenderDataOuterClass.RenderAnnotation.RectangleOrBuilder> 
            getRectangleFieldBuilder() {
          if (rectangleBuilder_ == null) {
            rectangleBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                mediapipe.RenderDataOuterClass.RenderAnnotation.Rectangle, mediapipe.RenderDataOuterClass.RenderAnnotation.Rectangle.Builder, mediapipe.RenderDataOuterClass.RenderAnnotation.RectangleOrBuilder>(
                    getRectangle(),
                    getParentForChildren(),
                    isClean());
            rectangle_ = null;
          }
          return rectangleBuilder_;
        }

        private int cornerRadius_ ;
        /**
         * <pre>
         * The radius of the round corners.
         * </pre>
         *
         * <code>optional int32 corner_radius = 2 [default = 0];</code>
         */
        public boolean hasCornerRadius() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <pre>
         * The radius of the round corners.
         * </pre>
         *
         * <code>optional int32 corner_radius = 2 [default = 0];</code>
         */
        public int getCornerRadius() {
          return cornerRadius_;
        }
        /**
         * <pre>
         * The radius of the round corners.
         * </pre>
         *
         * <code>optional int32 corner_radius = 2 [default = 0];</code>
         */
        public Builder setCornerRadius(int value) {
          bitField0_ |= 0x00000002;
          cornerRadius_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * The radius of the round corners.
         * </pre>
         *
         * <code>optional int32 corner_radius = 2 [default = 0];</code>
         */
        public Builder clearCornerRadius() {
          bitField0_ = (bitField0_ & ~0x00000002);
          cornerRadius_ = 0;
          onChanged();
          return this;
        }

        private int lineType_ = 4;
        /**
         * <pre>
         * Use one of the following:
         * -1: a filled line (FILLED)
         *  4: a 4-connected line (LINE_4)
         *  8: a 8-connected line (LINE_8)
         * 16: an antialiased line (LINE_AA).
         * </pre>
         *
         * <code>optional int32 line_type = 3 [default = 4];</code>
         */
        public boolean hasLineType() {
          return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        /**
         * <pre>
         * Use one of the following:
         * -1: a filled line (FILLED)
         *  4: a 4-connected line (LINE_4)
         *  8: a 8-connected line (LINE_8)
         * 16: an antialiased line (LINE_AA).
         * </pre>
         *
         * <code>optional int32 line_type = 3 [default = 4];</code>
         */
        public int getLineType() {
          return lineType_;
        }
        /**
         * <pre>
         * Use one of the following:
         * -1: a filled line (FILLED)
         *  4: a 4-connected line (LINE_4)
         *  8: a 8-connected line (LINE_8)
         * 16: an antialiased line (LINE_AA).
         * </pre>
         *
         * <code>optional int32 line_type = 3 [default = 4];</code>
         */
        public Builder setLineType(int value) {
          bitField0_ |= 0x00000004;
          lineType_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Use one of the following:
         * -1: a filled line (FILLED)
         *  4: a 4-connected line (LINE_4)
         *  8: a 8-connected line (LINE_8)
         * 16: an antialiased line (LINE_AA).
         * </pre>
         *
         * <code>optional int32 line_type = 3 [default = 4];</code>
         */
        public Builder clearLineType() {
          bitField0_ = (bitField0_ & ~0x00000004);
          lineType_ = 4;
          onChanged();
          return this;
        }
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:mediapipe.RenderAnnotation.RoundedRectangle)
      }

      // @@protoc_insertion_point(class_scope:mediapipe.RenderAnnotation.RoundedRectangle)
      private static final mediapipe.RenderDataOuterClass.RenderAnnotation.RoundedRectangle DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new mediapipe.RenderDataOuterClass.RenderAnnotation.RoundedRectangle();
      }

      public static mediapipe.RenderDataOuterClass.RenderAnnotation.RoundedRectangle getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      @java.lang.Deprecated public static final com.google.protobuf.Parser<RoundedRectangle>
          PARSER = new com.google.protobuf.AbstractParser<RoundedRectangle>() {
        public RoundedRectangle parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
            return new RoundedRectangle(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<RoundedRectangle> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<RoundedRectangle> getParserForType() {
        return PARSER;
      }

      public mediapipe.RenderDataOuterClass.RenderAnnotation.RoundedRectangle getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface FilledRoundedRectangleOrBuilder extends
        // @@protoc_insertion_point(interface_extends:mediapipe.RenderAnnotation.FilledRoundedRectangle)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional .mediapipe.RenderAnnotation.RoundedRectangle rounded_rectangle = 1;</code>
       */
      boolean hasRoundedRectangle();
      /**
       * <code>optional .mediapipe.RenderAnnotation.RoundedRectangle rounded_rectangle = 1;</code>
       */
      mediapipe.RenderDataOuterClass.RenderAnnotation.RoundedRectangle getRoundedRectangle();
      /**
       * <code>optional .mediapipe.RenderAnnotation.RoundedRectangle rounded_rectangle = 1;</code>
       */
      mediapipe.RenderDataOuterClass.RenderAnnotation.RoundedRectangleOrBuilder getRoundedRectangleOrBuilder();

      /**
       * <pre>
       * Color to fill in the rounded rectangle.
       * </pre>
       *
       * <code>optional .mediapipe.Color fill_color = 2;</code>
       */
      boolean hasFillColor();
      /**
       * <pre>
       * Color to fill in the rounded rectangle.
       * </pre>
       *
       * <code>optional .mediapipe.Color fill_color = 2;</code>
       */
      mediapipe.ColorOuterClass.Color getFillColor();
      /**
       * <pre>
       * Color to fill in the rounded rectangle.
       * </pre>
       *
       * <code>optional .mediapipe.Color fill_color = 2;</code>
       */
      mediapipe.ColorOuterClass.ColorOrBuilder getFillColorOrBuilder();
    }
    /**
     * Protobuf type {@code mediapipe.RenderAnnotation.FilledRoundedRectangle}
     */
    public  static final class FilledRoundedRectangle extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:mediapipe.RenderAnnotation.FilledRoundedRectangle)
        FilledRoundedRectangleOrBuilder {
      // Use FilledRoundedRectangle.newBuilder() to construct.
      private FilledRoundedRectangle(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private FilledRoundedRectangle() {
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private FilledRoundedRectangle(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 10: {
                mediapipe.RenderDataOuterClass.RenderAnnotation.RoundedRectangle.Builder subBuilder = null;
                if (((bitField0_ & 0x00000001) == 0x00000001)) {
                  subBuilder = roundedRectangle_.toBuilder();
                }
                roundedRectangle_ = input.readMessage(mediapipe.RenderDataOuterClass.RenderAnnotation.RoundedRectangle.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(roundedRectangle_);
                  roundedRectangle_ = subBuilder.buildPartial();
                }
                bitField0_ |= 0x00000001;
                break;
              }
              case 18: {
                mediapipe.ColorOuterClass.Color.Builder subBuilder = null;
                if (((bitField0_ & 0x00000002) == 0x00000002)) {
                  subBuilder = fillColor_.toBuilder();
                }
                fillColor_ = input.readMessage(mediapipe.ColorOuterClass.Color.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(fillColor_);
                  fillColor_ = subBuilder.buildPartial();
                }
                bitField0_ |= 0x00000002;
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return mediapipe.RenderDataOuterClass.internal_static_mediapipe_RenderAnnotation_FilledRoundedRectangle_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return mediapipe.RenderDataOuterClass.internal_static_mediapipe_RenderAnnotation_FilledRoundedRectangle_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                mediapipe.RenderDataOuterClass.RenderAnnotation.FilledRoundedRectangle.class, mediapipe.RenderDataOuterClass.RenderAnnotation.FilledRoundedRectangle.Builder.class);
      }

      private int bitField0_;
      public static final int ROUNDED_RECTANGLE_FIELD_NUMBER = 1;
      private mediapipe.RenderDataOuterClass.RenderAnnotation.RoundedRectangle roundedRectangle_;
      /**
       * <code>optional .mediapipe.RenderAnnotation.RoundedRectangle rounded_rectangle = 1;</code>
       */
      public boolean hasRoundedRectangle() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .mediapipe.RenderAnnotation.RoundedRectangle rounded_rectangle = 1;</code>
       */
      public mediapipe.RenderDataOuterClass.RenderAnnotation.RoundedRectangle getRoundedRectangle() {
        return roundedRectangle_ == null ? mediapipe.RenderDataOuterClass.RenderAnnotation.RoundedRectangle.getDefaultInstance() : roundedRectangle_;
      }
      /**
       * <code>optional .mediapipe.RenderAnnotation.RoundedRectangle rounded_rectangle = 1;</code>
       */
      public mediapipe.RenderDataOuterClass.RenderAnnotation.RoundedRectangleOrBuilder getRoundedRectangleOrBuilder() {
        return roundedRectangle_ == null ? mediapipe.RenderDataOuterClass.RenderAnnotation.RoundedRectangle.getDefaultInstance() : roundedRectangle_;
      }

      public static final int FILL_COLOR_FIELD_NUMBER = 2;
      private mediapipe.ColorOuterClass.Color fillColor_;
      /**
       * <pre>
       * Color to fill in the rounded rectangle.
       * </pre>
       *
       * <code>optional .mediapipe.Color fill_color = 2;</code>
       */
      public boolean hasFillColor() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <pre>
       * Color to fill in the rounded rectangle.
       * </pre>
       *
       * <code>optional .mediapipe.Color fill_color = 2;</code>
       */
      public mediapipe.ColorOuterClass.Color getFillColor() {
        return fillColor_ == null ? mediapipe.ColorOuterClass.Color.getDefaultInstance() : fillColor_;
      }
      /**
       * <pre>
       * Color to fill in the rounded rectangle.
       * </pre>
       *
       * <code>optional .mediapipe.Color fill_color = 2;</code>
       */
      public mediapipe.ColorOuterClass.ColorOrBuilder getFillColorOrBuilder() {
        return fillColor_ == null ? mediapipe.ColorOuterClass.Color.getDefaultInstance() : fillColor_;
      }

      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeMessage(1, getRoundedRectangle());
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeMessage(2, getFillColor());
        }
        unknownFields.writeTo(output);
      }

      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(1, getRoundedRectangle());
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(2, getFillColor());
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof mediapipe.RenderDataOuterClass.RenderAnnotation.FilledRoundedRectangle)) {
          return super.equals(obj);
        }
        mediapipe.RenderDataOuterClass.RenderAnnotation.FilledRoundedRectangle other = (mediapipe.RenderDataOuterClass.RenderAnnotation.FilledRoundedRectangle) obj;

        boolean result = true;
        result = result && (hasRoundedRectangle() == other.hasRoundedRectangle());
        if (hasRoundedRectangle()) {
          result = result && getRoundedRectangle()
              .equals(other.getRoundedRectangle());
        }
        result = result && (hasFillColor() == other.hasFillColor());
        if (hasFillColor()) {
          result = result && getFillColor()
              .equals(other.getFillColor());
        }
        result = result && unknownFields.equals(other.unknownFields);
        return result;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptorForType().hashCode();
        if (hasRoundedRectangle()) {
          hash = (37 * hash) + ROUNDED_RECTANGLE_FIELD_NUMBER;
          hash = (53 * hash) + getRoundedRectangle().hashCode();
        }
        if (hasFillColor()) {
          hash = (37 * hash) + FILL_COLOR_FIELD_NUMBER;
          hash = (53 * hash) + getFillColor().hashCode();
        }
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static mediapipe.RenderDataOuterClass.RenderAnnotation.FilledRoundedRectangle parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static mediapipe.RenderDataOuterClass.RenderAnnotation.FilledRoundedRectangle parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static mediapipe.RenderDataOuterClass.RenderAnnotation.FilledRoundedRectangle parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static mediapipe.RenderDataOuterClass.RenderAnnotation.FilledRoundedRectangle parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static mediapipe.RenderDataOuterClass.RenderAnnotation.FilledRoundedRectangle parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static mediapipe.RenderDataOuterClass.RenderAnnotation.FilledRoundedRectangle parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static mediapipe.RenderDataOuterClass.RenderAnnotation.FilledRoundedRectangle parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static mediapipe.RenderDataOuterClass.RenderAnnotation.FilledRoundedRectangle parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static mediapipe.RenderDataOuterClass.RenderAnnotation.FilledRoundedRectangle parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static mediapipe.RenderDataOuterClass.RenderAnnotation.FilledRoundedRectangle parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(mediapipe.RenderDataOuterClass.RenderAnnotation.FilledRoundedRectangle prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code mediapipe.RenderAnnotation.FilledRoundedRectangle}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:mediapipe.RenderAnnotation.FilledRoundedRectangle)
          mediapipe.RenderDataOuterClass.RenderAnnotation.FilledRoundedRectangleOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return mediapipe.RenderDataOuterClass.internal_static_mediapipe_RenderAnnotation_FilledRoundedRectangle_descriptor;
        }

        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return mediapipe.RenderDataOuterClass.internal_static_mediapipe_RenderAnnotation_FilledRoundedRectangle_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  mediapipe.RenderDataOuterClass.RenderAnnotation.FilledRoundedRectangle.class, mediapipe.RenderDataOuterClass.RenderAnnotation.FilledRoundedRectangle.Builder.class);
        }

        // Construct using mediapipe.RenderDataOuterClass.RenderAnnotation.FilledRoundedRectangle.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
            getRoundedRectangleFieldBuilder();
            getFillColorFieldBuilder();
          }
        }
        public Builder clear() {
          super.clear();
          if (roundedRectangleBuilder_ == null) {
            roundedRectangle_ = null;
          } else {
            roundedRectangleBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000001);
          if (fillColorBuilder_ == null) {
            fillColor_ = null;
          } else {
            fillColorBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000002);
          return this;
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return mediapipe.RenderDataOuterClass.internal_static_mediapipe_RenderAnnotation_FilledRoundedRectangle_descriptor;
        }

        public mediapipe.RenderDataOuterClass.RenderAnnotation.FilledRoundedRectangle getDefaultInstanceForType() {
          return mediapipe.RenderDataOuterClass.RenderAnnotation.FilledRoundedRectangle.getDefaultInstance();
        }

        public mediapipe.RenderDataOuterClass.RenderAnnotation.FilledRoundedRectangle build() {
          mediapipe.RenderDataOuterClass.RenderAnnotation.FilledRoundedRectangle result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public mediapipe.RenderDataOuterClass.RenderAnnotation.FilledRoundedRectangle buildPartial() {
          mediapipe.RenderDataOuterClass.RenderAnnotation.FilledRoundedRectangle result = new mediapipe.RenderDataOuterClass.RenderAnnotation.FilledRoundedRectangle(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          if (roundedRectangleBuilder_ == null) {
            result.roundedRectangle_ = roundedRectangle_;
          } else {
            result.roundedRectangle_ = roundedRectangleBuilder_.build();
          }
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          if (fillColorBuilder_ == null) {
            result.fillColor_ = fillColor_;
          } else {
            result.fillColor_ = fillColorBuilder_.build();
          }
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder clone() {
          return (Builder) super.clone();
        }
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            Object value) {
          return (Builder) super.setField(field, value);
        }
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return (Builder) super.clearField(field);
        }
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return (Builder) super.clearOneof(oneof);
        }
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, Object value) {
          return (Builder) super.setRepeatedField(field, index, value);
        }
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            Object value) {
          return (Builder) super.addRepeatedField(field, value);
        }
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof mediapipe.RenderDataOuterClass.RenderAnnotation.FilledRoundedRectangle) {
            return mergeFrom((mediapipe.RenderDataOuterClass.RenderAnnotation.FilledRoundedRectangle)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(mediapipe.RenderDataOuterClass.RenderAnnotation.FilledRoundedRectangle other) {
          if (other == mediapipe.RenderDataOuterClass.RenderAnnotation.FilledRoundedRectangle.getDefaultInstance()) return this;
          if (other.hasRoundedRectangle()) {
            mergeRoundedRectangle(other.getRoundedRectangle());
          }
          if (other.hasFillColor()) {
            mergeFillColor(other.getFillColor());
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          mediapipe.RenderDataOuterClass.RenderAnnotation.FilledRoundedRectangle parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (mediapipe.RenderDataOuterClass.RenderAnnotation.FilledRoundedRectangle) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private mediapipe.RenderDataOuterClass.RenderAnnotation.RoundedRectangle roundedRectangle_ = null;
        private com.google.protobuf.SingleFieldBuilderV3<
            mediapipe.RenderDataOuterClass.RenderAnnotation.RoundedRectangle, mediapipe.RenderDataOuterClass.RenderAnnotation.RoundedRectangle.Builder, mediapipe.RenderDataOuterClass.RenderAnnotation.RoundedRectangleOrBuilder> roundedRectangleBuilder_;
        /**
         * <code>optional .mediapipe.RenderAnnotation.RoundedRectangle rounded_rectangle = 1;</code>
         */
        public boolean hasRoundedRectangle() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional .mediapipe.RenderAnnotation.RoundedRectangle rounded_rectangle = 1;</code>
         */
        public mediapipe.RenderDataOuterClass.RenderAnnotation.RoundedRectangle getRoundedRectangle() {
          if (roundedRectangleBuilder_ == null) {
            return roundedRectangle_ == null ? mediapipe.RenderDataOuterClass.RenderAnnotation.RoundedRectangle.getDefaultInstance() : roundedRectangle_;
          } else {
            return roundedRectangleBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .mediapipe.RenderAnnotation.RoundedRectangle rounded_rectangle = 1;</code>
         */
        public Builder setRoundedRectangle(mediapipe.RenderDataOuterClass.RenderAnnotation.RoundedRectangle value) {
          if (roundedRectangleBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            roundedRectangle_ = value;
            onChanged();
          } else {
            roundedRectangleBuilder_.setMessage(value);
          }
          bitField0_ |= 0x00000001;
          return this;
        }
        /**
         * <code>optional .mediapipe.RenderAnnotation.RoundedRectangle rounded_rectangle = 1;</code>
         */
        public Builder setRoundedRectangle(
            mediapipe.RenderDataOuterClass.RenderAnnotation.RoundedRectangle.Builder builderForValue) {
          if (roundedRectangleBuilder_ == null) {
            roundedRectangle_ = builderForValue.build();
            onChanged();
          } else {
            roundedRectangleBuilder_.setMessage(builderForValue.build());
          }
          bitField0_ |= 0x00000001;
          return this;
        }
        /**
         * <code>optional .mediapipe.RenderAnnotation.RoundedRectangle rounded_rectangle = 1;</code>
         */
        public Builder mergeRoundedRectangle(mediapipe.RenderDataOuterClass.RenderAnnotation.RoundedRectangle value) {
          if (roundedRectangleBuilder_ == null) {
            if (((bitField0_ & 0x00000001) == 0x00000001) &&
                roundedRectangle_ != null &&
                roundedRectangle_ != mediapipe.RenderDataOuterClass.RenderAnnotation.RoundedRectangle.getDefaultInstance()) {
              roundedRectangle_ =
                mediapipe.RenderDataOuterClass.RenderAnnotation.RoundedRectangle.newBuilder(roundedRectangle_).mergeFrom(value).buildPartial();
            } else {
              roundedRectangle_ = value;
            }
            onChanged();
          } else {
            roundedRectangleBuilder_.mergeFrom(value);
          }
          bitField0_ |= 0x00000001;
          return this;
        }
        /**
         * <code>optional .mediapipe.RenderAnnotation.RoundedRectangle rounded_rectangle = 1;</code>
         */
        public Builder clearRoundedRectangle() {
          if (roundedRectangleBuilder_ == null) {
            roundedRectangle_ = null;
            onChanged();
          } else {
            roundedRectangleBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000001);
          return this;
        }
        /**
         * <code>optional .mediapipe.RenderAnnotation.RoundedRectangle rounded_rectangle = 1;</code>
         */
        public mediapipe.RenderDataOuterClass.RenderAnnotation.RoundedRectangle.Builder getRoundedRectangleBuilder() {
          bitField0_ |= 0x00000001;
          onChanged();
          return getRoundedRectangleFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .mediapipe.RenderAnnotation.RoundedRectangle rounded_rectangle = 1;</code>
         */
        public mediapipe.RenderDataOuterClass.RenderAnnotation.RoundedRectangleOrBuilder getRoundedRectangleOrBuilder() {
          if (roundedRectangleBuilder_ != null) {
            return roundedRectangleBuilder_.getMessageOrBuilder();
          } else {
            return roundedRectangle_ == null ?
                mediapipe.RenderDataOuterClass.RenderAnnotation.RoundedRectangle.getDefaultInstance() : roundedRectangle_;
          }
        }
        /**
         * <code>optional .mediapipe.RenderAnnotation.RoundedRectangle rounded_rectangle = 1;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            mediapipe.RenderDataOuterClass.RenderAnnotation.RoundedRectangle, mediapipe.RenderDataOuterClass.RenderAnnotation.RoundedRectangle.Builder, mediapipe.RenderDataOuterClass.RenderAnnotation.RoundedRectangleOrBuilder> 
            getRoundedRectangleFieldBuilder() {
          if (roundedRectangleBuilder_ == null) {
            roundedRectangleBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                mediapipe.RenderDataOuterClass.RenderAnnotation.RoundedRectangle, mediapipe.RenderDataOuterClass.RenderAnnotation.RoundedRectangle.Builder, mediapipe.RenderDataOuterClass.RenderAnnotation.RoundedRectangleOrBuilder>(
                    getRoundedRectangle(),
                    getParentForChildren(),
                    isClean());
            roundedRectangle_ = null;
          }
          return roundedRectangleBuilder_;
        }

        private mediapipe.ColorOuterClass.Color fillColor_ = null;
        private com.google.protobuf.SingleFieldBuilderV3<
            mediapipe.ColorOuterClass.Color, mediapipe.ColorOuterClass.Color.Builder, mediapipe.ColorOuterClass.ColorOrBuilder> fillColorBuilder_;
        /**
         * <pre>
         * Color to fill in the rounded rectangle.
         * </pre>
         *
         * <code>optional .mediapipe.Color fill_color = 2;</code>
         */
        public boolean hasFillColor() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <pre>
         * Color to fill in the rounded rectangle.
         * </pre>
         *
         * <code>optional .mediapipe.Color fill_color = 2;</code>
         */
        public mediapipe.ColorOuterClass.Color getFillColor() {
          if (fillColorBuilder_ == null) {
            return fillColor_ == null ? mediapipe.ColorOuterClass.Color.getDefaultInstance() : fillColor_;
          } else {
            return fillColorBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * Color to fill in the rounded rectangle.
         * </pre>
         *
         * <code>optional .mediapipe.Color fill_color = 2;</code>
         */
        public Builder setFillColor(mediapipe.ColorOuterClass.Color value) {
          if (fillColorBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            fillColor_ = value;
            onChanged();
          } else {
            fillColorBuilder_.setMessage(value);
          }
          bitField0_ |= 0x00000002;
          return this;
        }
        /**
         * <pre>
         * Color to fill in the rounded rectangle.
         * </pre>
         *
         * <code>optional .mediapipe.Color fill_color = 2;</code>
         */
        public Builder setFillColor(
            mediapipe.ColorOuterClass.Color.Builder builderForValue) {
          if (fillColorBuilder_ == null) {
            fillColor_ = builderForValue.build();
            onChanged();
          } else {
            fillColorBuilder_.setMessage(builderForValue.build());
          }
          bitField0_ |= 0x00000002;
          return this;
        }
        /**
         * <pre>
         * Color to fill in the rounded rectangle.
         * </pre>
         *
         * <code>optional .mediapipe.Color fill_color = 2;</code>
         */
        public Builder mergeFillColor(mediapipe.ColorOuterClass.Color value) {
          if (fillColorBuilder_ == null) {
            if (((bitField0_ & 0x00000002) == 0x00000002) &&
                fillColor_ != null &&
                fillColor_ != mediapipe.ColorOuterClass.Color.getDefaultInstance()) {
              fillColor_ =
                mediapipe.ColorOuterClass.Color.newBuilder(fillColor_).mergeFrom(value).buildPartial();
            } else {
              fillColor_ = value;
            }
            onChanged();
          } else {
            fillColorBuilder_.mergeFrom(value);
          }
          bitField0_ |= 0x00000002;
          return this;
        }
        /**
         * <pre>
         * Color to fill in the rounded rectangle.
         * </pre>
         *
         * <code>optional .mediapipe.Color fill_color = 2;</code>
         */
        public Builder clearFillColor() {
          if (fillColorBuilder_ == null) {
            fillColor_ = null;
            onChanged();
          } else {
            fillColorBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000002);
          return this;
        }
        /**
         * <pre>
         * Color to fill in the rounded rectangle.
         * </pre>
         *
         * <code>optional .mediapipe.Color fill_color = 2;</code>
         */
        public mediapipe.ColorOuterClass.Color.Builder getFillColorBuilder() {
          bitField0_ |= 0x00000002;
          onChanged();
          return getFillColorFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * Color to fill in the rounded rectangle.
         * </pre>
         *
         * <code>optional .mediapipe.Color fill_color = 2;</code>
         */
        public mediapipe.ColorOuterClass.ColorOrBuilder getFillColorOrBuilder() {
          if (fillColorBuilder_ != null) {
            return fillColorBuilder_.getMessageOrBuilder();
          } else {
            return fillColor_ == null ?
                mediapipe.ColorOuterClass.Color.getDefaultInstance() : fillColor_;
          }
        }
        /**
         * <pre>
         * Color to fill in the rounded rectangle.
         * </pre>
         *
         * <code>optional .mediapipe.Color fill_color = 2;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            mediapipe.ColorOuterClass.Color, mediapipe.ColorOuterClass.Color.Builder, mediapipe.ColorOuterClass.ColorOrBuilder> 
            getFillColorFieldBuilder() {
          if (fillColorBuilder_ == null) {
            fillColorBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                mediapipe.ColorOuterClass.Color, mediapipe.ColorOuterClass.Color.Builder, mediapipe.ColorOuterClass.ColorOrBuilder>(
                    getFillColor(),
                    getParentForChildren(),
                    isClean());
            fillColor_ = null;
          }
          return fillColorBuilder_;
        }
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:mediapipe.RenderAnnotation.FilledRoundedRectangle)
      }

      // @@protoc_insertion_point(class_scope:mediapipe.RenderAnnotation.FilledRoundedRectangle)
      private static final mediapipe.RenderDataOuterClass.RenderAnnotation.FilledRoundedRectangle DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new mediapipe.RenderDataOuterClass.RenderAnnotation.FilledRoundedRectangle();
      }

      public static mediapipe.RenderDataOuterClass.RenderAnnotation.FilledRoundedRectangle getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      @java.lang.Deprecated public static final com.google.protobuf.Parser<FilledRoundedRectangle>
          PARSER = new com.google.protobuf.AbstractParser<FilledRoundedRectangle>() {
        public FilledRoundedRectangle parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
            return new FilledRoundedRectangle(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<FilledRoundedRectangle> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<FilledRoundedRectangle> getParserForType() {
        return PARSER;
      }

      public mediapipe.RenderDataOuterClass.RenderAnnotation.FilledRoundedRectangle getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface OvalOrBuilder extends
        // @@protoc_insertion_point(interface_extends:mediapipe.RenderAnnotation.Oval)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <pre>
       * An oval is specified by the rectangle that encloses the oval. For
       * example, a circle with center at (x,y) and radius r can be specified as a
       * Rectangle with left = x - r, right = y - r, and width = height = 2 * r.
       * </pre>
       *
       * <code>optional .mediapipe.RenderAnnotation.Rectangle rectangle = 1;</code>
       */
      boolean hasRectangle();
      /**
       * <pre>
       * An oval is specified by the rectangle that encloses the oval. For
       * example, a circle with center at (x,y) and radius r can be specified as a
       * Rectangle with left = x - r, right = y - r, and width = height = 2 * r.
       * </pre>
       *
       * <code>optional .mediapipe.RenderAnnotation.Rectangle rectangle = 1;</code>
       */
      mediapipe.RenderDataOuterClass.RenderAnnotation.Rectangle getRectangle();
      /**
       * <pre>
       * An oval is specified by the rectangle that encloses the oval. For
       * example, a circle with center at (x,y) and radius r can be specified as a
       * Rectangle with left = x - r, right = y - r, and width = height = 2 * r.
       * </pre>
       *
       * <code>optional .mediapipe.RenderAnnotation.Rectangle rectangle = 1;</code>
       */
      mediapipe.RenderDataOuterClass.RenderAnnotation.RectangleOrBuilder getRectangleOrBuilder();
    }
    /**
     * Protobuf type {@code mediapipe.RenderAnnotation.Oval}
     */
    public  static final class Oval extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:mediapipe.RenderAnnotation.Oval)
        OvalOrBuilder {
      // Use Oval.newBuilder() to construct.
      private Oval(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private Oval() {
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private Oval(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 10: {
                mediapipe.RenderDataOuterClass.RenderAnnotation.Rectangle.Builder subBuilder = null;
                if (((bitField0_ & 0x00000001) == 0x00000001)) {
                  subBuilder = rectangle_.toBuilder();
                }
                rectangle_ = input.readMessage(mediapipe.RenderDataOuterClass.RenderAnnotation.Rectangle.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(rectangle_);
                  rectangle_ = subBuilder.buildPartial();
                }
                bitField0_ |= 0x00000001;
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return mediapipe.RenderDataOuterClass.internal_static_mediapipe_RenderAnnotation_Oval_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return mediapipe.RenderDataOuterClass.internal_static_mediapipe_RenderAnnotation_Oval_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                mediapipe.RenderDataOuterClass.RenderAnnotation.Oval.class, mediapipe.RenderDataOuterClass.RenderAnnotation.Oval.Builder.class);
      }

      private int bitField0_;
      public static final int RECTANGLE_FIELD_NUMBER = 1;
      private mediapipe.RenderDataOuterClass.RenderAnnotation.Rectangle rectangle_;
      /**
       * <pre>
       * An oval is specified by the rectangle that encloses the oval. For
       * example, a circle with center at (x,y) and radius r can be specified as a
       * Rectangle with left = x - r, right = y - r, and width = height = 2 * r.
       * </pre>
       *
       * <code>optional .mediapipe.RenderAnnotation.Rectangle rectangle = 1;</code>
       */
      public boolean hasRectangle() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <pre>
       * An oval is specified by the rectangle that encloses the oval. For
       * example, a circle with center at (x,y) and radius r can be specified as a
       * Rectangle with left = x - r, right = y - r, and width = height = 2 * r.
       * </pre>
       *
       * <code>optional .mediapipe.RenderAnnotation.Rectangle rectangle = 1;</code>
       */
      public mediapipe.RenderDataOuterClass.RenderAnnotation.Rectangle getRectangle() {
        return rectangle_ == null ? mediapipe.RenderDataOuterClass.RenderAnnotation.Rectangle.getDefaultInstance() : rectangle_;
      }
      /**
       * <pre>
       * An oval is specified by the rectangle that encloses the oval. For
       * example, a circle with center at (x,y) and radius r can be specified as a
       * Rectangle with left = x - r, right = y - r, and width = height = 2 * r.
       * </pre>
       *
       * <code>optional .mediapipe.RenderAnnotation.Rectangle rectangle = 1;</code>
       */
      public mediapipe.RenderDataOuterClass.RenderAnnotation.RectangleOrBuilder getRectangleOrBuilder() {
        return rectangle_ == null ? mediapipe.RenderDataOuterClass.RenderAnnotation.Rectangle.getDefaultInstance() : rectangle_;
      }

      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeMessage(1, getRectangle());
        }
        unknownFields.writeTo(output);
      }

      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(1, getRectangle());
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof mediapipe.RenderDataOuterClass.RenderAnnotation.Oval)) {
          return super.equals(obj);
        }
        mediapipe.RenderDataOuterClass.RenderAnnotation.Oval other = (mediapipe.RenderDataOuterClass.RenderAnnotation.Oval) obj;

        boolean result = true;
        result = result && (hasRectangle() == other.hasRectangle());
        if (hasRectangle()) {
          result = result && getRectangle()
              .equals(other.getRectangle());
        }
        result = result && unknownFields.equals(other.unknownFields);
        return result;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptorForType().hashCode();
        if (hasRectangle()) {
          hash = (37 * hash) + RECTANGLE_FIELD_NUMBER;
          hash = (53 * hash) + getRectangle().hashCode();
        }
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static mediapipe.RenderDataOuterClass.RenderAnnotation.Oval parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static mediapipe.RenderDataOuterClass.RenderAnnotation.Oval parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static mediapipe.RenderDataOuterClass.RenderAnnotation.Oval parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static mediapipe.RenderDataOuterClass.RenderAnnotation.Oval parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static mediapipe.RenderDataOuterClass.RenderAnnotation.Oval parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static mediapipe.RenderDataOuterClass.RenderAnnotation.Oval parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static mediapipe.RenderDataOuterClass.RenderAnnotation.Oval parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static mediapipe.RenderDataOuterClass.RenderAnnotation.Oval parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static mediapipe.RenderDataOuterClass.RenderAnnotation.Oval parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static mediapipe.RenderDataOuterClass.RenderAnnotation.Oval parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(mediapipe.RenderDataOuterClass.RenderAnnotation.Oval prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code mediapipe.RenderAnnotation.Oval}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:mediapipe.RenderAnnotation.Oval)
          mediapipe.RenderDataOuterClass.RenderAnnotation.OvalOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return mediapipe.RenderDataOuterClass.internal_static_mediapipe_RenderAnnotation_Oval_descriptor;
        }

        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return mediapipe.RenderDataOuterClass.internal_static_mediapipe_RenderAnnotation_Oval_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  mediapipe.RenderDataOuterClass.RenderAnnotation.Oval.class, mediapipe.RenderDataOuterClass.RenderAnnotation.Oval.Builder.class);
        }

        // Construct using mediapipe.RenderDataOuterClass.RenderAnnotation.Oval.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
            getRectangleFieldBuilder();
          }
        }
        public Builder clear() {
          super.clear();
          if (rectangleBuilder_ == null) {
            rectangle_ = null;
          } else {
            rectangleBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000001);
          return this;
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return mediapipe.RenderDataOuterClass.internal_static_mediapipe_RenderAnnotation_Oval_descriptor;
        }

        public mediapipe.RenderDataOuterClass.RenderAnnotation.Oval getDefaultInstanceForType() {
          return mediapipe.RenderDataOuterClass.RenderAnnotation.Oval.getDefaultInstance();
        }

        public mediapipe.RenderDataOuterClass.RenderAnnotation.Oval build() {
          mediapipe.RenderDataOuterClass.RenderAnnotation.Oval result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public mediapipe.RenderDataOuterClass.RenderAnnotation.Oval buildPartial() {
          mediapipe.RenderDataOuterClass.RenderAnnotation.Oval result = new mediapipe.RenderDataOuterClass.RenderAnnotation.Oval(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          if (rectangleBuilder_ == null) {
            result.rectangle_ = rectangle_;
          } else {
            result.rectangle_ = rectangleBuilder_.build();
          }
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder clone() {
          return (Builder) super.clone();
        }
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            Object value) {
          return (Builder) super.setField(field, value);
        }
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return (Builder) super.clearField(field);
        }
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return (Builder) super.clearOneof(oneof);
        }
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, Object value) {
          return (Builder) super.setRepeatedField(field, index, value);
        }
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            Object value) {
          return (Builder) super.addRepeatedField(field, value);
        }
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof mediapipe.RenderDataOuterClass.RenderAnnotation.Oval) {
            return mergeFrom((mediapipe.RenderDataOuterClass.RenderAnnotation.Oval)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(mediapipe.RenderDataOuterClass.RenderAnnotation.Oval other) {
          if (other == mediapipe.RenderDataOuterClass.RenderAnnotation.Oval.getDefaultInstance()) return this;
          if (other.hasRectangle()) {
            mergeRectangle(other.getRectangle());
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          mediapipe.RenderDataOuterClass.RenderAnnotation.Oval parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (mediapipe.RenderDataOuterClass.RenderAnnotation.Oval) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private mediapipe.RenderDataOuterClass.RenderAnnotation.Rectangle rectangle_ = null;
        private com.google.protobuf.SingleFieldBuilderV3<
            mediapipe.RenderDataOuterClass.RenderAnnotation.Rectangle, mediapipe.RenderDataOuterClass.RenderAnnotation.Rectangle.Builder, mediapipe.RenderDataOuterClass.RenderAnnotation.RectangleOrBuilder> rectangleBuilder_;
        /**
         * <pre>
         * An oval is specified by the rectangle that encloses the oval. For
         * example, a circle with center at (x,y) and radius r can be specified as a
         * Rectangle with left = x - r, right = y - r, and width = height = 2 * r.
         * </pre>
         *
         * <code>optional .mediapipe.RenderAnnotation.Rectangle rectangle = 1;</code>
         */
        public boolean hasRectangle() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <pre>
         * An oval is specified by the rectangle that encloses the oval. For
         * example, a circle with center at (x,y) and radius r can be specified as a
         * Rectangle with left = x - r, right = y - r, and width = height = 2 * r.
         * </pre>
         *
         * <code>optional .mediapipe.RenderAnnotation.Rectangle rectangle = 1;</code>
         */
        public mediapipe.RenderDataOuterClass.RenderAnnotation.Rectangle getRectangle() {
          if (rectangleBuilder_ == null) {
            return rectangle_ == null ? mediapipe.RenderDataOuterClass.RenderAnnotation.Rectangle.getDefaultInstance() : rectangle_;
          } else {
            return rectangleBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * An oval is specified by the rectangle that encloses the oval. For
         * example, a circle with center at (x,y) and radius r can be specified as a
         * Rectangle with left = x - r, right = y - r, and width = height = 2 * r.
         * </pre>
         *
         * <code>optional .mediapipe.RenderAnnotation.Rectangle rectangle = 1;</code>
         */
        public Builder setRectangle(mediapipe.RenderDataOuterClass.RenderAnnotation.Rectangle value) {
          if (rectangleBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            rectangle_ = value;
            onChanged();
          } else {
            rectangleBuilder_.setMessage(value);
          }
          bitField0_ |= 0x00000001;
          return this;
        }
        /**
         * <pre>
         * An oval is specified by the rectangle that encloses the oval. For
         * example, a circle with center at (x,y) and radius r can be specified as a
         * Rectangle with left = x - r, right = y - r, and width = height = 2 * r.
         * </pre>
         *
         * <code>optional .mediapipe.RenderAnnotation.Rectangle rectangle = 1;</code>
         */
        public Builder setRectangle(
            mediapipe.RenderDataOuterClass.RenderAnnotation.Rectangle.Builder builderForValue) {
          if (rectangleBuilder_ == null) {
            rectangle_ = builderForValue.build();
            onChanged();
          } else {
            rectangleBuilder_.setMessage(builderForValue.build());
          }
          bitField0_ |= 0x00000001;
          return this;
        }
        /**
         * <pre>
         * An oval is specified by the rectangle that encloses the oval. For
         * example, a circle with center at (x,y) and radius r can be specified as a
         * Rectangle with left = x - r, right = y - r, and width = height = 2 * r.
         * </pre>
         *
         * <code>optional .mediapipe.RenderAnnotation.Rectangle rectangle = 1;</code>
         */
        public Builder mergeRectangle(mediapipe.RenderDataOuterClass.RenderAnnotation.Rectangle value) {
          if (rectangleBuilder_ == null) {
            if (((bitField0_ & 0x00000001) == 0x00000001) &&
                rectangle_ != null &&
                rectangle_ != mediapipe.RenderDataOuterClass.RenderAnnotation.Rectangle.getDefaultInstance()) {
              rectangle_ =
                mediapipe.RenderDataOuterClass.RenderAnnotation.Rectangle.newBuilder(rectangle_).mergeFrom(value).buildPartial();
            } else {
              rectangle_ = value;
            }
            onChanged();
          } else {
            rectangleBuilder_.mergeFrom(value);
          }
          bitField0_ |= 0x00000001;
          return this;
        }
        /**
         * <pre>
         * An oval is specified by the rectangle that encloses the oval. For
         * example, a circle with center at (x,y) and radius r can be specified as a
         * Rectangle with left = x - r, right = y - r, and width = height = 2 * r.
         * </pre>
         *
         * <code>optional .mediapipe.RenderAnnotation.Rectangle rectangle = 1;</code>
         */
        public Builder clearRectangle() {
          if (rectangleBuilder_ == null) {
            rectangle_ = null;
            onChanged();
          } else {
            rectangleBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000001);
          return this;
        }
        /**
         * <pre>
         * An oval is specified by the rectangle that encloses the oval. For
         * example, a circle with center at (x,y) and radius r can be specified as a
         * Rectangle with left = x - r, right = y - r, and width = height = 2 * r.
         * </pre>
         *
         * <code>optional .mediapipe.RenderAnnotation.Rectangle rectangle = 1;</code>
         */
        public mediapipe.RenderDataOuterClass.RenderAnnotation.Rectangle.Builder getRectangleBuilder() {
          bitField0_ |= 0x00000001;
          onChanged();
          return getRectangleFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * An oval is specified by the rectangle that encloses the oval. For
         * example, a circle with center at (x,y) and radius r can be specified as a
         * Rectangle with left = x - r, right = y - r, and width = height = 2 * r.
         * </pre>
         *
         * <code>optional .mediapipe.RenderAnnotation.Rectangle rectangle = 1;</code>
         */
        public mediapipe.RenderDataOuterClass.RenderAnnotation.RectangleOrBuilder getRectangleOrBuilder() {
          if (rectangleBuilder_ != null) {
            return rectangleBuilder_.getMessageOrBuilder();
          } else {
            return rectangle_ == null ?
                mediapipe.RenderDataOuterClass.RenderAnnotation.Rectangle.getDefaultInstance() : rectangle_;
          }
        }
        /**
         * <pre>
         * An oval is specified by the rectangle that encloses the oval. For
         * example, a circle with center at (x,y) and radius r can be specified as a
         * Rectangle with left = x - r, right = y - r, and width = height = 2 * r.
         * </pre>
         *
         * <code>optional .mediapipe.RenderAnnotation.Rectangle rectangle = 1;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            mediapipe.RenderDataOuterClass.RenderAnnotation.Rectangle, mediapipe.RenderDataOuterClass.RenderAnnotation.Rectangle.Builder, mediapipe.RenderDataOuterClass.RenderAnnotation.RectangleOrBuilder> 
            getRectangleFieldBuilder() {
          if (rectangleBuilder_ == null) {
            rectangleBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                mediapipe.RenderDataOuterClass.RenderAnnotation.Rectangle, mediapipe.RenderDataOuterClass.RenderAnnotation.Rectangle.Builder, mediapipe.RenderDataOuterClass.RenderAnnotation.RectangleOrBuilder>(
                    getRectangle(),
                    getParentForChildren(),
                    isClean());
            rectangle_ = null;
          }
          return rectangleBuilder_;
        }
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:mediapipe.RenderAnnotation.Oval)
      }

      // @@protoc_insertion_point(class_scope:mediapipe.RenderAnnotation.Oval)
      private static final mediapipe.RenderDataOuterClass.RenderAnnotation.Oval DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new mediapipe.RenderDataOuterClass.RenderAnnotation.Oval();
      }

      public static mediapipe.RenderDataOuterClass.RenderAnnotation.Oval getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      @java.lang.Deprecated public static final com.google.protobuf.Parser<Oval>
          PARSER = new com.google.protobuf.AbstractParser<Oval>() {
        public Oval parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
            return new Oval(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<Oval> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<Oval> getParserForType() {
        return PARSER;
      }

      public mediapipe.RenderDataOuterClass.RenderAnnotation.Oval getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface FilledOvalOrBuilder extends
        // @@protoc_insertion_point(interface_extends:mediapipe.RenderAnnotation.FilledOval)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional .mediapipe.RenderAnnotation.Oval oval = 1;</code>
       */
      boolean hasOval();
      /**
       * <code>optional .mediapipe.RenderAnnotation.Oval oval = 1;</code>
       */
      mediapipe.RenderDataOuterClass.RenderAnnotation.Oval getOval();
      /**
       * <code>optional .mediapipe.RenderAnnotation.Oval oval = 1;</code>
       */
      mediapipe.RenderDataOuterClass.RenderAnnotation.OvalOrBuilder getOvalOrBuilder();

      /**
       * <pre>
       * Color to fill in the oval.
       * </pre>
       *
       * <code>optional .mediapipe.Color fill_color = 2;</code>
       */
      boolean hasFillColor();
      /**
       * <pre>
       * Color to fill in the oval.
       * </pre>
       *
       * <code>optional .mediapipe.Color fill_color = 2;</code>
       */
      mediapipe.ColorOuterClass.Color getFillColor();
      /**
       * <pre>
       * Color to fill in the oval.
       * </pre>
       *
       * <code>optional .mediapipe.Color fill_color = 2;</code>
       */
      mediapipe.ColorOuterClass.ColorOrBuilder getFillColorOrBuilder();
    }
    /**
     * Protobuf type {@code mediapipe.RenderAnnotation.FilledOval}
     */
    public  static final class FilledOval extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:mediapipe.RenderAnnotation.FilledOval)
        FilledOvalOrBuilder {
      // Use FilledOval.newBuilder() to construct.
      private FilledOval(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private FilledOval() {
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private FilledOval(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 10: {
                mediapipe.RenderDataOuterClass.RenderAnnotation.Oval.Builder subBuilder = null;
                if (((bitField0_ & 0x00000001) == 0x00000001)) {
                  subBuilder = oval_.toBuilder();
                }
                oval_ = input.readMessage(mediapipe.RenderDataOuterClass.RenderAnnotation.Oval.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(oval_);
                  oval_ = subBuilder.buildPartial();
                }
                bitField0_ |= 0x00000001;
                break;
              }
              case 18: {
                mediapipe.ColorOuterClass.Color.Builder subBuilder = null;
                if (((bitField0_ & 0x00000002) == 0x00000002)) {
                  subBuilder = fillColor_.toBuilder();
                }
                fillColor_ = input.readMessage(mediapipe.ColorOuterClass.Color.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(fillColor_);
                  fillColor_ = subBuilder.buildPartial();
                }
                bitField0_ |= 0x00000002;
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return mediapipe.RenderDataOuterClass.internal_static_mediapipe_RenderAnnotation_FilledOval_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return mediapipe.RenderDataOuterClass.internal_static_mediapipe_RenderAnnotation_FilledOval_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                mediapipe.RenderDataOuterClass.RenderAnnotation.FilledOval.class, mediapipe.RenderDataOuterClass.RenderAnnotation.FilledOval.Builder.class);
      }

      private int bitField0_;
      public static final int OVAL_FIELD_NUMBER = 1;
      private mediapipe.RenderDataOuterClass.RenderAnnotation.Oval oval_;
      /**
       * <code>optional .mediapipe.RenderAnnotation.Oval oval = 1;</code>
       */
      public boolean hasOval() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .mediapipe.RenderAnnotation.Oval oval = 1;</code>
       */
      public mediapipe.RenderDataOuterClass.RenderAnnotation.Oval getOval() {
        return oval_ == null ? mediapipe.RenderDataOuterClass.RenderAnnotation.Oval.getDefaultInstance() : oval_;
      }
      /**
       * <code>optional .mediapipe.RenderAnnotation.Oval oval = 1;</code>
       */
      public mediapipe.RenderDataOuterClass.RenderAnnotation.OvalOrBuilder getOvalOrBuilder() {
        return oval_ == null ? mediapipe.RenderDataOuterClass.RenderAnnotation.Oval.getDefaultInstance() : oval_;
      }

      public static final int FILL_COLOR_FIELD_NUMBER = 2;
      private mediapipe.ColorOuterClass.Color fillColor_;
      /**
       * <pre>
       * Color to fill in the oval.
       * </pre>
       *
       * <code>optional .mediapipe.Color fill_color = 2;</code>
       */
      public boolean hasFillColor() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <pre>
       * Color to fill in the oval.
       * </pre>
       *
       * <code>optional .mediapipe.Color fill_color = 2;</code>
       */
      public mediapipe.ColorOuterClass.Color getFillColor() {
        return fillColor_ == null ? mediapipe.ColorOuterClass.Color.getDefaultInstance() : fillColor_;
      }
      /**
       * <pre>
       * Color to fill in the oval.
       * </pre>
       *
       * <code>optional .mediapipe.Color fill_color = 2;</code>
       */
      public mediapipe.ColorOuterClass.ColorOrBuilder getFillColorOrBuilder() {
        return fillColor_ == null ? mediapipe.ColorOuterClass.Color.getDefaultInstance() : fillColor_;
      }

      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeMessage(1, getOval());
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeMessage(2, getFillColor());
        }
        unknownFields.writeTo(output);
      }

      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(1, getOval());
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(2, getFillColor());
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof mediapipe.RenderDataOuterClass.RenderAnnotation.FilledOval)) {
          return super.equals(obj);
        }
        mediapipe.RenderDataOuterClass.RenderAnnotation.FilledOval other = (mediapipe.RenderDataOuterClass.RenderAnnotation.FilledOval) obj;

        boolean result = true;
        result = result && (hasOval() == other.hasOval());
        if (hasOval()) {
          result = result && getOval()
              .equals(other.getOval());
        }
        result = result && (hasFillColor() == other.hasFillColor());
        if (hasFillColor()) {
          result = result && getFillColor()
              .equals(other.getFillColor());
        }
        result = result && unknownFields.equals(other.unknownFields);
        return result;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptorForType().hashCode();
        if (hasOval()) {
          hash = (37 * hash) + OVAL_FIELD_NUMBER;
          hash = (53 * hash) + getOval().hashCode();
        }
        if (hasFillColor()) {
          hash = (37 * hash) + FILL_COLOR_FIELD_NUMBER;
          hash = (53 * hash) + getFillColor().hashCode();
        }
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static mediapipe.RenderDataOuterClass.RenderAnnotation.FilledOval parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static mediapipe.RenderDataOuterClass.RenderAnnotation.FilledOval parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static mediapipe.RenderDataOuterClass.RenderAnnotation.FilledOval parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static mediapipe.RenderDataOuterClass.RenderAnnotation.FilledOval parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static mediapipe.RenderDataOuterClass.RenderAnnotation.FilledOval parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static mediapipe.RenderDataOuterClass.RenderAnnotation.FilledOval parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static mediapipe.RenderDataOuterClass.RenderAnnotation.FilledOval parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static mediapipe.RenderDataOuterClass.RenderAnnotation.FilledOval parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static mediapipe.RenderDataOuterClass.RenderAnnotation.FilledOval parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static mediapipe.RenderDataOuterClass.RenderAnnotation.FilledOval parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(mediapipe.RenderDataOuterClass.RenderAnnotation.FilledOval prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code mediapipe.RenderAnnotation.FilledOval}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:mediapipe.RenderAnnotation.FilledOval)
          mediapipe.RenderDataOuterClass.RenderAnnotation.FilledOvalOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return mediapipe.RenderDataOuterClass.internal_static_mediapipe_RenderAnnotation_FilledOval_descriptor;
        }

        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return mediapipe.RenderDataOuterClass.internal_static_mediapipe_RenderAnnotation_FilledOval_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  mediapipe.RenderDataOuterClass.RenderAnnotation.FilledOval.class, mediapipe.RenderDataOuterClass.RenderAnnotation.FilledOval.Builder.class);
        }

        // Construct using mediapipe.RenderDataOuterClass.RenderAnnotation.FilledOval.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
            getOvalFieldBuilder();
            getFillColorFieldBuilder();
          }
        }
        public Builder clear() {
          super.clear();
          if (ovalBuilder_ == null) {
            oval_ = null;
          } else {
            ovalBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000001);
          if (fillColorBuilder_ == null) {
            fillColor_ = null;
          } else {
            fillColorBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000002);
          return this;
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return mediapipe.RenderDataOuterClass.internal_static_mediapipe_RenderAnnotation_FilledOval_descriptor;
        }

        public mediapipe.RenderDataOuterClass.RenderAnnotation.FilledOval getDefaultInstanceForType() {
          return mediapipe.RenderDataOuterClass.RenderAnnotation.FilledOval.getDefaultInstance();
        }

        public mediapipe.RenderDataOuterClass.RenderAnnotation.FilledOval build() {
          mediapipe.RenderDataOuterClass.RenderAnnotation.FilledOval result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public mediapipe.RenderDataOuterClass.RenderAnnotation.FilledOval buildPartial() {
          mediapipe.RenderDataOuterClass.RenderAnnotation.FilledOval result = new mediapipe.RenderDataOuterClass.RenderAnnotation.FilledOval(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          if (ovalBuilder_ == null) {
            result.oval_ = oval_;
          } else {
            result.oval_ = ovalBuilder_.build();
          }
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          if (fillColorBuilder_ == null) {
            result.fillColor_ = fillColor_;
          } else {
            result.fillColor_ = fillColorBuilder_.build();
          }
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder clone() {
          return (Builder) super.clone();
        }
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            Object value) {
          return (Builder) super.setField(field, value);
        }
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return (Builder) super.clearField(field);
        }
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return (Builder) super.clearOneof(oneof);
        }
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, Object value) {
          return (Builder) super.setRepeatedField(field, index, value);
        }
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            Object value) {
          return (Builder) super.addRepeatedField(field, value);
        }
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof mediapipe.RenderDataOuterClass.RenderAnnotation.FilledOval) {
            return mergeFrom((mediapipe.RenderDataOuterClass.RenderAnnotation.FilledOval)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(mediapipe.RenderDataOuterClass.RenderAnnotation.FilledOval other) {
          if (other == mediapipe.RenderDataOuterClass.RenderAnnotation.FilledOval.getDefaultInstance()) return this;
          if (other.hasOval()) {
            mergeOval(other.getOval());
          }
          if (other.hasFillColor()) {
            mergeFillColor(other.getFillColor());
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          mediapipe.RenderDataOuterClass.RenderAnnotation.FilledOval parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (mediapipe.RenderDataOuterClass.RenderAnnotation.FilledOval) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private mediapipe.RenderDataOuterClass.RenderAnnotation.Oval oval_ = null;
        private com.google.protobuf.SingleFieldBuilderV3<
            mediapipe.RenderDataOuterClass.RenderAnnotation.Oval, mediapipe.RenderDataOuterClass.RenderAnnotation.Oval.Builder, mediapipe.RenderDataOuterClass.RenderAnnotation.OvalOrBuilder> ovalBuilder_;
        /**
         * <code>optional .mediapipe.RenderAnnotation.Oval oval = 1;</code>
         */
        public boolean hasOval() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional .mediapipe.RenderAnnotation.Oval oval = 1;</code>
         */
        public mediapipe.RenderDataOuterClass.RenderAnnotation.Oval getOval() {
          if (ovalBuilder_ == null) {
            return oval_ == null ? mediapipe.RenderDataOuterClass.RenderAnnotation.Oval.getDefaultInstance() : oval_;
          } else {
            return ovalBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .mediapipe.RenderAnnotation.Oval oval = 1;</code>
         */
        public Builder setOval(mediapipe.RenderDataOuterClass.RenderAnnotation.Oval value) {
          if (ovalBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            oval_ = value;
            onChanged();
          } else {
            ovalBuilder_.setMessage(value);
          }
          bitField0_ |= 0x00000001;
          return this;
        }
        /**
         * <code>optional .mediapipe.RenderAnnotation.Oval oval = 1;</code>
         */
        public Builder setOval(
            mediapipe.RenderDataOuterClass.RenderAnnotation.Oval.Builder builderForValue) {
          if (ovalBuilder_ == null) {
            oval_ = builderForValue.build();
            onChanged();
          } else {
            ovalBuilder_.setMessage(builderForValue.build());
          }
          bitField0_ |= 0x00000001;
          return this;
        }
        /**
         * <code>optional .mediapipe.RenderAnnotation.Oval oval = 1;</code>
         */
        public Builder mergeOval(mediapipe.RenderDataOuterClass.RenderAnnotation.Oval value) {
          if (ovalBuilder_ == null) {
            if (((bitField0_ & 0x00000001) == 0x00000001) &&
                oval_ != null &&
                oval_ != mediapipe.RenderDataOuterClass.RenderAnnotation.Oval.getDefaultInstance()) {
              oval_ =
                mediapipe.RenderDataOuterClass.RenderAnnotation.Oval.newBuilder(oval_).mergeFrom(value).buildPartial();
            } else {
              oval_ = value;
            }
            onChanged();
          } else {
            ovalBuilder_.mergeFrom(value);
          }
          bitField0_ |= 0x00000001;
          return this;
        }
        /**
         * <code>optional .mediapipe.RenderAnnotation.Oval oval = 1;</code>
         */
        public Builder clearOval() {
          if (ovalBuilder_ == null) {
            oval_ = null;
            onChanged();
          } else {
            ovalBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000001);
          return this;
        }
        /**
         * <code>optional .mediapipe.RenderAnnotation.Oval oval = 1;</code>
         */
        public mediapipe.RenderDataOuterClass.RenderAnnotation.Oval.Builder getOvalBuilder() {
          bitField0_ |= 0x00000001;
          onChanged();
          return getOvalFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .mediapipe.RenderAnnotation.Oval oval = 1;</code>
         */
        public mediapipe.RenderDataOuterClass.RenderAnnotation.OvalOrBuilder getOvalOrBuilder() {
          if (ovalBuilder_ != null) {
            return ovalBuilder_.getMessageOrBuilder();
          } else {
            return oval_ == null ?
                mediapipe.RenderDataOuterClass.RenderAnnotation.Oval.getDefaultInstance() : oval_;
          }
        }
        /**
         * <code>optional .mediapipe.RenderAnnotation.Oval oval = 1;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            mediapipe.RenderDataOuterClass.RenderAnnotation.Oval, mediapipe.RenderDataOuterClass.RenderAnnotation.Oval.Builder, mediapipe.RenderDataOuterClass.RenderAnnotation.OvalOrBuilder> 
            getOvalFieldBuilder() {
          if (ovalBuilder_ == null) {
            ovalBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                mediapipe.RenderDataOuterClass.RenderAnnotation.Oval, mediapipe.RenderDataOuterClass.RenderAnnotation.Oval.Builder, mediapipe.RenderDataOuterClass.RenderAnnotation.OvalOrBuilder>(
                    getOval(),
                    getParentForChildren(),
                    isClean());
            oval_ = null;
          }
          return ovalBuilder_;
        }

        private mediapipe.ColorOuterClass.Color fillColor_ = null;
        private com.google.protobuf.SingleFieldBuilderV3<
            mediapipe.ColorOuterClass.Color, mediapipe.ColorOuterClass.Color.Builder, mediapipe.ColorOuterClass.ColorOrBuilder> fillColorBuilder_;
        /**
         * <pre>
         * Color to fill in the oval.
         * </pre>
         *
         * <code>optional .mediapipe.Color fill_color = 2;</code>
         */
        public boolean hasFillColor() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <pre>
         * Color to fill in the oval.
         * </pre>
         *
         * <code>optional .mediapipe.Color fill_color = 2;</code>
         */
        public mediapipe.ColorOuterClass.Color getFillColor() {
          if (fillColorBuilder_ == null) {
            return fillColor_ == null ? mediapipe.ColorOuterClass.Color.getDefaultInstance() : fillColor_;
          } else {
            return fillColorBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * Color to fill in the oval.
         * </pre>
         *
         * <code>optional .mediapipe.Color fill_color = 2;</code>
         */
        public Builder setFillColor(mediapipe.ColorOuterClass.Color value) {
          if (fillColorBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            fillColor_ = value;
            onChanged();
          } else {
            fillColorBuilder_.setMessage(value);
          }
          bitField0_ |= 0x00000002;
          return this;
        }
        /**
         * <pre>
         * Color to fill in the oval.
         * </pre>
         *
         * <code>optional .mediapipe.Color fill_color = 2;</code>
         */
        public Builder setFillColor(
            mediapipe.ColorOuterClass.Color.Builder builderForValue) {
          if (fillColorBuilder_ == null) {
            fillColor_ = builderForValue.build();
            onChanged();
          } else {
            fillColorBuilder_.setMessage(builderForValue.build());
          }
          bitField0_ |= 0x00000002;
          return this;
        }
        /**
         * <pre>
         * Color to fill in the oval.
         * </pre>
         *
         * <code>optional .mediapipe.Color fill_color = 2;</code>
         */
        public Builder mergeFillColor(mediapipe.ColorOuterClass.Color value) {
          if (fillColorBuilder_ == null) {
            if (((bitField0_ & 0x00000002) == 0x00000002) &&
                fillColor_ != null &&
                fillColor_ != mediapipe.ColorOuterClass.Color.getDefaultInstance()) {
              fillColor_ =
                mediapipe.ColorOuterClass.Color.newBuilder(fillColor_).mergeFrom(value).buildPartial();
            } else {
              fillColor_ = value;
            }
            onChanged();
          } else {
            fillColorBuilder_.mergeFrom(value);
          }
          bitField0_ |= 0x00000002;
          return this;
        }
        /**
         * <pre>
         * Color to fill in the oval.
         * </pre>
         *
         * <code>optional .mediapipe.Color fill_color = 2;</code>
         */
        public Builder clearFillColor() {
          if (fillColorBuilder_ == null) {
            fillColor_ = null;
            onChanged();
          } else {
            fillColorBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000002);
          return this;
        }
        /**
         * <pre>
         * Color to fill in the oval.
         * </pre>
         *
         * <code>optional .mediapipe.Color fill_color = 2;</code>
         */
        public mediapipe.ColorOuterClass.Color.Builder getFillColorBuilder() {
          bitField0_ |= 0x00000002;
          onChanged();
          return getFillColorFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * Color to fill in the oval.
         * </pre>
         *
         * <code>optional .mediapipe.Color fill_color = 2;</code>
         */
        public mediapipe.ColorOuterClass.ColorOrBuilder getFillColorOrBuilder() {
          if (fillColorBuilder_ != null) {
            return fillColorBuilder_.getMessageOrBuilder();
          } else {
            return fillColor_ == null ?
                mediapipe.ColorOuterClass.Color.getDefaultInstance() : fillColor_;
          }
        }
        /**
         * <pre>
         * Color to fill in the oval.
         * </pre>
         *
         * <code>optional .mediapipe.Color fill_color = 2;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            mediapipe.ColorOuterClass.Color, mediapipe.ColorOuterClass.Color.Builder, mediapipe.ColorOuterClass.ColorOrBuilder> 
            getFillColorFieldBuilder() {
          if (fillColorBuilder_ == null) {
            fillColorBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                mediapipe.ColorOuterClass.Color, mediapipe.ColorOuterClass.Color.Builder, mediapipe.ColorOuterClass.ColorOrBuilder>(
                    getFillColor(),
                    getParentForChildren(),
                    isClean());
            fillColor_ = null;
          }
          return fillColorBuilder_;
        }
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:mediapipe.RenderAnnotation.FilledOval)
      }

      // @@protoc_insertion_point(class_scope:mediapipe.RenderAnnotation.FilledOval)
      private static final mediapipe.RenderDataOuterClass.RenderAnnotation.FilledOval DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new mediapipe.RenderDataOuterClass.RenderAnnotation.FilledOval();
      }

      public static mediapipe.RenderDataOuterClass.RenderAnnotation.FilledOval getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      @java.lang.Deprecated public static final com.google.protobuf.Parser<FilledOval>
          PARSER = new com.google.protobuf.AbstractParser<FilledOval>() {
        public FilledOval parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
            return new FilledOval(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<FilledOval> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<FilledOval> getParserForType() {
        return PARSER;
      }

      public mediapipe.RenderDataOuterClass.RenderAnnotation.FilledOval getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface PointOrBuilder extends
        // @@protoc_insertion_point(interface_extends:mediapipe.RenderAnnotation.Point)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional double x = 1;</code>
       */
      boolean hasX();
      /**
       * <code>optional double x = 1;</code>
       */
      double getX();

      /**
       * <code>optional double y = 2;</code>
       */
      boolean hasY();
      /**
       * <code>optional double y = 2;</code>
       */
      double getY();

      /**
       * <code>optional bool normalized = 3 [default = false];</code>
       */
      boolean hasNormalized();
      /**
       * <code>optional bool normalized = 3 [default = false];</code>
       */
      boolean getNormalized();
    }
    /**
     * Protobuf type {@code mediapipe.RenderAnnotation.Point}
     */
    public  static final class Point extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:mediapipe.RenderAnnotation.Point)
        PointOrBuilder {
      // Use Point.newBuilder() to construct.
      private Point(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private Point() {
        x_ = 0D;
        y_ = 0D;
        normalized_ = false;
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private Point(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 9: {
                bitField0_ |= 0x00000001;
                x_ = input.readDouble();
                break;
              }
              case 17: {
                bitField0_ |= 0x00000002;
                y_ = input.readDouble();
                break;
              }
              case 24: {
                bitField0_ |= 0x00000004;
                normalized_ = input.readBool();
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return mediapipe.RenderDataOuterClass.internal_static_mediapipe_RenderAnnotation_Point_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return mediapipe.RenderDataOuterClass.internal_static_mediapipe_RenderAnnotation_Point_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                mediapipe.RenderDataOuterClass.RenderAnnotation.Point.class, mediapipe.RenderDataOuterClass.RenderAnnotation.Point.Builder.class);
      }

      private int bitField0_;
      public static final int X_FIELD_NUMBER = 1;
      private double x_;
      /**
       * <code>optional double x = 1;</code>
       */
      public boolean hasX() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional double x = 1;</code>
       */
      public double getX() {
        return x_;
      }

      public static final int Y_FIELD_NUMBER = 2;
      private double y_;
      /**
       * <code>optional double y = 2;</code>
       */
      public boolean hasY() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional double y = 2;</code>
       */
      public double getY() {
        return y_;
      }

      public static final int NORMALIZED_FIELD_NUMBER = 3;
      private boolean normalized_;
      /**
       * <code>optional bool normalized = 3 [default = false];</code>
       */
      public boolean hasNormalized() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional bool normalized = 3 [default = false];</code>
       */
      public boolean getNormalized() {
        return normalized_;
      }

      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeDouble(1, x_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeDouble(2, y_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          output.writeBool(3, normalized_);
        }
        unknownFields.writeTo(output);
      }

      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeDoubleSize(1, x_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeDoubleSize(2, y_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBoolSize(3, normalized_);
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof mediapipe.RenderDataOuterClass.RenderAnnotation.Point)) {
          return super.equals(obj);
        }
        mediapipe.RenderDataOuterClass.RenderAnnotation.Point other = (mediapipe.RenderDataOuterClass.RenderAnnotation.Point) obj;

        boolean result = true;
        result = result && (hasX() == other.hasX());
        if (hasX()) {
          result = result && (
              java.lang.Double.doubleToLongBits(getX())
              == java.lang.Double.doubleToLongBits(
                  other.getX()));
        }
        result = result && (hasY() == other.hasY());
        if (hasY()) {
          result = result && (
              java.lang.Double.doubleToLongBits(getY())
              == java.lang.Double.doubleToLongBits(
                  other.getY()));
        }
        result = result && (hasNormalized() == other.hasNormalized());
        if (hasNormalized()) {
          result = result && (getNormalized()
              == other.getNormalized());
        }
        result = result && unknownFields.equals(other.unknownFields);
        return result;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptorForType().hashCode();
        if (hasX()) {
          hash = (37 * hash) + X_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
              java.lang.Double.doubleToLongBits(getX()));
        }
        if (hasY()) {
          hash = (37 * hash) + Y_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
              java.lang.Double.doubleToLongBits(getY()));
        }
        if (hasNormalized()) {
          hash = (37 * hash) + NORMALIZED_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
              getNormalized());
        }
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static mediapipe.RenderDataOuterClass.RenderAnnotation.Point parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static mediapipe.RenderDataOuterClass.RenderAnnotation.Point parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static mediapipe.RenderDataOuterClass.RenderAnnotation.Point parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static mediapipe.RenderDataOuterClass.RenderAnnotation.Point parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static mediapipe.RenderDataOuterClass.RenderAnnotation.Point parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static mediapipe.RenderDataOuterClass.RenderAnnotation.Point parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static mediapipe.RenderDataOuterClass.RenderAnnotation.Point parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static mediapipe.RenderDataOuterClass.RenderAnnotation.Point parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static mediapipe.RenderDataOuterClass.RenderAnnotation.Point parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static mediapipe.RenderDataOuterClass.RenderAnnotation.Point parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(mediapipe.RenderDataOuterClass.RenderAnnotation.Point prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code mediapipe.RenderAnnotation.Point}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:mediapipe.RenderAnnotation.Point)
          mediapipe.RenderDataOuterClass.RenderAnnotation.PointOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return mediapipe.RenderDataOuterClass.internal_static_mediapipe_RenderAnnotation_Point_descriptor;
        }

        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return mediapipe.RenderDataOuterClass.internal_static_mediapipe_RenderAnnotation_Point_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  mediapipe.RenderDataOuterClass.RenderAnnotation.Point.class, mediapipe.RenderDataOuterClass.RenderAnnotation.Point.Builder.class);
        }

        // Construct using mediapipe.RenderDataOuterClass.RenderAnnotation.Point.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        public Builder clear() {
          super.clear();
          x_ = 0D;
          bitField0_ = (bitField0_ & ~0x00000001);
          y_ = 0D;
          bitField0_ = (bitField0_ & ~0x00000002);
          normalized_ = false;
          bitField0_ = (bitField0_ & ~0x00000004);
          return this;
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return mediapipe.RenderDataOuterClass.internal_static_mediapipe_RenderAnnotation_Point_descriptor;
        }

        public mediapipe.RenderDataOuterClass.RenderAnnotation.Point getDefaultInstanceForType() {
          return mediapipe.RenderDataOuterClass.RenderAnnotation.Point.getDefaultInstance();
        }

        public mediapipe.RenderDataOuterClass.RenderAnnotation.Point build() {
          mediapipe.RenderDataOuterClass.RenderAnnotation.Point result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public mediapipe.RenderDataOuterClass.RenderAnnotation.Point buildPartial() {
          mediapipe.RenderDataOuterClass.RenderAnnotation.Point result = new mediapipe.RenderDataOuterClass.RenderAnnotation.Point(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.x_ = x_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.y_ = y_;
          if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
            to_bitField0_ |= 0x00000004;
          }
          result.normalized_ = normalized_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder clone() {
          return (Builder) super.clone();
        }
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            Object value) {
          return (Builder) super.setField(field, value);
        }
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return (Builder) super.clearField(field);
        }
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return (Builder) super.clearOneof(oneof);
        }
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, Object value) {
          return (Builder) super.setRepeatedField(field, index, value);
        }
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            Object value) {
          return (Builder) super.addRepeatedField(field, value);
        }
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof mediapipe.RenderDataOuterClass.RenderAnnotation.Point) {
            return mergeFrom((mediapipe.RenderDataOuterClass.RenderAnnotation.Point)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(mediapipe.RenderDataOuterClass.RenderAnnotation.Point other) {
          if (other == mediapipe.RenderDataOuterClass.RenderAnnotation.Point.getDefaultInstance()) return this;
          if (other.hasX()) {
            setX(other.getX());
          }
          if (other.hasY()) {
            setY(other.getY());
          }
          if (other.hasNormalized()) {
            setNormalized(other.getNormalized());
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          mediapipe.RenderDataOuterClass.RenderAnnotation.Point parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (mediapipe.RenderDataOuterClass.RenderAnnotation.Point) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private double x_ ;
        /**
         * <code>optional double x = 1;</code>
         */
        public boolean hasX() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional double x = 1;</code>
         */
        public double getX() {
          return x_;
        }
        /**
         * <code>optional double x = 1;</code>
         */
        public Builder setX(double value) {
          bitField0_ |= 0x00000001;
          x_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional double x = 1;</code>
         */
        public Builder clearX() {
          bitField0_ = (bitField0_ & ~0x00000001);
          x_ = 0D;
          onChanged();
          return this;
        }

        private double y_ ;
        /**
         * <code>optional double y = 2;</code>
         */
        public boolean hasY() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>optional double y = 2;</code>
         */
        public double getY() {
          return y_;
        }
        /**
         * <code>optional double y = 2;</code>
         */
        public Builder setY(double value) {
          bitField0_ |= 0x00000002;
          y_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional double y = 2;</code>
         */
        public Builder clearY() {
          bitField0_ = (bitField0_ & ~0x00000002);
          y_ = 0D;
          onChanged();
          return this;
        }

        private boolean normalized_ ;
        /**
         * <code>optional bool normalized = 3 [default = false];</code>
         */
        public boolean hasNormalized() {
          return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        /**
         * <code>optional bool normalized = 3 [default = false];</code>
         */
        public boolean getNormalized() {
          return normalized_;
        }
        /**
         * <code>optional bool normalized = 3 [default = false];</code>
         */
        public Builder setNormalized(boolean value) {
          bitField0_ |= 0x00000004;
          normalized_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional bool normalized = 3 [default = false];</code>
         */
        public Builder clearNormalized() {
          bitField0_ = (bitField0_ & ~0x00000004);
          normalized_ = false;
          onChanged();
          return this;
        }
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:mediapipe.RenderAnnotation.Point)
      }

      // @@protoc_insertion_point(class_scope:mediapipe.RenderAnnotation.Point)
      private static final mediapipe.RenderDataOuterClass.RenderAnnotation.Point DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new mediapipe.RenderDataOuterClass.RenderAnnotation.Point();
      }

      public static mediapipe.RenderDataOuterClass.RenderAnnotation.Point getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      @java.lang.Deprecated public static final com.google.protobuf.Parser<Point>
          PARSER = new com.google.protobuf.AbstractParser<Point>() {
        public Point parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
            return new Point(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<Point> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<Point> getParserForType() {
        return PARSER;
      }

      public mediapipe.RenderDataOuterClass.RenderAnnotation.Point getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface LineOrBuilder extends
        // @@protoc_insertion_point(interface_extends:mediapipe.RenderAnnotation.Line)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional double x_start = 1;</code>
       */
      boolean hasXStart();
      /**
       * <code>optional double x_start = 1;</code>
       */
      double getXStart();

      /**
       * <code>optional double y_start = 2;</code>
       */
      boolean hasYStart();
      /**
       * <code>optional double y_start = 2;</code>
       */
      double getYStart();

      /**
       * <code>optional double x_end = 3;</code>
       */
      boolean hasXEnd();
      /**
       * <code>optional double x_end = 3;</code>
       */
      double getXEnd();

      /**
       * <code>optional double y_end = 4;</code>
       */
      boolean hasYEnd();
      /**
       * <code>optional double y_end = 4;</code>
       */
      double getYEnd();

      /**
       * <code>optional bool normalized = 5 [default = false];</code>
       */
      boolean hasNormalized();
      /**
       * <code>optional bool normalized = 5 [default = false];</code>
       */
      boolean getNormalized();

      /**
       * <code>optional .mediapipe.RenderAnnotation.Line.LineType line_type = 6 [default = SOLID];</code>
       */
      boolean hasLineType();
      /**
       * <code>optional .mediapipe.RenderAnnotation.Line.LineType line_type = 6 [default = SOLID];</code>
       */
      mediapipe.RenderDataOuterClass.RenderAnnotation.Line.LineType getLineType();
    }
    /**
     * Protobuf type {@code mediapipe.RenderAnnotation.Line}
     */
    public  static final class Line extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:mediapipe.RenderAnnotation.Line)
        LineOrBuilder {
      // Use Line.newBuilder() to construct.
      private Line(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private Line() {
        xStart_ = 0D;
        yStart_ = 0D;
        xEnd_ = 0D;
        yEnd_ = 0D;
        normalized_ = false;
        lineType_ = 1;
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private Line(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 9: {
                bitField0_ |= 0x00000001;
                xStart_ = input.readDouble();
                break;
              }
              case 17: {
                bitField0_ |= 0x00000002;
                yStart_ = input.readDouble();
                break;
              }
              case 25: {
                bitField0_ |= 0x00000004;
                xEnd_ = input.readDouble();
                break;
              }
              case 33: {
                bitField0_ |= 0x00000008;
                yEnd_ = input.readDouble();
                break;
              }
              case 40: {
                bitField0_ |= 0x00000010;
                normalized_ = input.readBool();
                break;
              }
              case 48: {
                int rawValue = input.readEnum();
                mediapipe.RenderDataOuterClass.RenderAnnotation.Line.LineType value = mediapipe.RenderDataOuterClass.RenderAnnotation.Line.LineType.valueOf(rawValue);
                if (value == null) {
                  unknownFields.mergeVarintField(6, rawValue);
                } else {
                  bitField0_ |= 0x00000020;
                  lineType_ = rawValue;
                }
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return mediapipe.RenderDataOuterClass.internal_static_mediapipe_RenderAnnotation_Line_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return mediapipe.RenderDataOuterClass.internal_static_mediapipe_RenderAnnotation_Line_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                mediapipe.RenderDataOuterClass.RenderAnnotation.Line.class, mediapipe.RenderDataOuterClass.RenderAnnotation.Line.Builder.class);
      }

      /**
       * Protobuf enum {@code mediapipe.RenderAnnotation.Line.LineType}
       */
      public enum LineType
          implements com.google.protobuf.ProtocolMessageEnum {
        /**
         * <code>UNKNOWN = 0;</code>
         */
        UNKNOWN(0),
        /**
         * <code>SOLID = 1;</code>
         */
        SOLID(1),
        /**
         * <code>DASHED = 2;</code>
         */
        DASHED(2),
        ;

        /**
         * <code>UNKNOWN = 0;</code>
         */
        public static final int UNKNOWN_VALUE = 0;
        /**
         * <code>SOLID = 1;</code>
         */
        public static final int SOLID_VALUE = 1;
        /**
         * <code>DASHED = 2;</code>
         */
        public static final int DASHED_VALUE = 2;


        public final int getNumber() {
          return value;
        }

        /**
         * @deprecated Use {@link #forNumber(int)} instead.
         */
        @java.lang.Deprecated
        public static LineType valueOf(int value) {
          return forNumber(value);
        }

        public static LineType forNumber(int value) {
          switch (value) {
            case 0: return UNKNOWN;
            case 1: return SOLID;
            case 2: return DASHED;
            default: return null;
          }
        }

        public static com.google.protobuf.Internal.EnumLiteMap<LineType>
            internalGetValueMap() {
          return internalValueMap;
        }
        private static final com.google.protobuf.Internal.EnumLiteMap<
            LineType> internalValueMap =
              new com.google.protobuf.Internal.EnumLiteMap<LineType>() {
                public LineType findValueByNumber(int number) {
                  return LineType.forNumber(number);
                }
              };

        public final com.google.protobuf.Descriptors.EnumValueDescriptor
            getValueDescriptor() {
          return getDescriptor().getValues().get(ordinal());
        }
        public final com.google.protobuf.Descriptors.EnumDescriptor
            getDescriptorForType() {
          return getDescriptor();
        }
        public static final com.google.protobuf.Descriptors.EnumDescriptor
            getDescriptor() {
          return mediapipe.RenderDataOuterClass.RenderAnnotation.Line.getDescriptor().getEnumTypes().get(0);
        }

        private static final LineType[] VALUES = values();

        public static LineType valueOf(
            com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
          if (desc.getType() != getDescriptor()) {
            throw new java.lang.IllegalArgumentException(
              "EnumValueDescriptor is not for this type.");
          }
          return VALUES[desc.getIndex()];
        }

        private final int value;

        private LineType(int value) {
          this.value = value;
        }

        // @@protoc_insertion_point(enum_scope:mediapipe.RenderAnnotation.Line.LineType)
      }

      private int bitField0_;
      public static final int X_START_FIELD_NUMBER = 1;
      private double xStart_;
      /**
       * <code>optional double x_start = 1;</code>
       */
      public boolean hasXStart() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional double x_start = 1;</code>
       */
      public double getXStart() {
        return xStart_;
      }

      public static final int Y_START_FIELD_NUMBER = 2;
      private double yStart_;
      /**
       * <code>optional double y_start = 2;</code>
       */
      public boolean hasYStart() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional double y_start = 2;</code>
       */
      public double getYStart() {
        return yStart_;
      }

      public static final int X_END_FIELD_NUMBER = 3;
      private double xEnd_;
      /**
       * <code>optional double x_end = 3;</code>
       */
      public boolean hasXEnd() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional double x_end = 3;</code>
       */
      public double getXEnd() {
        return xEnd_;
      }

      public static final int Y_END_FIELD_NUMBER = 4;
      private double yEnd_;
      /**
       * <code>optional double y_end = 4;</code>
       */
      public boolean hasYEnd() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional double y_end = 4;</code>
       */
      public double getYEnd() {
        return yEnd_;
      }

      public static final int NORMALIZED_FIELD_NUMBER = 5;
      private boolean normalized_;
      /**
       * <code>optional bool normalized = 5 [default = false];</code>
       */
      public boolean hasNormalized() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional bool normalized = 5 [default = false];</code>
       */
      public boolean getNormalized() {
        return normalized_;
      }

      public static final int LINE_TYPE_FIELD_NUMBER = 6;
      private int lineType_;
      /**
       * <code>optional .mediapipe.RenderAnnotation.Line.LineType line_type = 6 [default = SOLID];</code>
       */
      public boolean hasLineType() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional .mediapipe.RenderAnnotation.Line.LineType line_type = 6 [default = SOLID];</code>
       */
      public mediapipe.RenderDataOuterClass.RenderAnnotation.Line.LineType getLineType() {
        mediapipe.RenderDataOuterClass.RenderAnnotation.Line.LineType result = mediapipe.RenderDataOuterClass.RenderAnnotation.Line.LineType.valueOf(lineType_);
        return result == null ? mediapipe.RenderDataOuterClass.RenderAnnotation.Line.LineType.SOLID : result;
      }

      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeDouble(1, xStart_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeDouble(2, yStart_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          output.writeDouble(3, xEnd_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          output.writeDouble(4, yEnd_);
        }
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          output.writeBool(5, normalized_);
        }
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          output.writeEnum(6, lineType_);
        }
        unknownFields.writeTo(output);
      }

      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeDoubleSize(1, xStart_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeDoubleSize(2, yStart_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          size += com.google.protobuf.CodedOutputStream
            .computeDoubleSize(3, xEnd_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          size += com.google.protobuf.CodedOutputStream
            .computeDoubleSize(4, yEnd_);
        }
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBoolSize(5, normalized_);
        }
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(6, lineType_);
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof mediapipe.RenderDataOuterClass.RenderAnnotation.Line)) {
          return super.equals(obj);
        }
        mediapipe.RenderDataOuterClass.RenderAnnotation.Line other = (mediapipe.RenderDataOuterClass.RenderAnnotation.Line) obj;

        boolean result = true;
        result = result && (hasXStart() == other.hasXStart());
        if (hasXStart()) {
          result = result && (
              java.lang.Double.doubleToLongBits(getXStart())
              == java.lang.Double.doubleToLongBits(
                  other.getXStart()));
        }
        result = result && (hasYStart() == other.hasYStart());
        if (hasYStart()) {
          result = result && (
              java.lang.Double.doubleToLongBits(getYStart())
              == java.lang.Double.doubleToLongBits(
                  other.getYStart()));
        }
        result = result && (hasXEnd() == other.hasXEnd());
        if (hasXEnd()) {
          result = result && (
              java.lang.Double.doubleToLongBits(getXEnd())
              == java.lang.Double.doubleToLongBits(
                  other.getXEnd()));
        }
        result = result && (hasYEnd() == other.hasYEnd());
        if (hasYEnd()) {
          result = result && (
              java.lang.Double.doubleToLongBits(getYEnd())
              == java.lang.Double.doubleToLongBits(
                  other.getYEnd()));
        }
        result = result && (hasNormalized() == other.hasNormalized());
        if (hasNormalized()) {
          result = result && (getNormalized()
              == other.getNormalized());
        }
        result = result && (hasLineType() == other.hasLineType());
        if (hasLineType()) {
          result = result && lineType_ == other.lineType_;
        }
        result = result && unknownFields.equals(other.unknownFields);
        return result;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptorForType().hashCode();
        if (hasXStart()) {
          hash = (37 * hash) + X_START_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
              java.lang.Double.doubleToLongBits(getXStart()));
        }
        if (hasYStart()) {
          hash = (37 * hash) + Y_START_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
              java.lang.Double.doubleToLongBits(getYStart()));
        }
        if (hasXEnd()) {
          hash = (37 * hash) + X_END_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
              java.lang.Double.doubleToLongBits(getXEnd()));
        }
        if (hasYEnd()) {
          hash = (37 * hash) + Y_END_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
              java.lang.Double.doubleToLongBits(getYEnd()));
        }
        if (hasNormalized()) {
          hash = (37 * hash) + NORMALIZED_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
              getNormalized());
        }
        if (hasLineType()) {
          hash = (37 * hash) + LINE_TYPE_FIELD_NUMBER;
          hash = (53 * hash) + lineType_;
        }
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static mediapipe.RenderDataOuterClass.RenderAnnotation.Line parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static mediapipe.RenderDataOuterClass.RenderAnnotation.Line parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static mediapipe.RenderDataOuterClass.RenderAnnotation.Line parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static mediapipe.RenderDataOuterClass.RenderAnnotation.Line parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static mediapipe.RenderDataOuterClass.RenderAnnotation.Line parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static mediapipe.RenderDataOuterClass.RenderAnnotation.Line parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static mediapipe.RenderDataOuterClass.RenderAnnotation.Line parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static mediapipe.RenderDataOuterClass.RenderAnnotation.Line parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static mediapipe.RenderDataOuterClass.RenderAnnotation.Line parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static mediapipe.RenderDataOuterClass.RenderAnnotation.Line parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(mediapipe.RenderDataOuterClass.RenderAnnotation.Line prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code mediapipe.RenderAnnotation.Line}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:mediapipe.RenderAnnotation.Line)
          mediapipe.RenderDataOuterClass.RenderAnnotation.LineOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return mediapipe.RenderDataOuterClass.internal_static_mediapipe_RenderAnnotation_Line_descriptor;
        }

        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return mediapipe.RenderDataOuterClass.internal_static_mediapipe_RenderAnnotation_Line_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  mediapipe.RenderDataOuterClass.RenderAnnotation.Line.class, mediapipe.RenderDataOuterClass.RenderAnnotation.Line.Builder.class);
        }

        // Construct using mediapipe.RenderDataOuterClass.RenderAnnotation.Line.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        public Builder clear() {
          super.clear();
          xStart_ = 0D;
          bitField0_ = (bitField0_ & ~0x00000001);
          yStart_ = 0D;
          bitField0_ = (bitField0_ & ~0x00000002);
          xEnd_ = 0D;
          bitField0_ = (bitField0_ & ~0x00000004);
          yEnd_ = 0D;
          bitField0_ = (bitField0_ & ~0x00000008);
          normalized_ = false;
          bitField0_ = (bitField0_ & ~0x00000010);
          lineType_ = 1;
          bitField0_ = (bitField0_ & ~0x00000020);
          return this;
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return mediapipe.RenderDataOuterClass.internal_static_mediapipe_RenderAnnotation_Line_descriptor;
        }

        public mediapipe.RenderDataOuterClass.RenderAnnotation.Line getDefaultInstanceForType() {
          return mediapipe.RenderDataOuterClass.RenderAnnotation.Line.getDefaultInstance();
        }

        public mediapipe.RenderDataOuterClass.RenderAnnotation.Line build() {
          mediapipe.RenderDataOuterClass.RenderAnnotation.Line result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public mediapipe.RenderDataOuterClass.RenderAnnotation.Line buildPartial() {
          mediapipe.RenderDataOuterClass.RenderAnnotation.Line result = new mediapipe.RenderDataOuterClass.RenderAnnotation.Line(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.xStart_ = xStart_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.yStart_ = yStart_;
          if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
            to_bitField0_ |= 0x00000004;
          }
          result.xEnd_ = xEnd_;
          if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
            to_bitField0_ |= 0x00000008;
          }
          result.yEnd_ = yEnd_;
          if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
            to_bitField0_ |= 0x00000010;
          }
          result.normalized_ = normalized_;
          if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
            to_bitField0_ |= 0x00000020;
          }
          result.lineType_ = lineType_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder clone() {
          return (Builder) super.clone();
        }
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            Object value) {
          return (Builder) super.setField(field, value);
        }
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return (Builder) super.clearField(field);
        }
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return (Builder) super.clearOneof(oneof);
        }
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, Object value) {
          return (Builder) super.setRepeatedField(field, index, value);
        }
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            Object value) {
          return (Builder) super.addRepeatedField(field, value);
        }
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof mediapipe.RenderDataOuterClass.RenderAnnotation.Line) {
            return mergeFrom((mediapipe.RenderDataOuterClass.RenderAnnotation.Line)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(mediapipe.RenderDataOuterClass.RenderAnnotation.Line other) {
          if (other == mediapipe.RenderDataOuterClass.RenderAnnotation.Line.getDefaultInstance()) return this;
          if (other.hasXStart()) {
            setXStart(other.getXStart());
          }
          if (other.hasYStart()) {
            setYStart(other.getYStart());
          }
          if (other.hasXEnd()) {
            setXEnd(other.getXEnd());
          }
          if (other.hasYEnd()) {
            setYEnd(other.getYEnd());
          }
          if (other.hasNormalized()) {
            setNormalized(other.getNormalized());
          }
          if (other.hasLineType()) {
            setLineType(other.getLineType());
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          mediapipe.RenderDataOuterClass.RenderAnnotation.Line parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (mediapipe.RenderDataOuterClass.RenderAnnotation.Line) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private double xStart_ ;
        /**
         * <code>optional double x_start = 1;</code>
         */
        public boolean hasXStart() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional double x_start = 1;</code>
         */
        public double getXStart() {
          return xStart_;
        }
        /**
         * <code>optional double x_start = 1;</code>
         */
        public Builder setXStart(double value) {
          bitField0_ |= 0x00000001;
          xStart_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional double x_start = 1;</code>
         */
        public Builder clearXStart() {
          bitField0_ = (bitField0_ & ~0x00000001);
          xStart_ = 0D;
          onChanged();
          return this;
        }

        private double yStart_ ;
        /**
         * <code>optional double y_start = 2;</code>
         */
        public boolean hasYStart() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>optional double y_start = 2;</code>
         */
        public double getYStart() {
          return yStart_;
        }
        /**
         * <code>optional double y_start = 2;</code>
         */
        public Builder setYStart(double value) {
          bitField0_ |= 0x00000002;
          yStart_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional double y_start = 2;</code>
         */
        public Builder clearYStart() {
          bitField0_ = (bitField0_ & ~0x00000002);
          yStart_ = 0D;
          onChanged();
          return this;
        }

        private double xEnd_ ;
        /**
         * <code>optional double x_end = 3;</code>
         */
        public boolean hasXEnd() {
          return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        /**
         * <code>optional double x_end = 3;</code>
         */
        public double getXEnd() {
          return xEnd_;
        }
        /**
         * <code>optional double x_end = 3;</code>
         */
        public Builder setXEnd(double value) {
          bitField0_ |= 0x00000004;
          xEnd_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional double x_end = 3;</code>
         */
        public Builder clearXEnd() {
          bitField0_ = (bitField0_ & ~0x00000004);
          xEnd_ = 0D;
          onChanged();
          return this;
        }

        private double yEnd_ ;
        /**
         * <code>optional double y_end = 4;</code>
         */
        public boolean hasYEnd() {
          return ((bitField0_ & 0x00000008) == 0x00000008);
        }
        /**
         * <code>optional double y_end = 4;</code>
         */
        public double getYEnd() {
          return yEnd_;
        }
        /**
         * <code>optional double y_end = 4;</code>
         */
        public Builder setYEnd(double value) {
          bitField0_ |= 0x00000008;
          yEnd_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional double y_end = 4;</code>
         */
        public Builder clearYEnd() {
          bitField0_ = (bitField0_ & ~0x00000008);
          yEnd_ = 0D;
          onChanged();
          return this;
        }

        private boolean normalized_ ;
        /**
         * <code>optional bool normalized = 5 [default = false];</code>
         */
        public boolean hasNormalized() {
          return ((bitField0_ & 0x00000010) == 0x00000010);
        }
        /**
         * <code>optional bool normalized = 5 [default = false];</code>
         */
        public boolean getNormalized() {
          return normalized_;
        }
        /**
         * <code>optional bool normalized = 5 [default = false];</code>
         */
        public Builder setNormalized(boolean value) {
          bitField0_ |= 0x00000010;
          normalized_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional bool normalized = 5 [default = false];</code>
         */
        public Builder clearNormalized() {
          bitField0_ = (bitField0_ & ~0x00000010);
          normalized_ = false;
          onChanged();
          return this;
        }

        private int lineType_ = 1;
        /**
         * <code>optional .mediapipe.RenderAnnotation.Line.LineType line_type = 6 [default = SOLID];</code>
         */
        public boolean hasLineType() {
          return ((bitField0_ & 0x00000020) == 0x00000020);
        }
        /**
         * <code>optional .mediapipe.RenderAnnotation.Line.LineType line_type = 6 [default = SOLID];</code>
         */
        public mediapipe.RenderDataOuterClass.RenderAnnotation.Line.LineType getLineType() {
          mediapipe.RenderDataOuterClass.RenderAnnotation.Line.LineType result = mediapipe.RenderDataOuterClass.RenderAnnotation.Line.LineType.valueOf(lineType_);
          return result == null ? mediapipe.RenderDataOuterClass.RenderAnnotation.Line.LineType.SOLID : result;
        }
        /**
         * <code>optional .mediapipe.RenderAnnotation.Line.LineType line_type = 6 [default = SOLID];</code>
         */
        public Builder setLineType(mediapipe.RenderDataOuterClass.RenderAnnotation.Line.LineType value) {
          if (value == null) {
            throw new NullPointerException();
          }
          bitField0_ |= 0x00000020;
          lineType_ = value.getNumber();
          onChanged();
          return this;
        }
        /**
         * <code>optional .mediapipe.RenderAnnotation.Line.LineType line_type = 6 [default = SOLID];</code>
         */
        public Builder clearLineType() {
          bitField0_ = (bitField0_ & ~0x00000020);
          lineType_ = 1;
          onChanged();
          return this;
        }
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:mediapipe.RenderAnnotation.Line)
      }

      // @@protoc_insertion_point(class_scope:mediapipe.RenderAnnotation.Line)
      private static final mediapipe.RenderDataOuterClass.RenderAnnotation.Line DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new mediapipe.RenderDataOuterClass.RenderAnnotation.Line();
      }

      public static mediapipe.RenderDataOuterClass.RenderAnnotation.Line getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      @java.lang.Deprecated public static final com.google.protobuf.Parser<Line>
          PARSER = new com.google.protobuf.AbstractParser<Line>() {
        public Line parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
            return new Line(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<Line> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<Line> getParserForType() {
        return PARSER;
      }

      public mediapipe.RenderDataOuterClass.RenderAnnotation.Line getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface GradientLineOrBuilder extends
        // @@protoc_insertion_point(interface_extends:mediapipe.RenderAnnotation.GradientLine)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional double x_start = 1;</code>
       */
      boolean hasXStart();
      /**
       * <code>optional double x_start = 1;</code>
       */
      double getXStart();

      /**
       * <code>optional double y_start = 2;</code>
       */
      boolean hasYStart();
      /**
       * <code>optional double y_start = 2;</code>
       */
      double getYStart();

      /**
       * <code>optional double x_end = 3;</code>
       */
      boolean hasXEnd();
      /**
       * <code>optional double x_end = 3;</code>
       */
      double getXEnd();

      /**
       * <code>optional double y_end = 4;</code>
       */
      boolean hasYEnd();
      /**
       * <code>optional double y_end = 4;</code>
       */
      double getYEnd();

      /**
       * <code>optional bool normalized = 5 [default = false];</code>
       */
      boolean hasNormalized();
      /**
       * <code>optional bool normalized = 5 [default = false];</code>
       */
      boolean getNormalized();

      /**
       * <pre>
       * Linearly interpolate between color1 and color2 along the line.
       * </pre>
       *
       * <code>optional .mediapipe.Color color1 = 6;</code>
       */
      boolean hasColor1();
      /**
       * <pre>
       * Linearly interpolate between color1 and color2 along the line.
       * </pre>
       *
       * <code>optional .mediapipe.Color color1 = 6;</code>
       */
      mediapipe.ColorOuterClass.Color getColor1();
      /**
       * <pre>
       * Linearly interpolate between color1 and color2 along the line.
       * </pre>
       *
       * <code>optional .mediapipe.Color color1 = 6;</code>
       */
      mediapipe.ColorOuterClass.ColorOrBuilder getColor1OrBuilder();

      /**
       * <code>optional .mediapipe.Color color2 = 7;</code>
       */
      boolean hasColor2();
      /**
       * <code>optional .mediapipe.Color color2 = 7;</code>
       */
      mediapipe.ColorOuterClass.Color getColor2();
      /**
       * <code>optional .mediapipe.Color color2 = 7;</code>
       */
      mediapipe.ColorOuterClass.ColorOrBuilder getColor2OrBuilder();
    }
    /**
     * Protobuf type {@code mediapipe.RenderAnnotation.GradientLine}
     */
    public  static final class GradientLine extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:mediapipe.RenderAnnotation.GradientLine)
        GradientLineOrBuilder {
      // Use GradientLine.newBuilder() to construct.
      private GradientLine(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private GradientLine() {
        xStart_ = 0D;
        yStart_ = 0D;
        xEnd_ = 0D;
        yEnd_ = 0D;
        normalized_ = false;
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private GradientLine(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 9: {
                bitField0_ |= 0x00000001;
                xStart_ = input.readDouble();
                break;
              }
              case 17: {
                bitField0_ |= 0x00000002;
                yStart_ = input.readDouble();
                break;
              }
              case 25: {
                bitField0_ |= 0x00000004;
                xEnd_ = input.readDouble();
                break;
              }
              case 33: {
                bitField0_ |= 0x00000008;
                yEnd_ = input.readDouble();
                break;
              }
              case 40: {
                bitField0_ |= 0x00000010;
                normalized_ = input.readBool();
                break;
              }
              case 50: {
                mediapipe.ColorOuterClass.Color.Builder subBuilder = null;
                if (((bitField0_ & 0x00000020) == 0x00000020)) {
                  subBuilder = color1_.toBuilder();
                }
                color1_ = input.readMessage(mediapipe.ColorOuterClass.Color.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(color1_);
                  color1_ = subBuilder.buildPartial();
                }
                bitField0_ |= 0x00000020;
                break;
              }
              case 58: {
                mediapipe.ColorOuterClass.Color.Builder subBuilder = null;
                if (((bitField0_ & 0x00000040) == 0x00000040)) {
                  subBuilder = color2_.toBuilder();
                }
                color2_ = input.readMessage(mediapipe.ColorOuterClass.Color.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(color2_);
                  color2_ = subBuilder.buildPartial();
                }
                bitField0_ |= 0x00000040;
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return mediapipe.RenderDataOuterClass.internal_static_mediapipe_RenderAnnotation_GradientLine_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return mediapipe.RenderDataOuterClass.internal_static_mediapipe_RenderAnnotation_GradientLine_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                mediapipe.RenderDataOuterClass.RenderAnnotation.GradientLine.class, mediapipe.RenderDataOuterClass.RenderAnnotation.GradientLine.Builder.class);
      }

      private int bitField0_;
      public static final int X_START_FIELD_NUMBER = 1;
      private double xStart_;
      /**
       * <code>optional double x_start = 1;</code>
       */
      public boolean hasXStart() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional double x_start = 1;</code>
       */
      public double getXStart() {
        return xStart_;
      }

      public static final int Y_START_FIELD_NUMBER = 2;
      private double yStart_;
      /**
       * <code>optional double y_start = 2;</code>
       */
      public boolean hasYStart() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional double y_start = 2;</code>
       */
      public double getYStart() {
        return yStart_;
      }

      public static final int X_END_FIELD_NUMBER = 3;
      private double xEnd_;
      /**
       * <code>optional double x_end = 3;</code>
       */
      public boolean hasXEnd() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional double x_end = 3;</code>
       */
      public double getXEnd() {
        return xEnd_;
      }

      public static final int Y_END_FIELD_NUMBER = 4;
      private double yEnd_;
      /**
       * <code>optional double y_end = 4;</code>
       */
      public boolean hasYEnd() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional double y_end = 4;</code>
       */
      public double getYEnd() {
        return yEnd_;
      }

      public static final int NORMALIZED_FIELD_NUMBER = 5;
      private boolean normalized_;
      /**
       * <code>optional bool normalized = 5 [default = false];</code>
       */
      public boolean hasNormalized() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional bool normalized = 5 [default = false];</code>
       */
      public boolean getNormalized() {
        return normalized_;
      }

      public static final int COLOR1_FIELD_NUMBER = 6;
      private mediapipe.ColorOuterClass.Color color1_;
      /**
       * <pre>
       * Linearly interpolate between color1 and color2 along the line.
       * </pre>
       *
       * <code>optional .mediapipe.Color color1 = 6;</code>
       */
      public boolean hasColor1() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <pre>
       * Linearly interpolate between color1 and color2 along the line.
       * </pre>
       *
       * <code>optional .mediapipe.Color color1 = 6;</code>
       */
      public mediapipe.ColorOuterClass.Color getColor1() {
        return color1_ == null ? mediapipe.ColorOuterClass.Color.getDefaultInstance() : color1_;
      }
      /**
       * <pre>
       * Linearly interpolate between color1 and color2 along the line.
       * </pre>
       *
       * <code>optional .mediapipe.Color color1 = 6;</code>
       */
      public mediapipe.ColorOuterClass.ColorOrBuilder getColor1OrBuilder() {
        return color1_ == null ? mediapipe.ColorOuterClass.Color.getDefaultInstance() : color1_;
      }

      public static final int COLOR2_FIELD_NUMBER = 7;
      private mediapipe.ColorOuterClass.Color color2_;
      /**
       * <code>optional .mediapipe.Color color2 = 7;</code>
       */
      public boolean hasColor2() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional .mediapipe.Color color2 = 7;</code>
       */
      public mediapipe.ColorOuterClass.Color getColor2() {
        return color2_ == null ? mediapipe.ColorOuterClass.Color.getDefaultInstance() : color2_;
      }
      /**
       * <code>optional .mediapipe.Color color2 = 7;</code>
       */
      public mediapipe.ColorOuterClass.ColorOrBuilder getColor2OrBuilder() {
        return color2_ == null ? mediapipe.ColorOuterClass.Color.getDefaultInstance() : color2_;
      }

      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeDouble(1, xStart_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeDouble(2, yStart_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          output.writeDouble(3, xEnd_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          output.writeDouble(4, yEnd_);
        }
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          output.writeBool(5, normalized_);
        }
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          output.writeMessage(6, getColor1());
        }
        if (((bitField0_ & 0x00000040) == 0x00000040)) {
          output.writeMessage(7, getColor2());
        }
        unknownFields.writeTo(output);
      }

      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeDoubleSize(1, xStart_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeDoubleSize(2, yStart_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          size += com.google.protobuf.CodedOutputStream
            .computeDoubleSize(3, xEnd_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          size += com.google.protobuf.CodedOutputStream
            .computeDoubleSize(4, yEnd_);
        }
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBoolSize(5, normalized_);
        }
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(6, getColor1());
        }
        if (((bitField0_ & 0x00000040) == 0x00000040)) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(7, getColor2());
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof mediapipe.RenderDataOuterClass.RenderAnnotation.GradientLine)) {
          return super.equals(obj);
        }
        mediapipe.RenderDataOuterClass.RenderAnnotation.GradientLine other = (mediapipe.RenderDataOuterClass.RenderAnnotation.GradientLine) obj;

        boolean result = true;
        result = result && (hasXStart() == other.hasXStart());
        if (hasXStart()) {
          result = result && (
              java.lang.Double.doubleToLongBits(getXStart())
              == java.lang.Double.doubleToLongBits(
                  other.getXStart()));
        }
        result = result && (hasYStart() == other.hasYStart());
        if (hasYStart()) {
          result = result && (
              java.lang.Double.doubleToLongBits(getYStart())
              == java.lang.Double.doubleToLongBits(
                  other.getYStart()));
        }
        result = result && (hasXEnd() == other.hasXEnd());
        if (hasXEnd()) {
          result = result && (
              java.lang.Double.doubleToLongBits(getXEnd())
              == java.lang.Double.doubleToLongBits(
                  other.getXEnd()));
        }
        result = result && (hasYEnd() == other.hasYEnd());
        if (hasYEnd()) {
          result = result && (
              java.lang.Double.doubleToLongBits(getYEnd())
              == java.lang.Double.doubleToLongBits(
                  other.getYEnd()));
        }
        result = result && (hasNormalized() == other.hasNormalized());
        if (hasNormalized()) {
          result = result && (getNormalized()
              == other.getNormalized());
        }
        result = result && (hasColor1() == other.hasColor1());
        if (hasColor1()) {
          result = result && getColor1()
              .equals(other.getColor1());
        }
        result = result && (hasColor2() == other.hasColor2());
        if (hasColor2()) {
          result = result && getColor2()
              .equals(other.getColor2());
        }
        result = result && unknownFields.equals(other.unknownFields);
        return result;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptorForType().hashCode();
        if (hasXStart()) {
          hash = (37 * hash) + X_START_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
              java.lang.Double.doubleToLongBits(getXStart()));
        }
        if (hasYStart()) {
          hash = (37 * hash) + Y_START_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
              java.lang.Double.doubleToLongBits(getYStart()));
        }
        if (hasXEnd()) {
          hash = (37 * hash) + X_END_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
              java.lang.Double.doubleToLongBits(getXEnd()));
        }
        if (hasYEnd()) {
          hash = (37 * hash) + Y_END_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
              java.lang.Double.doubleToLongBits(getYEnd()));
        }
        if (hasNormalized()) {
          hash = (37 * hash) + NORMALIZED_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
              getNormalized());
        }
        if (hasColor1()) {
          hash = (37 * hash) + COLOR1_FIELD_NUMBER;
          hash = (53 * hash) + getColor1().hashCode();
        }
        if (hasColor2()) {
          hash = (37 * hash) + COLOR2_FIELD_NUMBER;
          hash = (53 * hash) + getColor2().hashCode();
        }
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static mediapipe.RenderDataOuterClass.RenderAnnotation.GradientLine parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static mediapipe.RenderDataOuterClass.RenderAnnotation.GradientLine parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static mediapipe.RenderDataOuterClass.RenderAnnotation.GradientLine parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static mediapipe.RenderDataOuterClass.RenderAnnotation.GradientLine parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static mediapipe.RenderDataOuterClass.RenderAnnotation.GradientLine parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static mediapipe.RenderDataOuterClass.RenderAnnotation.GradientLine parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static mediapipe.RenderDataOuterClass.RenderAnnotation.GradientLine parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static mediapipe.RenderDataOuterClass.RenderAnnotation.GradientLine parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static mediapipe.RenderDataOuterClass.RenderAnnotation.GradientLine parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static mediapipe.RenderDataOuterClass.RenderAnnotation.GradientLine parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(mediapipe.RenderDataOuterClass.RenderAnnotation.GradientLine prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code mediapipe.RenderAnnotation.GradientLine}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:mediapipe.RenderAnnotation.GradientLine)
          mediapipe.RenderDataOuterClass.RenderAnnotation.GradientLineOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return mediapipe.RenderDataOuterClass.internal_static_mediapipe_RenderAnnotation_GradientLine_descriptor;
        }

        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return mediapipe.RenderDataOuterClass.internal_static_mediapipe_RenderAnnotation_GradientLine_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  mediapipe.RenderDataOuterClass.RenderAnnotation.GradientLine.class, mediapipe.RenderDataOuterClass.RenderAnnotation.GradientLine.Builder.class);
        }

        // Construct using mediapipe.RenderDataOuterClass.RenderAnnotation.GradientLine.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
            getColor1FieldBuilder();
            getColor2FieldBuilder();
          }
        }
        public Builder clear() {
          super.clear();
          xStart_ = 0D;
          bitField0_ = (bitField0_ & ~0x00000001);
          yStart_ = 0D;
          bitField0_ = (bitField0_ & ~0x00000002);
          xEnd_ = 0D;
          bitField0_ = (bitField0_ & ~0x00000004);
          yEnd_ = 0D;
          bitField0_ = (bitField0_ & ~0x00000008);
          normalized_ = false;
          bitField0_ = (bitField0_ & ~0x00000010);
          if (color1Builder_ == null) {
            color1_ = null;
          } else {
            color1Builder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000020);
          if (color2Builder_ == null) {
            color2_ = null;
          } else {
            color2Builder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000040);
          return this;
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return mediapipe.RenderDataOuterClass.internal_static_mediapipe_RenderAnnotation_GradientLine_descriptor;
        }

        public mediapipe.RenderDataOuterClass.RenderAnnotation.GradientLine getDefaultInstanceForType() {
          return mediapipe.RenderDataOuterClass.RenderAnnotation.GradientLine.getDefaultInstance();
        }

        public mediapipe.RenderDataOuterClass.RenderAnnotation.GradientLine build() {
          mediapipe.RenderDataOuterClass.RenderAnnotation.GradientLine result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public mediapipe.RenderDataOuterClass.RenderAnnotation.GradientLine buildPartial() {
          mediapipe.RenderDataOuterClass.RenderAnnotation.GradientLine result = new mediapipe.RenderDataOuterClass.RenderAnnotation.GradientLine(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.xStart_ = xStart_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.yStart_ = yStart_;
          if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
            to_bitField0_ |= 0x00000004;
          }
          result.xEnd_ = xEnd_;
          if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
            to_bitField0_ |= 0x00000008;
          }
          result.yEnd_ = yEnd_;
          if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
            to_bitField0_ |= 0x00000010;
          }
          result.normalized_ = normalized_;
          if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
            to_bitField0_ |= 0x00000020;
          }
          if (color1Builder_ == null) {
            result.color1_ = color1_;
          } else {
            result.color1_ = color1Builder_.build();
          }
          if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
            to_bitField0_ |= 0x00000040;
          }
          if (color2Builder_ == null) {
            result.color2_ = color2_;
          } else {
            result.color2_ = color2Builder_.build();
          }
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder clone() {
          return (Builder) super.clone();
        }
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            Object value) {
          return (Builder) super.setField(field, value);
        }
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return (Builder) super.clearField(field);
        }
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return (Builder) super.clearOneof(oneof);
        }
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, Object value) {
          return (Builder) super.setRepeatedField(field, index, value);
        }
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            Object value) {
          return (Builder) super.addRepeatedField(field, value);
        }
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof mediapipe.RenderDataOuterClass.RenderAnnotation.GradientLine) {
            return mergeFrom((mediapipe.RenderDataOuterClass.RenderAnnotation.GradientLine)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(mediapipe.RenderDataOuterClass.RenderAnnotation.GradientLine other) {
          if (other == mediapipe.RenderDataOuterClass.RenderAnnotation.GradientLine.getDefaultInstance()) return this;
          if (other.hasXStart()) {
            setXStart(other.getXStart());
          }
          if (other.hasYStart()) {
            setYStart(other.getYStart());
          }
          if (other.hasXEnd()) {
            setXEnd(other.getXEnd());
          }
          if (other.hasYEnd()) {
            setYEnd(other.getYEnd());
          }
          if (other.hasNormalized()) {
            setNormalized(other.getNormalized());
          }
          if (other.hasColor1()) {
            mergeColor1(other.getColor1());
          }
          if (other.hasColor2()) {
            mergeColor2(other.getColor2());
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          mediapipe.RenderDataOuterClass.RenderAnnotation.GradientLine parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (mediapipe.RenderDataOuterClass.RenderAnnotation.GradientLine) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private double xStart_ ;
        /**
         * <code>optional double x_start = 1;</code>
         */
        public boolean hasXStart() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional double x_start = 1;</code>
         */
        public double getXStart() {
          return xStart_;
        }
        /**
         * <code>optional double x_start = 1;</code>
         */
        public Builder setXStart(double value) {
          bitField0_ |= 0x00000001;
          xStart_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional double x_start = 1;</code>
         */
        public Builder clearXStart() {
          bitField0_ = (bitField0_ & ~0x00000001);
          xStart_ = 0D;
          onChanged();
          return this;
        }

        private double yStart_ ;
        /**
         * <code>optional double y_start = 2;</code>
         */
        public boolean hasYStart() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>optional double y_start = 2;</code>
         */
        public double getYStart() {
          return yStart_;
        }
        /**
         * <code>optional double y_start = 2;</code>
         */
        public Builder setYStart(double value) {
          bitField0_ |= 0x00000002;
          yStart_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional double y_start = 2;</code>
         */
        public Builder clearYStart() {
          bitField0_ = (bitField0_ & ~0x00000002);
          yStart_ = 0D;
          onChanged();
          return this;
        }

        private double xEnd_ ;
        /**
         * <code>optional double x_end = 3;</code>
         */
        public boolean hasXEnd() {
          return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        /**
         * <code>optional double x_end = 3;</code>
         */
        public double getXEnd() {
          return xEnd_;
        }
        /**
         * <code>optional double x_end = 3;</code>
         */
        public Builder setXEnd(double value) {
          bitField0_ |= 0x00000004;
          xEnd_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional double x_end = 3;</code>
         */
        public Builder clearXEnd() {
          bitField0_ = (bitField0_ & ~0x00000004);
          xEnd_ = 0D;
          onChanged();
          return this;
        }

        private double yEnd_ ;
        /**
         * <code>optional double y_end = 4;</code>
         */
        public boolean hasYEnd() {
          return ((bitField0_ & 0x00000008) == 0x00000008);
        }
        /**
         * <code>optional double y_end = 4;</code>
         */
        public double getYEnd() {
          return yEnd_;
        }
        /**
         * <code>optional double y_end = 4;</code>
         */
        public Builder setYEnd(double value) {
          bitField0_ |= 0x00000008;
          yEnd_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional double y_end = 4;</code>
         */
        public Builder clearYEnd() {
          bitField0_ = (bitField0_ & ~0x00000008);
          yEnd_ = 0D;
          onChanged();
          return this;
        }

        private boolean normalized_ ;
        /**
         * <code>optional bool normalized = 5 [default = false];</code>
         */
        public boolean hasNormalized() {
          return ((bitField0_ & 0x00000010) == 0x00000010);
        }
        /**
         * <code>optional bool normalized = 5 [default = false];</code>
         */
        public boolean getNormalized() {
          return normalized_;
        }
        /**
         * <code>optional bool normalized = 5 [default = false];</code>
         */
        public Builder setNormalized(boolean value) {
          bitField0_ |= 0x00000010;
          normalized_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional bool normalized = 5 [default = false];</code>
         */
        public Builder clearNormalized() {
          bitField0_ = (bitField0_ & ~0x00000010);
          normalized_ = false;
          onChanged();
          return this;
        }

        private mediapipe.ColorOuterClass.Color color1_ = null;
        private com.google.protobuf.SingleFieldBuilderV3<
            mediapipe.ColorOuterClass.Color, mediapipe.ColorOuterClass.Color.Builder, mediapipe.ColorOuterClass.ColorOrBuilder> color1Builder_;
        /**
         * <pre>
         * Linearly interpolate between color1 and color2 along the line.
         * </pre>
         *
         * <code>optional .mediapipe.Color color1 = 6;</code>
         */
        public boolean hasColor1() {
          return ((bitField0_ & 0x00000020) == 0x00000020);
        }
        /**
         * <pre>
         * Linearly interpolate between color1 and color2 along the line.
         * </pre>
         *
         * <code>optional .mediapipe.Color color1 = 6;</code>
         */
        public mediapipe.ColorOuterClass.Color getColor1() {
          if (color1Builder_ == null) {
            return color1_ == null ? mediapipe.ColorOuterClass.Color.getDefaultInstance() : color1_;
          } else {
            return color1Builder_.getMessage();
          }
        }
        /**
         * <pre>
         * Linearly interpolate between color1 and color2 along the line.
         * </pre>
         *
         * <code>optional .mediapipe.Color color1 = 6;</code>
         */
        public Builder setColor1(mediapipe.ColorOuterClass.Color value) {
          if (color1Builder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            color1_ = value;
            onChanged();
          } else {
            color1Builder_.setMessage(value);
          }
          bitField0_ |= 0x00000020;
          return this;
        }
        /**
         * <pre>
         * Linearly interpolate between color1 and color2 along the line.
         * </pre>
         *
         * <code>optional .mediapipe.Color color1 = 6;</code>
         */
        public Builder setColor1(
            mediapipe.ColorOuterClass.Color.Builder builderForValue) {
          if (color1Builder_ == null) {
            color1_ = builderForValue.build();
            onChanged();
          } else {
            color1Builder_.setMessage(builderForValue.build());
          }
          bitField0_ |= 0x00000020;
          return this;
        }
        /**
         * <pre>
         * Linearly interpolate between color1 and color2 along the line.
         * </pre>
         *
         * <code>optional .mediapipe.Color color1 = 6;</code>
         */
        public Builder mergeColor1(mediapipe.ColorOuterClass.Color value) {
          if (color1Builder_ == null) {
            if (((bitField0_ & 0x00000020) == 0x00000020) &&
                color1_ != null &&
                color1_ != mediapipe.ColorOuterClass.Color.getDefaultInstance()) {
              color1_ =
                mediapipe.ColorOuterClass.Color.newBuilder(color1_).mergeFrom(value).buildPartial();
            } else {
              color1_ = value;
            }
            onChanged();
          } else {
            color1Builder_.mergeFrom(value);
          }
          bitField0_ |= 0x00000020;
          return this;
        }
        /**
         * <pre>
         * Linearly interpolate between color1 and color2 along the line.
         * </pre>
         *
         * <code>optional .mediapipe.Color color1 = 6;</code>
         */
        public Builder clearColor1() {
          if (color1Builder_ == null) {
            color1_ = null;
            onChanged();
          } else {
            color1Builder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000020);
          return this;
        }
        /**
         * <pre>
         * Linearly interpolate between color1 and color2 along the line.
         * </pre>
         *
         * <code>optional .mediapipe.Color color1 = 6;</code>
         */
        public mediapipe.ColorOuterClass.Color.Builder getColor1Builder() {
          bitField0_ |= 0x00000020;
          onChanged();
          return getColor1FieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * Linearly interpolate between color1 and color2 along the line.
         * </pre>
         *
         * <code>optional .mediapipe.Color color1 = 6;</code>
         */
        public mediapipe.ColorOuterClass.ColorOrBuilder getColor1OrBuilder() {
          if (color1Builder_ != null) {
            return color1Builder_.getMessageOrBuilder();
          } else {
            return color1_ == null ?
                mediapipe.ColorOuterClass.Color.getDefaultInstance() : color1_;
          }
        }
        /**
         * <pre>
         * Linearly interpolate between color1 and color2 along the line.
         * </pre>
         *
         * <code>optional .mediapipe.Color color1 = 6;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            mediapipe.ColorOuterClass.Color, mediapipe.ColorOuterClass.Color.Builder, mediapipe.ColorOuterClass.ColorOrBuilder> 
            getColor1FieldBuilder() {
          if (color1Builder_ == null) {
            color1Builder_ = new com.google.protobuf.SingleFieldBuilderV3<
                mediapipe.ColorOuterClass.Color, mediapipe.ColorOuterClass.Color.Builder, mediapipe.ColorOuterClass.ColorOrBuilder>(
                    getColor1(),
                    getParentForChildren(),
                    isClean());
            color1_ = null;
          }
          return color1Builder_;
        }

        private mediapipe.ColorOuterClass.Color color2_ = null;
        private com.google.protobuf.SingleFieldBuilderV3<
            mediapipe.ColorOuterClass.Color, mediapipe.ColorOuterClass.Color.Builder, mediapipe.ColorOuterClass.ColorOrBuilder> color2Builder_;
        /**
         * <code>optional .mediapipe.Color color2 = 7;</code>
         */
        public boolean hasColor2() {
          return ((bitField0_ & 0x00000040) == 0x00000040);
        }
        /**
         * <code>optional .mediapipe.Color color2 = 7;</code>
         */
        public mediapipe.ColorOuterClass.Color getColor2() {
          if (color2Builder_ == null) {
            return color2_ == null ? mediapipe.ColorOuterClass.Color.getDefaultInstance() : color2_;
          } else {
            return color2Builder_.getMessage();
          }
        }
        /**
         * <code>optional .mediapipe.Color color2 = 7;</code>
         */
        public Builder setColor2(mediapipe.ColorOuterClass.Color value) {
          if (color2Builder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            color2_ = value;
            onChanged();
          } else {
            color2Builder_.setMessage(value);
          }
          bitField0_ |= 0x00000040;
          return this;
        }
        /**
         * <code>optional .mediapipe.Color color2 = 7;</code>
         */
        public Builder setColor2(
            mediapipe.ColorOuterClass.Color.Builder builderForValue) {
          if (color2Builder_ == null) {
            color2_ = builderForValue.build();
            onChanged();
          } else {
            color2Builder_.setMessage(builderForValue.build());
          }
          bitField0_ |= 0x00000040;
          return this;
        }
        /**
         * <code>optional .mediapipe.Color color2 = 7;</code>
         */
        public Builder mergeColor2(mediapipe.ColorOuterClass.Color value) {
          if (color2Builder_ == null) {
            if (((bitField0_ & 0x00000040) == 0x00000040) &&
                color2_ != null &&
                color2_ != mediapipe.ColorOuterClass.Color.getDefaultInstance()) {
              color2_ =
                mediapipe.ColorOuterClass.Color.newBuilder(color2_).mergeFrom(value).buildPartial();
            } else {
              color2_ = value;
            }
            onChanged();
          } else {
            color2Builder_.mergeFrom(value);
          }
          bitField0_ |= 0x00000040;
          return this;
        }
        /**
         * <code>optional .mediapipe.Color color2 = 7;</code>
         */
        public Builder clearColor2() {
          if (color2Builder_ == null) {
            color2_ = null;
            onChanged();
          } else {
            color2Builder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000040);
          return this;
        }
        /**
         * <code>optional .mediapipe.Color color2 = 7;</code>
         */
        public mediapipe.ColorOuterClass.Color.Builder getColor2Builder() {
          bitField0_ |= 0x00000040;
          onChanged();
          return getColor2FieldBuilder().getBuilder();
        }
        /**
         * <code>optional .mediapipe.Color color2 = 7;</code>
         */
        public mediapipe.ColorOuterClass.ColorOrBuilder getColor2OrBuilder() {
          if (color2Builder_ != null) {
            return color2Builder_.getMessageOrBuilder();
          } else {
            return color2_ == null ?
                mediapipe.ColorOuterClass.Color.getDefaultInstance() : color2_;
          }
        }
        /**
         * <code>optional .mediapipe.Color color2 = 7;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            mediapipe.ColorOuterClass.Color, mediapipe.ColorOuterClass.Color.Builder, mediapipe.ColorOuterClass.ColorOrBuilder> 
            getColor2FieldBuilder() {
          if (color2Builder_ == null) {
            color2Builder_ = new com.google.protobuf.SingleFieldBuilderV3<
                mediapipe.ColorOuterClass.Color, mediapipe.ColorOuterClass.Color.Builder, mediapipe.ColorOuterClass.ColorOrBuilder>(
                    getColor2(),
                    getParentForChildren(),
                    isClean());
            color2_ = null;
          }
          return color2Builder_;
        }
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:mediapipe.RenderAnnotation.GradientLine)
      }

      // @@protoc_insertion_point(class_scope:mediapipe.RenderAnnotation.GradientLine)
      private static final mediapipe.RenderDataOuterClass.RenderAnnotation.GradientLine DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new mediapipe.RenderDataOuterClass.RenderAnnotation.GradientLine();
      }

      public static mediapipe.RenderDataOuterClass.RenderAnnotation.GradientLine getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      @java.lang.Deprecated public static final com.google.protobuf.Parser<GradientLine>
          PARSER = new com.google.protobuf.AbstractParser<GradientLine>() {
        public GradientLine parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
            return new GradientLine(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<GradientLine> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<GradientLine> getParserForType() {
        return PARSER;
      }

      public mediapipe.RenderDataOuterClass.RenderAnnotation.GradientLine getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface ArrowOrBuilder extends
        // @@protoc_insertion_point(interface_extends:mediapipe.RenderAnnotation.Arrow)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <pre>
       * The arrow head will be drawn at (x_end, y_end).
       * </pre>
       *
       * <code>optional double x_start = 1;</code>
       */
      boolean hasXStart();
      /**
       * <pre>
       * The arrow head will be drawn at (x_end, y_end).
       * </pre>
       *
       * <code>optional double x_start = 1;</code>
       */
      double getXStart();

      /**
       * <code>optional double y_start = 2;</code>
       */
      boolean hasYStart();
      /**
       * <code>optional double y_start = 2;</code>
       */
      double getYStart();

      /**
       * <code>optional double x_end = 3;</code>
       */
      boolean hasXEnd();
      /**
       * <code>optional double x_end = 3;</code>
       */
      double getXEnd();

      /**
       * <code>optional double y_end = 4;</code>
       */
      boolean hasYEnd();
      /**
       * <code>optional double y_end = 4;</code>
       */
      double getYEnd();

      /**
       * <code>optional bool normalized = 5 [default = false];</code>
       */
      boolean hasNormalized();
      /**
       * <code>optional bool normalized = 5 [default = false];</code>
       */
      boolean getNormalized();
    }
    /**
     * Protobuf type {@code mediapipe.RenderAnnotation.Arrow}
     */
    public  static final class Arrow extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:mediapipe.RenderAnnotation.Arrow)
        ArrowOrBuilder {
      // Use Arrow.newBuilder() to construct.
      private Arrow(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private Arrow() {
        xStart_ = 0D;
        yStart_ = 0D;
        xEnd_ = 0D;
        yEnd_ = 0D;
        normalized_ = false;
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private Arrow(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 9: {
                bitField0_ |= 0x00000001;
                xStart_ = input.readDouble();
                break;
              }
              case 17: {
                bitField0_ |= 0x00000002;
                yStart_ = input.readDouble();
                break;
              }
              case 25: {
                bitField0_ |= 0x00000004;
                xEnd_ = input.readDouble();
                break;
              }
              case 33: {
                bitField0_ |= 0x00000008;
                yEnd_ = input.readDouble();
                break;
              }
              case 40: {
                bitField0_ |= 0x00000010;
                normalized_ = input.readBool();
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return mediapipe.RenderDataOuterClass.internal_static_mediapipe_RenderAnnotation_Arrow_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return mediapipe.RenderDataOuterClass.internal_static_mediapipe_RenderAnnotation_Arrow_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                mediapipe.RenderDataOuterClass.RenderAnnotation.Arrow.class, mediapipe.RenderDataOuterClass.RenderAnnotation.Arrow.Builder.class);
      }

      private int bitField0_;
      public static final int X_START_FIELD_NUMBER = 1;
      private double xStart_;
      /**
       * <pre>
       * The arrow head will be drawn at (x_end, y_end).
       * </pre>
       *
       * <code>optional double x_start = 1;</code>
       */
      public boolean hasXStart() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <pre>
       * The arrow head will be drawn at (x_end, y_end).
       * </pre>
       *
       * <code>optional double x_start = 1;</code>
       */
      public double getXStart() {
        return xStart_;
      }

      public static final int Y_START_FIELD_NUMBER = 2;
      private double yStart_;
      /**
       * <code>optional double y_start = 2;</code>
       */
      public boolean hasYStart() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional double y_start = 2;</code>
       */
      public double getYStart() {
        return yStart_;
      }

      public static final int X_END_FIELD_NUMBER = 3;
      private double xEnd_;
      /**
       * <code>optional double x_end = 3;</code>
       */
      public boolean hasXEnd() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional double x_end = 3;</code>
       */
      public double getXEnd() {
        return xEnd_;
      }

      public static final int Y_END_FIELD_NUMBER = 4;
      private double yEnd_;
      /**
       * <code>optional double y_end = 4;</code>
       */
      public boolean hasYEnd() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional double y_end = 4;</code>
       */
      public double getYEnd() {
        return yEnd_;
      }

      public static final int NORMALIZED_FIELD_NUMBER = 5;
      private boolean normalized_;
      /**
       * <code>optional bool normalized = 5 [default = false];</code>
       */
      public boolean hasNormalized() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional bool normalized = 5 [default = false];</code>
       */
      public boolean getNormalized() {
        return normalized_;
      }

      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeDouble(1, xStart_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeDouble(2, yStart_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          output.writeDouble(3, xEnd_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          output.writeDouble(4, yEnd_);
        }
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          output.writeBool(5, normalized_);
        }
        unknownFields.writeTo(output);
      }

      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeDoubleSize(1, xStart_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeDoubleSize(2, yStart_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          size += com.google.protobuf.CodedOutputStream
            .computeDoubleSize(3, xEnd_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          size += com.google.protobuf.CodedOutputStream
            .computeDoubleSize(4, yEnd_);
        }
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBoolSize(5, normalized_);
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof mediapipe.RenderDataOuterClass.RenderAnnotation.Arrow)) {
          return super.equals(obj);
        }
        mediapipe.RenderDataOuterClass.RenderAnnotation.Arrow other = (mediapipe.RenderDataOuterClass.RenderAnnotation.Arrow) obj;

        boolean result = true;
        result = result && (hasXStart() == other.hasXStart());
        if (hasXStart()) {
          result = result && (
              java.lang.Double.doubleToLongBits(getXStart())
              == java.lang.Double.doubleToLongBits(
                  other.getXStart()));
        }
        result = result && (hasYStart() == other.hasYStart());
        if (hasYStart()) {
          result = result && (
              java.lang.Double.doubleToLongBits(getYStart())
              == java.lang.Double.doubleToLongBits(
                  other.getYStart()));
        }
        result = result && (hasXEnd() == other.hasXEnd());
        if (hasXEnd()) {
          result = result && (
              java.lang.Double.doubleToLongBits(getXEnd())
              == java.lang.Double.doubleToLongBits(
                  other.getXEnd()));
        }
        result = result && (hasYEnd() == other.hasYEnd());
        if (hasYEnd()) {
          result = result && (
              java.lang.Double.doubleToLongBits(getYEnd())
              == java.lang.Double.doubleToLongBits(
                  other.getYEnd()));
        }
        result = result && (hasNormalized() == other.hasNormalized());
        if (hasNormalized()) {
          result = result && (getNormalized()
              == other.getNormalized());
        }
        result = result && unknownFields.equals(other.unknownFields);
        return result;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptorForType().hashCode();
        if (hasXStart()) {
          hash = (37 * hash) + X_START_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
              java.lang.Double.doubleToLongBits(getXStart()));
        }
        if (hasYStart()) {
          hash = (37 * hash) + Y_START_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
              java.lang.Double.doubleToLongBits(getYStart()));
        }
        if (hasXEnd()) {
          hash = (37 * hash) + X_END_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
              java.lang.Double.doubleToLongBits(getXEnd()));
        }
        if (hasYEnd()) {
          hash = (37 * hash) + Y_END_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
              java.lang.Double.doubleToLongBits(getYEnd()));
        }
        if (hasNormalized()) {
          hash = (37 * hash) + NORMALIZED_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
              getNormalized());
        }
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static mediapipe.RenderDataOuterClass.RenderAnnotation.Arrow parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static mediapipe.RenderDataOuterClass.RenderAnnotation.Arrow parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static mediapipe.RenderDataOuterClass.RenderAnnotation.Arrow parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static mediapipe.RenderDataOuterClass.RenderAnnotation.Arrow parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static mediapipe.RenderDataOuterClass.RenderAnnotation.Arrow parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static mediapipe.RenderDataOuterClass.RenderAnnotation.Arrow parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static mediapipe.RenderDataOuterClass.RenderAnnotation.Arrow parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static mediapipe.RenderDataOuterClass.RenderAnnotation.Arrow parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static mediapipe.RenderDataOuterClass.RenderAnnotation.Arrow parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static mediapipe.RenderDataOuterClass.RenderAnnotation.Arrow parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(mediapipe.RenderDataOuterClass.RenderAnnotation.Arrow prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code mediapipe.RenderAnnotation.Arrow}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:mediapipe.RenderAnnotation.Arrow)
          mediapipe.RenderDataOuterClass.RenderAnnotation.ArrowOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return mediapipe.RenderDataOuterClass.internal_static_mediapipe_RenderAnnotation_Arrow_descriptor;
        }

        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return mediapipe.RenderDataOuterClass.internal_static_mediapipe_RenderAnnotation_Arrow_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  mediapipe.RenderDataOuterClass.RenderAnnotation.Arrow.class, mediapipe.RenderDataOuterClass.RenderAnnotation.Arrow.Builder.class);
        }

        // Construct using mediapipe.RenderDataOuterClass.RenderAnnotation.Arrow.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        public Builder clear() {
          super.clear();
          xStart_ = 0D;
          bitField0_ = (bitField0_ & ~0x00000001);
          yStart_ = 0D;
          bitField0_ = (bitField0_ & ~0x00000002);
          xEnd_ = 0D;
          bitField0_ = (bitField0_ & ~0x00000004);
          yEnd_ = 0D;
          bitField0_ = (bitField0_ & ~0x00000008);
          normalized_ = false;
          bitField0_ = (bitField0_ & ~0x00000010);
          return this;
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return mediapipe.RenderDataOuterClass.internal_static_mediapipe_RenderAnnotation_Arrow_descriptor;
        }

        public mediapipe.RenderDataOuterClass.RenderAnnotation.Arrow getDefaultInstanceForType() {
          return mediapipe.RenderDataOuterClass.RenderAnnotation.Arrow.getDefaultInstance();
        }

        public mediapipe.RenderDataOuterClass.RenderAnnotation.Arrow build() {
          mediapipe.RenderDataOuterClass.RenderAnnotation.Arrow result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public mediapipe.RenderDataOuterClass.RenderAnnotation.Arrow buildPartial() {
          mediapipe.RenderDataOuterClass.RenderAnnotation.Arrow result = new mediapipe.RenderDataOuterClass.RenderAnnotation.Arrow(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.xStart_ = xStart_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.yStart_ = yStart_;
          if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
            to_bitField0_ |= 0x00000004;
          }
          result.xEnd_ = xEnd_;
          if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
            to_bitField0_ |= 0x00000008;
          }
          result.yEnd_ = yEnd_;
          if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
            to_bitField0_ |= 0x00000010;
          }
          result.normalized_ = normalized_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder clone() {
          return (Builder) super.clone();
        }
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            Object value) {
          return (Builder) super.setField(field, value);
        }
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return (Builder) super.clearField(field);
        }
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return (Builder) super.clearOneof(oneof);
        }
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, Object value) {
          return (Builder) super.setRepeatedField(field, index, value);
        }
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            Object value) {
          return (Builder) super.addRepeatedField(field, value);
        }
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof mediapipe.RenderDataOuterClass.RenderAnnotation.Arrow) {
            return mergeFrom((mediapipe.RenderDataOuterClass.RenderAnnotation.Arrow)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(mediapipe.RenderDataOuterClass.RenderAnnotation.Arrow other) {
          if (other == mediapipe.RenderDataOuterClass.RenderAnnotation.Arrow.getDefaultInstance()) return this;
          if (other.hasXStart()) {
            setXStart(other.getXStart());
          }
          if (other.hasYStart()) {
            setYStart(other.getYStart());
          }
          if (other.hasXEnd()) {
            setXEnd(other.getXEnd());
          }
          if (other.hasYEnd()) {
            setYEnd(other.getYEnd());
          }
          if (other.hasNormalized()) {
            setNormalized(other.getNormalized());
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          mediapipe.RenderDataOuterClass.RenderAnnotation.Arrow parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (mediapipe.RenderDataOuterClass.RenderAnnotation.Arrow) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private double xStart_ ;
        /**
         * <pre>
         * The arrow head will be drawn at (x_end, y_end).
         * </pre>
         *
         * <code>optional double x_start = 1;</code>
         */
        public boolean hasXStart() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <pre>
         * The arrow head will be drawn at (x_end, y_end).
         * </pre>
         *
         * <code>optional double x_start = 1;</code>
         */
        public double getXStart() {
          return xStart_;
        }
        /**
         * <pre>
         * The arrow head will be drawn at (x_end, y_end).
         * </pre>
         *
         * <code>optional double x_start = 1;</code>
         */
        public Builder setXStart(double value) {
          bitField0_ |= 0x00000001;
          xStart_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * The arrow head will be drawn at (x_end, y_end).
         * </pre>
         *
         * <code>optional double x_start = 1;</code>
         */
        public Builder clearXStart() {
          bitField0_ = (bitField0_ & ~0x00000001);
          xStart_ = 0D;
          onChanged();
          return this;
        }

        private double yStart_ ;
        /**
         * <code>optional double y_start = 2;</code>
         */
        public boolean hasYStart() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>optional double y_start = 2;</code>
         */
        public double getYStart() {
          return yStart_;
        }
        /**
         * <code>optional double y_start = 2;</code>
         */
        public Builder setYStart(double value) {
          bitField0_ |= 0x00000002;
          yStart_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional double y_start = 2;</code>
         */
        public Builder clearYStart() {
          bitField0_ = (bitField0_ & ~0x00000002);
          yStart_ = 0D;
          onChanged();
          return this;
        }

        private double xEnd_ ;
        /**
         * <code>optional double x_end = 3;</code>
         */
        public boolean hasXEnd() {
          return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        /**
         * <code>optional double x_end = 3;</code>
         */
        public double getXEnd() {
          return xEnd_;
        }
        /**
         * <code>optional double x_end = 3;</code>
         */
        public Builder setXEnd(double value) {
          bitField0_ |= 0x00000004;
          xEnd_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional double x_end = 3;</code>
         */
        public Builder clearXEnd() {
          bitField0_ = (bitField0_ & ~0x00000004);
          xEnd_ = 0D;
          onChanged();
          return this;
        }

        private double yEnd_ ;
        /**
         * <code>optional double y_end = 4;</code>
         */
        public boolean hasYEnd() {
          return ((bitField0_ & 0x00000008) == 0x00000008);
        }
        /**
         * <code>optional double y_end = 4;</code>
         */
        public double getYEnd() {
          return yEnd_;
        }
        /**
         * <code>optional double y_end = 4;</code>
         */
        public Builder setYEnd(double value) {
          bitField0_ |= 0x00000008;
          yEnd_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional double y_end = 4;</code>
         */
        public Builder clearYEnd() {
          bitField0_ = (bitField0_ & ~0x00000008);
          yEnd_ = 0D;
          onChanged();
          return this;
        }

        private boolean normalized_ ;
        /**
         * <code>optional bool normalized = 5 [default = false];</code>
         */
        public boolean hasNormalized() {
          return ((bitField0_ & 0x00000010) == 0x00000010);
        }
        /**
         * <code>optional bool normalized = 5 [default = false];</code>
         */
        public boolean getNormalized() {
          return normalized_;
        }
        /**
         * <code>optional bool normalized = 5 [default = false];</code>
         */
        public Builder setNormalized(boolean value) {
          bitField0_ |= 0x00000010;
          normalized_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional bool normalized = 5 [default = false];</code>
         */
        public Builder clearNormalized() {
          bitField0_ = (bitField0_ & ~0x00000010);
          normalized_ = false;
          onChanged();
          return this;
        }
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:mediapipe.RenderAnnotation.Arrow)
      }

      // @@protoc_insertion_point(class_scope:mediapipe.RenderAnnotation.Arrow)
      private static final mediapipe.RenderDataOuterClass.RenderAnnotation.Arrow DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new mediapipe.RenderDataOuterClass.RenderAnnotation.Arrow();
      }

      public static mediapipe.RenderDataOuterClass.RenderAnnotation.Arrow getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      @java.lang.Deprecated public static final com.google.protobuf.Parser<Arrow>
          PARSER = new com.google.protobuf.AbstractParser<Arrow>() {
        public Arrow parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
            return new Arrow(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<Arrow> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<Arrow> getParserForType() {
        return PARSER;
      }

      public mediapipe.RenderDataOuterClass.RenderAnnotation.Arrow getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface TextOrBuilder extends
        // @@protoc_insertion_point(interface_extends:mediapipe.RenderAnnotation.Text)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional string display_text = 1;</code>
       */
      boolean hasDisplayText();
      /**
       * <code>optional string display_text = 1;</code>
       */
      java.lang.String getDisplayText();
      /**
       * <code>optional string display_text = 1;</code>
       */
      com.google.protobuf.ByteString
          getDisplayTextBytes();

      /**
       * <pre>
       * The location to render the text. Left and baseline refer to the x and y
       * coordinates of the start location of text respectively.
       * </pre>
       *
       * <code>optional double left = 2;</code>
       */
      boolean hasLeft();
      /**
       * <pre>
       * The location to render the text. Left and baseline refer to the x and y
       * coordinates of the start location of text respectively.
       * </pre>
       *
       * <code>optional double left = 2;</code>
       */
      double getLeft();

      /**
       * <code>optional double baseline = 3;</code>
       */
      boolean hasBaseline();
      /**
       * <code>optional double baseline = 3;</code>
       */
      double getBaseline();

      /**
       * <pre>
       * The height of the text from top to baseline. When normalized=true, font
       * height is specified wrt the image height.
       * </pre>
       *
       * <code>optional double font_height = 4 [default = 8];</code>
       */
      boolean hasFontHeight();
      /**
       * <pre>
       * The height of the text from top to baseline. When normalized=true, font
       * height is specified wrt the image height.
       * </pre>
       *
       * <code>optional double font_height = 4 [default = 8];</code>
       */
      double getFontHeight();

      /**
       * <code>optional bool normalized = 5 [default = false];</code>
       */
      boolean hasNormalized();
      /**
       * <code>optional bool normalized = 5 [default = false];</code>
       */
      boolean getNormalized();

      /**
       * <pre>
       * Specifies the font for the text. Font must be one of the following from
       * OpenCV:
       * cv::FONT_HERSHEY_SIMPLEX (0)
       * cv::FONT_HERSHEY_PLAIN (1)
       * cv::FONT_HERSHEY_DUPLEX (2)
       * cv::FONT_HERSHEY_COMPLEX (3)
       * cv::FONT_HERSHEY_TRIPLEX (4)
       * cv::FONT_HERSHEY_COMPLEX_SMALL (5)
       * cv::FONT_HERSHEY_SCRIPT_SIMPLEX (6)
       * cv::FONT_HERSHEY_SCRIPT_COMPLEX (7)
       * </pre>
       *
       * <code>optional int32 font_face = 6 [default = 0];</code>
       */
      boolean hasFontFace();
      /**
       * <pre>
       * Specifies the font for the text. Font must be one of the following from
       * OpenCV:
       * cv::FONT_HERSHEY_SIMPLEX (0)
       * cv::FONT_HERSHEY_PLAIN (1)
       * cv::FONT_HERSHEY_DUPLEX (2)
       * cv::FONT_HERSHEY_COMPLEX (3)
       * cv::FONT_HERSHEY_TRIPLEX (4)
       * cv::FONT_HERSHEY_COMPLEX_SMALL (5)
       * cv::FONT_HERSHEY_SCRIPT_SIMPLEX (6)
       * cv::FONT_HERSHEY_SCRIPT_COMPLEX (7)
       * </pre>
       *
       * <code>optional int32 font_face = 6 [default = 0];</code>
       */
      int getFontFace();
    }
    /**
     * Protobuf type {@code mediapipe.RenderAnnotation.Text}
     */
    public  static final class Text extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:mediapipe.RenderAnnotation.Text)
        TextOrBuilder {
      // Use Text.newBuilder() to construct.
      private Text(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private Text() {
        displayText_ = "";
        left_ = 0D;
        baseline_ = 0D;
        fontHeight_ = 8D;
        normalized_ = false;
        fontFace_ = 0;
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private Text(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 10: {
                com.google.protobuf.ByteString bs = input.readBytes();
                bitField0_ |= 0x00000001;
                displayText_ = bs;
                break;
              }
              case 17: {
                bitField0_ |= 0x00000002;
                left_ = input.readDouble();
                break;
              }
              case 25: {
                bitField0_ |= 0x00000004;
                baseline_ = input.readDouble();
                break;
              }
              case 33: {
                bitField0_ |= 0x00000008;
                fontHeight_ = input.readDouble();
                break;
              }
              case 40: {
                bitField0_ |= 0x00000010;
                normalized_ = input.readBool();
                break;
              }
              case 48: {
                bitField0_ |= 0x00000020;
                fontFace_ = input.readInt32();
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return mediapipe.RenderDataOuterClass.internal_static_mediapipe_RenderAnnotation_Text_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return mediapipe.RenderDataOuterClass.internal_static_mediapipe_RenderAnnotation_Text_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                mediapipe.RenderDataOuterClass.RenderAnnotation.Text.class, mediapipe.RenderDataOuterClass.RenderAnnotation.Text.Builder.class);
      }

      private int bitField0_;
      public static final int DISPLAY_TEXT_FIELD_NUMBER = 1;
      private volatile java.lang.Object displayText_;
      /**
       * <code>optional string display_text = 1;</code>
       */
      public boolean hasDisplayText() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional string display_text = 1;</code>
       */
      public java.lang.String getDisplayText() {
        java.lang.Object ref = displayText_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            displayText_ = s;
          }
          return s;
        }
      }
      /**
       * <code>optional string display_text = 1;</code>
       */
      public com.google.protobuf.ByteString
          getDisplayTextBytes() {
        java.lang.Object ref = displayText_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          displayText_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int LEFT_FIELD_NUMBER = 2;
      private double left_;
      /**
       * <pre>
       * The location to render the text. Left and baseline refer to the x and y
       * coordinates of the start location of text respectively.
       * </pre>
       *
       * <code>optional double left = 2;</code>
       */
      public boolean hasLeft() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <pre>
       * The location to render the text. Left and baseline refer to the x and y
       * coordinates of the start location of text respectively.
       * </pre>
       *
       * <code>optional double left = 2;</code>
       */
      public double getLeft() {
        return left_;
      }

      public static final int BASELINE_FIELD_NUMBER = 3;
      private double baseline_;
      /**
       * <code>optional double baseline = 3;</code>
       */
      public boolean hasBaseline() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional double baseline = 3;</code>
       */
      public double getBaseline() {
        return baseline_;
      }

      public static final int FONT_HEIGHT_FIELD_NUMBER = 4;
      private double fontHeight_;
      /**
       * <pre>
       * The height of the text from top to baseline. When normalized=true, font
       * height is specified wrt the image height.
       * </pre>
       *
       * <code>optional double font_height = 4 [default = 8];</code>
       */
      public boolean hasFontHeight() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <pre>
       * The height of the text from top to baseline. When normalized=true, font
       * height is specified wrt the image height.
       * </pre>
       *
       * <code>optional double font_height = 4 [default = 8];</code>
       */
      public double getFontHeight() {
        return fontHeight_;
      }

      public static final int NORMALIZED_FIELD_NUMBER = 5;
      private boolean normalized_;
      /**
       * <code>optional bool normalized = 5 [default = false];</code>
       */
      public boolean hasNormalized() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional bool normalized = 5 [default = false];</code>
       */
      public boolean getNormalized() {
        return normalized_;
      }

      public static final int FONT_FACE_FIELD_NUMBER = 6;
      private int fontFace_;
      /**
       * <pre>
       * Specifies the font for the text. Font must be one of the following from
       * OpenCV:
       * cv::FONT_HERSHEY_SIMPLEX (0)
       * cv::FONT_HERSHEY_PLAIN (1)
       * cv::FONT_HERSHEY_DUPLEX (2)
       * cv::FONT_HERSHEY_COMPLEX (3)
       * cv::FONT_HERSHEY_TRIPLEX (4)
       * cv::FONT_HERSHEY_COMPLEX_SMALL (5)
       * cv::FONT_HERSHEY_SCRIPT_SIMPLEX (6)
       * cv::FONT_HERSHEY_SCRIPT_COMPLEX (7)
       * </pre>
       *
       * <code>optional int32 font_face = 6 [default = 0];</code>
       */
      public boolean hasFontFace() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <pre>
       * Specifies the font for the text. Font must be one of the following from
       * OpenCV:
       * cv::FONT_HERSHEY_SIMPLEX (0)
       * cv::FONT_HERSHEY_PLAIN (1)
       * cv::FONT_HERSHEY_DUPLEX (2)
       * cv::FONT_HERSHEY_COMPLEX (3)
       * cv::FONT_HERSHEY_TRIPLEX (4)
       * cv::FONT_HERSHEY_COMPLEX_SMALL (5)
       * cv::FONT_HERSHEY_SCRIPT_SIMPLEX (6)
       * cv::FONT_HERSHEY_SCRIPT_COMPLEX (7)
       * </pre>
       *
       * <code>optional int32 font_face = 6 [default = 0];</code>
       */
      public int getFontFace() {
        return fontFace_;
      }

      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 1, displayText_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeDouble(2, left_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          output.writeDouble(3, baseline_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          output.writeDouble(4, fontHeight_);
        }
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          output.writeBool(5, normalized_);
        }
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          output.writeInt32(6, fontFace_);
        }
        unknownFields.writeTo(output);
      }

      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, displayText_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeDoubleSize(2, left_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          size += com.google.protobuf.CodedOutputStream
            .computeDoubleSize(3, baseline_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          size += com.google.protobuf.CodedOutputStream
            .computeDoubleSize(4, fontHeight_);
        }
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBoolSize(5, normalized_);
        }
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(6, fontFace_);
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof mediapipe.RenderDataOuterClass.RenderAnnotation.Text)) {
          return super.equals(obj);
        }
        mediapipe.RenderDataOuterClass.RenderAnnotation.Text other = (mediapipe.RenderDataOuterClass.RenderAnnotation.Text) obj;

        boolean result = true;
        result = result && (hasDisplayText() == other.hasDisplayText());
        if (hasDisplayText()) {
          result = result && getDisplayText()
              .equals(other.getDisplayText());
        }
        result = result && (hasLeft() == other.hasLeft());
        if (hasLeft()) {
          result = result && (
              java.lang.Double.doubleToLongBits(getLeft())
              == java.lang.Double.doubleToLongBits(
                  other.getLeft()));
        }
        result = result && (hasBaseline() == other.hasBaseline());
        if (hasBaseline()) {
          result = result && (
              java.lang.Double.doubleToLongBits(getBaseline())
              == java.lang.Double.doubleToLongBits(
                  other.getBaseline()));
        }
        result = result && (hasFontHeight() == other.hasFontHeight());
        if (hasFontHeight()) {
          result = result && (
              java.lang.Double.doubleToLongBits(getFontHeight())
              == java.lang.Double.doubleToLongBits(
                  other.getFontHeight()));
        }
        result = result && (hasNormalized() == other.hasNormalized());
        if (hasNormalized()) {
          result = result && (getNormalized()
              == other.getNormalized());
        }
        result = result && (hasFontFace() == other.hasFontFace());
        if (hasFontFace()) {
          result = result && (getFontFace()
              == other.getFontFace());
        }
        result = result && unknownFields.equals(other.unknownFields);
        return result;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptorForType().hashCode();
        if (hasDisplayText()) {
          hash = (37 * hash) + DISPLAY_TEXT_FIELD_NUMBER;
          hash = (53 * hash) + getDisplayText().hashCode();
        }
        if (hasLeft()) {
          hash = (37 * hash) + LEFT_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
              java.lang.Double.doubleToLongBits(getLeft()));
        }
        if (hasBaseline()) {
          hash = (37 * hash) + BASELINE_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
              java.lang.Double.doubleToLongBits(getBaseline()));
        }
        if (hasFontHeight()) {
          hash = (37 * hash) + FONT_HEIGHT_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
              java.lang.Double.doubleToLongBits(getFontHeight()));
        }
        if (hasNormalized()) {
          hash = (37 * hash) + NORMALIZED_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
              getNormalized());
        }
        if (hasFontFace()) {
          hash = (37 * hash) + FONT_FACE_FIELD_NUMBER;
          hash = (53 * hash) + getFontFace();
        }
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static mediapipe.RenderDataOuterClass.RenderAnnotation.Text parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static mediapipe.RenderDataOuterClass.RenderAnnotation.Text parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static mediapipe.RenderDataOuterClass.RenderAnnotation.Text parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static mediapipe.RenderDataOuterClass.RenderAnnotation.Text parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static mediapipe.RenderDataOuterClass.RenderAnnotation.Text parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static mediapipe.RenderDataOuterClass.RenderAnnotation.Text parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static mediapipe.RenderDataOuterClass.RenderAnnotation.Text parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static mediapipe.RenderDataOuterClass.RenderAnnotation.Text parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static mediapipe.RenderDataOuterClass.RenderAnnotation.Text parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static mediapipe.RenderDataOuterClass.RenderAnnotation.Text parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(mediapipe.RenderDataOuterClass.RenderAnnotation.Text prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code mediapipe.RenderAnnotation.Text}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:mediapipe.RenderAnnotation.Text)
          mediapipe.RenderDataOuterClass.RenderAnnotation.TextOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return mediapipe.RenderDataOuterClass.internal_static_mediapipe_RenderAnnotation_Text_descriptor;
        }

        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return mediapipe.RenderDataOuterClass.internal_static_mediapipe_RenderAnnotation_Text_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  mediapipe.RenderDataOuterClass.RenderAnnotation.Text.class, mediapipe.RenderDataOuterClass.RenderAnnotation.Text.Builder.class);
        }

        // Construct using mediapipe.RenderDataOuterClass.RenderAnnotation.Text.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        public Builder clear() {
          super.clear();
          displayText_ = "";
          bitField0_ = (bitField0_ & ~0x00000001);
          left_ = 0D;
          bitField0_ = (bitField0_ & ~0x00000002);
          baseline_ = 0D;
          bitField0_ = (bitField0_ & ~0x00000004);
          fontHeight_ = 8D;
          bitField0_ = (bitField0_ & ~0x00000008);
          normalized_ = false;
          bitField0_ = (bitField0_ & ~0x00000010);
          fontFace_ = 0;
          bitField0_ = (bitField0_ & ~0x00000020);
          return this;
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return mediapipe.RenderDataOuterClass.internal_static_mediapipe_RenderAnnotation_Text_descriptor;
        }

        public mediapipe.RenderDataOuterClass.RenderAnnotation.Text getDefaultInstanceForType() {
          return mediapipe.RenderDataOuterClass.RenderAnnotation.Text.getDefaultInstance();
        }

        public mediapipe.RenderDataOuterClass.RenderAnnotation.Text build() {
          mediapipe.RenderDataOuterClass.RenderAnnotation.Text result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public mediapipe.RenderDataOuterClass.RenderAnnotation.Text buildPartial() {
          mediapipe.RenderDataOuterClass.RenderAnnotation.Text result = new mediapipe.RenderDataOuterClass.RenderAnnotation.Text(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.displayText_ = displayText_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.left_ = left_;
          if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
            to_bitField0_ |= 0x00000004;
          }
          result.baseline_ = baseline_;
          if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
            to_bitField0_ |= 0x00000008;
          }
          result.fontHeight_ = fontHeight_;
          if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
            to_bitField0_ |= 0x00000010;
          }
          result.normalized_ = normalized_;
          if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
            to_bitField0_ |= 0x00000020;
          }
          result.fontFace_ = fontFace_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder clone() {
          return (Builder) super.clone();
        }
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            Object value) {
          return (Builder) super.setField(field, value);
        }
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return (Builder) super.clearField(field);
        }
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return (Builder) super.clearOneof(oneof);
        }
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, Object value) {
          return (Builder) super.setRepeatedField(field, index, value);
        }
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            Object value) {
          return (Builder) super.addRepeatedField(field, value);
        }
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof mediapipe.RenderDataOuterClass.RenderAnnotation.Text) {
            return mergeFrom((mediapipe.RenderDataOuterClass.RenderAnnotation.Text)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(mediapipe.RenderDataOuterClass.RenderAnnotation.Text other) {
          if (other == mediapipe.RenderDataOuterClass.RenderAnnotation.Text.getDefaultInstance()) return this;
          if (other.hasDisplayText()) {
            bitField0_ |= 0x00000001;
            displayText_ = other.displayText_;
            onChanged();
          }
          if (other.hasLeft()) {
            setLeft(other.getLeft());
          }
          if (other.hasBaseline()) {
            setBaseline(other.getBaseline());
          }
          if (other.hasFontHeight()) {
            setFontHeight(other.getFontHeight());
          }
          if (other.hasNormalized()) {
            setNormalized(other.getNormalized());
          }
          if (other.hasFontFace()) {
            setFontFace(other.getFontFace());
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          mediapipe.RenderDataOuterClass.RenderAnnotation.Text parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (mediapipe.RenderDataOuterClass.RenderAnnotation.Text) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private java.lang.Object displayText_ = "";
        /**
         * <code>optional string display_text = 1;</code>
         */
        public boolean hasDisplayText() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional string display_text = 1;</code>
         */
        public java.lang.String getDisplayText() {
          java.lang.Object ref = displayText_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              displayText_ = s;
            }
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>optional string display_text = 1;</code>
         */
        public com.google.protobuf.ByteString
            getDisplayTextBytes() {
          java.lang.Object ref = displayText_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            displayText_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>optional string display_text = 1;</code>
         */
        public Builder setDisplayText(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
          displayText_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional string display_text = 1;</code>
         */
        public Builder clearDisplayText() {
          bitField0_ = (bitField0_ & ~0x00000001);
          displayText_ = getDefaultInstance().getDisplayText();
          onChanged();
          return this;
        }
        /**
         * <code>optional string display_text = 1;</code>
         */
        public Builder setDisplayTextBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
          displayText_ = value;
          onChanged();
          return this;
        }

        private double left_ ;
        /**
         * <pre>
         * The location to render the text. Left and baseline refer to the x and y
         * coordinates of the start location of text respectively.
         * </pre>
         *
         * <code>optional double left = 2;</code>
         */
        public boolean hasLeft() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <pre>
         * The location to render the text. Left and baseline refer to the x and y
         * coordinates of the start location of text respectively.
         * </pre>
         *
         * <code>optional double left = 2;</code>
         */
        public double getLeft() {
          return left_;
        }
        /**
         * <pre>
         * The location to render the text. Left and baseline refer to the x and y
         * coordinates of the start location of text respectively.
         * </pre>
         *
         * <code>optional double left = 2;</code>
         */
        public Builder setLeft(double value) {
          bitField0_ |= 0x00000002;
          left_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * The location to render the text. Left and baseline refer to the x and y
         * coordinates of the start location of text respectively.
         * </pre>
         *
         * <code>optional double left = 2;</code>
         */
        public Builder clearLeft() {
          bitField0_ = (bitField0_ & ~0x00000002);
          left_ = 0D;
          onChanged();
          return this;
        }

        private double baseline_ ;
        /**
         * <code>optional double baseline = 3;</code>
         */
        public boolean hasBaseline() {
          return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        /**
         * <code>optional double baseline = 3;</code>
         */
        public double getBaseline() {
          return baseline_;
        }
        /**
         * <code>optional double baseline = 3;</code>
         */
        public Builder setBaseline(double value) {
          bitField0_ |= 0x00000004;
          baseline_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional double baseline = 3;</code>
         */
        public Builder clearBaseline() {
          bitField0_ = (bitField0_ & ~0x00000004);
          baseline_ = 0D;
          onChanged();
          return this;
        }

        private double fontHeight_ = 8D;
        /**
         * <pre>
         * The height of the text from top to baseline. When normalized=true, font
         * height is specified wrt the image height.
         * </pre>
         *
         * <code>optional double font_height = 4 [default = 8];</code>
         */
        public boolean hasFontHeight() {
          return ((bitField0_ & 0x00000008) == 0x00000008);
        }
        /**
         * <pre>
         * The height of the text from top to baseline. When normalized=true, font
         * height is specified wrt the image height.
         * </pre>
         *
         * <code>optional double font_height = 4 [default = 8];</code>
         */
        public double getFontHeight() {
          return fontHeight_;
        }
        /**
         * <pre>
         * The height of the text from top to baseline. When normalized=true, font
         * height is specified wrt the image height.
         * </pre>
         *
         * <code>optional double font_height = 4 [default = 8];</code>
         */
        public Builder setFontHeight(double value) {
          bitField0_ |= 0x00000008;
          fontHeight_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * The height of the text from top to baseline. When normalized=true, font
         * height is specified wrt the image height.
         * </pre>
         *
         * <code>optional double font_height = 4 [default = 8];</code>
         */
        public Builder clearFontHeight() {
          bitField0_ = (bitField0_ & ~0x00000008);
          fontHeight_ = 8D;
          onChanged();
          return this;
        }

        private boolean normalized_ ;
        /**
         * <code>optional bool normalized = 5 [default = false];</code>
         */
        public boolean hasNormalized() {
          return ((bitField0_ & 0x00000010) == 0x00000010);
        }
        /**
         * <code>optional bool normalized = 5 [default = false];</code>
         */
        public boolean getNormalized() {
          return normalized_;
        }
        /**
         * <code>optional bool normalized = 5 [default = false];</code>
         */
        public Builder setNormalized(boolean value) {
          bitField0_ |= 0x00000010;
          normalized_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional bool normalized = 5 [default = false];</code>
         */
        public Builder clearNormalized() {
          bitField0_ = (bitField0_ & ~0x00000010);
          normalized_ = false;
          onChanged();
          return this;
        }

        private int fontFace_ ;
        /**
         * <pre>
         * Specifies the font for the text. Font must be one of the following from
         * OpenCV:
         * cv::FONT_HERSHEY_SIMPLEX (0)
         * cv::FONT_HERSHEY_PLAIN (1)
         * cv::FONT_HERSHEY_DUPLEX (2)
         * cv::FONT_HERSHEY_COMPLEX (3)
         * cv::FONT_HERSHEY_TRIPLEX (4)
         * cv::FONT_HERSHEY_COMPLEX_SMALL (5)
         * cv::FONT_HERSHEY_SCRIPT_SIMPLEX (6)
         * cv::FONT_HERSHEY_SCRIPT_COMPLEX (7)
         * </pre>
         *
         * <code>optional int32 font_face = 6 [default = 0];</code>
         */
        public boolean hasFontFace() {
          return ((bitField0_ & 0x00000020) == 0x00000020);
        }
        /**
         * <pre>
         * Specifies the font for the text. Font must be one of the following from
         * OpenCV:
         * cv::FONT_HERSHEY_SIMPLEX (0)
         * cv::FONT_HERSHEY_PLAIN (1)
         * cv::FONT_HERSHEY_DUPLEX (2)
         * cv::FONT_HERSHEY_COMPLEX (3)
         * cv::FONT_HERSHEY_TRIPLEX (4)
         * cv::FONT_HERSHEY_COMPLEX_SMALL (5)
         * cv::FONT_HERSHEY_SCRIPT_SIMPLEX (6)
         * cv::FONT_HERSHEY_SCRIPT_COMPLEX (7)
         * </pre>
         *
         * <code>optional int32 font_face = 6 [default = 0];</code>
         */
        public int getFontFace() {
          return fontFace_;
        }
        /**
         * <pre>
         * Specifies the font for the text. Font must be one of the following from
         * OpenCV:
         * cv::FONT_HERSHEY_SIMPLEX (0)
         * cv::FONT_HERSHEY_PLAIN (1)
         * cv::FONT_HERSHEY_DUPLEX (2)
         * cv::FONT_HERSHEY_COMPLEX (3)
         * cv::FONT_HERSHEY_TRIPLEX (4)
         * cv::FONT_HERSHEY_COMPLEX_SMALL (5)
         * cv::FONT_HERSHEY_SCRIPT_SIMPLEX (6)
         * cv::FONT_HERSHEY_SCRIPT_COMPLEX (7)
         * </pre>
         *
         * <code>optional int32 font_face = 6 [default = 0];</code>
         */
        public Builder setFontFace(int value) {
          bitField0_ |= 0x00000020;
          fontFace_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Specifies the font for the text. Font must be one of the following from
         * OpenCV:
         * cv::FONT_HERSHEY_SIMPLEX (0)
         * cv::FONT_HERSHEY_PLAIN (1)
         * cv::FONT_HERSHEY_DUPLEX (2)
         * cv::FONT_HERSHEY_COMPLEX (3)
         * cv::FONT_HERSHEY_TRIPLEX (4)
         * cv::FONT_HERSHEY_COMPLEX_SMALL (5)
         * cv::FONT_HERSHEY_SCRIPT_SIMPLEX (6)
         * cv::FONT_HERSHEY_SCRIPT_COMPLEX (7)
         * </pre>
         *
         * <code>optional int32 font_face = 6 [default = 0];</code>
         */
        public Builder clearFontFace() {
          bitField0_ = (bitField0_ & ~0x00000020);
          fontFace_ = 0;
          onChanged();
          return this;
        }
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:mediapipe.RenderAnnotation.Text)
      }

      // @@protoc_insertion_point(class_scope:mediapipe.RenderAnnotation.Text)
      private static final mediapipe.RenderDataOuterClass.RenderAnnotation.Text DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new mediapipe.RenderDataOuterClass.RenderAnnotation.Text();
      }

      public static mediapipe.RenderDataOuterClass.RenderAnnotation.Text getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      @java.lang.Deprecated public static final com.google.protobuf.Parser<Text>
          PARSER = new com.google.protobuf.AbstractParser<Text>() {
        public Text parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
            return new Text(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<Text> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<Text> getParserForType() {
        return PARSER;
      }

      public mediapipe.RenderDataOuterClass.RenderAnnotation.Text getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    private int bitField0_;
    private int dataCase_ = 0;
    private java.lang.Object data_;
    public enum DataCase
        implements com.google.protobuf.Internal.EnumLite {
      RECTANGLE(1),
      FILLED_RECTANGLE(2),
      OVAL(3),
      FILLED_OVAL(4),
      POINT(5),
      LINE(6),
      ARROW(7),
      TEXT(8),
      ROUNDED_RECTANGLE(9),
      FILLED_ROUNDED_RECTANGLE(10),
      GRADIENT_LINE(14),
      DATA_NOT_SET(0);
      private final int value;
      private DataCase(int value) {
        this.value = value;
      }
      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static DataCase valueOf(int value) {
        return forNumber(value);
      }

      public static DataCase forNumber(int value) {
        switch (value) {
          case 1: return RECTANGLE;
          case 2: return FILLED_RECTANGLE;
          case 3: return OVAL;
          case 4: return FILLED_OVAL;
          case 5: return POINT;
          case 6: return LINE;
          case 7: return ARROW;
          case 8: return TEXT;
          case 9: return ROUNDED_RECTANGLE;
          case 10: return FILLED_ROUNDED_RECTANGLE;
          case 14: return GRADIENT_LINE;
          case 0: return DATA_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    public DataCase
    getDataCase() {
      return DataCase.forNumber(
          dataCase_);
    }

    public static final int RECTANGLE_FIELD_NUMBER = 1;
    /**
     * <code>optional .mediapipe.RenderAnnotation.Rectangle rectangle = 1;</code>
     */
    public boolean hasRectangle() {
      return dataCase_ == 1;
    }
    /**
     * <code>optional .mediapipe.RenderAnnotation.Rectangle rectangle = 1;</code>
     */
    public mediapipe.RenderDataOuterClass.RenderAnnotation.Rectangle getRectangle() {
      if (dataCase_ == 1) {
         return (mediapipe.RenderDataOuterClass.RenderAnnotation.Rectangle) data_;
      }
      return mediapipe.RenderDataOuterClass.RenderAnnotation.Rectangle.getDefaultInstance();
    }
    /**
     * <code>optional .mediapipe.RenderAnnotation.Rectangle rectangle = 1;</code>
     */
    public mediapipe.RenderDataOuterClass.RenderAnnotation.RectangleOrBuilder getRectangleOrBuilder() {
      if (dataCase_ == 1) {
         return (mediapipe.RenderDataOuterClass.RenderAnnotation.Rectangle) data_;
      }
      return mediapipe.RenderDataOuterClass.RenderAnnotation.Rectangle.getDefaultInstance();
    }

    public static final int FILLED_RECTANGLE_FIELD_NUMBER = 2;
    /**
     * <code>optional .mediapipe.RenderAnnotation.FilledRectangle filled_rectangle = 2;</code>
     */
    public boolean hasFilledRectangle() {
      return dataCase_ == 2;
    }
    /**
     * <code>optional .mediapipe.RenderAnnotation.FilledRectangle filled_rectangle = 2;</code>
     */
    public mediapipe.RenderDataOuterClass.RenderAnnotation.FilledRectangle getFilledRectangle() {
      if (dataCase_ == 2) {
         return (mediapipe.RenderDataOuterClass.RenderAnnotation.FilledRectangle) data_;
      }
      return mediapipe.RenderDataOuterClass.RenderAnnotation.FilledRectangle.getDefaultInstance();
    }
    /**
     * <code>optional .mediapipe.RenderAnnotation.FilledRectangle filled_rectangle = 2;</code>
     */
    public mediapipe.RenderDataOuterClass.RenderAnnotation.FilledRectangleOrBuilder getFilledRectangleOrBuilder() {
      if (dataCase_ == 2) {
         return (mediapipe.RenderDataOuterClass.RenderAnnotation.FilledRectangle) data_;
      }
      return mediapipe.RenderDataOuterClass.RenderAnnotation.FilledRectangle.getDefaultInstance();
    }

    public static final int OVAL_FIELD_NUMBER = 3;
    /**
     * <code>optional .mediapipe.RenderAnnotation.Oval oval = 3;</code>
     */
    public boolean hasOval() {
      return dataCase_ == 3;
    }
    /**
     * <code>optional .mediapipe.RenderAnnotation.Oval oval = 3;</code>
     */
    public mediapipe.RenderDataOuterClass.RenderAnnotation.Oval getOval() {
      if (dataCase_ == 3) {
         return (mediapipe.RenderDataOuterClass.RenderAnnotation.Oval) data_;
      }
      return mediapipe.RenderDataOuterClass.RenderAnnotation.Oval.getDefaultInstance();
    }
    /**
     * <code>optional .mediapipe.RenderAnnotation.Oval oval = 3;</code>
     */
    public mediapipe.RenderDataOuterClass.RenderAnnotation.OvalOrBuilder getOvalOrBuilder() {
      if (dataCase_ == 3) {
         return (mediapipe.RenderDataOuterClass.RenderAnnotation.Oval) data_;
      }
      return mediapipe.RenderDataOuterClass.RenderAnnotation.Oval.getDefaultInstance();
    }

    public static final int FILLED_OVAL_FIELD_NUMBER = 4;
    /**
     * <code>optional .mediapipe.RenderAnnotation.FilledOval filled_oval = 4;</code>
     */
    public boolean hasFilledOval() {
      return dataCase_ == 4;
    }
    /**
     * <code>optional .mediapipe.RenderAnnotation.FilledOval filled_oval = 4;</code>
     */
    public mediapipe.RenderDataOuterClass.RenderAnnotation.FilledOval getFilledOval() {
      if (dataCase_ == 4) {
         return (mediapipe.RenderDataOuterClass.RenderAnnotation.FilledOval) data_;
      }
      return mediapipe.RenderDataOuterClass.RenderAnnotation.FilledOval.getDefaultInstance();
    }
    /**
     * <code>optional .mediapipe.RenderAnnotation.FilledOval filled_oval = 4;</code>
     */
    public mediapipe.RenderDataOuterClass.RenderAnnotation.FilledOvalOrBuilder getFilledOvalOrBuilder() {
      if (dataCase_ == 4) {
         return (mediapipe.RenderDataOuterClass.RenderAnnotation.FilledOval) data_;
      }
      return mediapipe.RenderDataOuterClass.RenderAnnotation.FilledOval.getDefaultInstance();
    }

    public static final int POINT_FIELD_NUMBER = 5;
    /**
     * <code>optional .mediapipe.RenderAnnotation.Point point = 5;</code>
     */
    public boolean hasPoint() {
      return dataCase_ == 5;
    }
    /**
     * <code>optional .mediapipe.RenderAnnotation.Point point = 5;</code>
     */
    public mediapipe.RenderDataOuterClass.RenderAnnotation.Point getPoint() {
      if (dataCase_ == 5) {
         return (mediapipe.RenderDataOuterClass.RenderAnnotation.Point) data_;
      }
      return mediapipe.RenderDataOuterClass.RenderAnnotation.Point.getDefaultInstance();
    }
    /**
     * <code>optional .mediapipe.RenderAnnotation.Point point = 5;</code>
     */
    public mediapipe.RenderDataOuterClass.RenderAnnotation.PointOrBuilder getPointOrBuilder() {
      if (dataCase_ == 5) {
         return (mediapipe.RenderDataOuterClass.RenderAnnotation.Point) data_;
      }
      return mediapipe.RenderDataOuterClass.RenderAnnotation.Point.getDefaultInstance();
    }

    public static final int LINE_FIELD_NUMBER = 6;
    /**
     * <code>optional .mediapipe.RenderAnnotation.Line line = 6;</code>
     */
    public boolean hasLine() {
      return dataCase_ == 6;
    }
    /**
     * <code>optional .mediapipe.RenderAnnotation.Line line = 6;</code>
     */
    public mediapipe.RenderDataOuterClass.RenderAnnotation.Line getLine() {
      if (dataCase_ == 6) {
         return (mediapipe.RenderDataOuterClass.RenderAnnotation.Line) data_;
      }
      return mediapipe.RenderDataOuterClass.RenderAnnotation.Line.getDefaultInstance();
    }
    /**
     * <code>optional .mediapipe.RenderAnnotation.Line line = 6;</code>
     */
    public mediapipe.RenderDataOuterClass.RenderAnnotation.LineOrBuilder getLineOrBuilder() {
      if (dataCase_ == 6) {
         return (mediapipe.RenderDataOuterClass.RenderAnnotation.Line) data_;
      }
      return mediapipe.RenderDataOuterClass.RenderAnnotation.Line.getDefaultInstance();
    }

    public static final int ARROW_FIELD_NUMBER = 7;
    /**
     * <code>optional .mediapipe.RenderAnnotation.Arrow arrow = 7;</code>
     */
    public boolean hasArrow() {
      return dataCase_ == 7;
    }
    /**
     * <code>optional .mediapipe.RenderAnnotation.Arrow arrow = 7;</code>
     */
    public mediapipe.RenderDataOuterClass.RenderAnnotation.Arrow getArrow() {
      if (dataCase_ == 7) {
         return (mediapipe.RenderDataOuterClass.RenderAnnotation.Arrow) data_;
      }
      return mediapipe.RenderDataOuterClass.RenderAnnotation.Arrow.getDefaultInstance();
    }
    /**
     * <code>optional .mediapipe.RenderAnnotation.Arrow arrow = 7;</code>
     */
    public mediapipe.RenderDataOuterClass.RenderAnnotation.ArrowOrBuilder getArrowOrBuilder() {
      if (dataCase_ == 7) {
         return (mediapipe.RenderDataOuterClass.RenderAnnotation.Arrow) data_;
      }
      return mediapipe.RenderDataOuterClass.RenderAnnotation.Arrow.getDefaultInstance();
    }

    public static final int TEXT_FIELD_NUMBER = 8;
    /**
     * <code>optional .mediapipe.RenderAnnotation.Text text = 8;</code>
     */
    public boolean hasText() {
      return dataCase_ == 8;
    }
    /**
     * <code>optional .mediapipe.RenderAnnotation.Text text = 8;</code>
     */
    public mediapipe.RenderDataOuterClass.RenderAnnotation.Text getText() {
      if (dataCase_ == 8) {
         return (mediapipe.RenderDataOuterClass.RenderAnnotation.Text) data_;
      }
      return mediapipe.RenderDataOuterClass.RenderAnnotation.Text.getDefaultInstance();
    }
    /**
     * <code>optional .mediapipe.RenderAnnotation.Text text = 8;</code>
     */
    public mediapipe.RenderDataOuterClass.RenderAnnotation.TextOrBuilder getTextOrBuilder() {
      if (dataCase_ == 8) {
         return (mediapipe.RenderDataOuterClass.RenderAnnotation.Text) data_;
      }
      return mediapipe.RenderDataOuterClass.RenderAnnotation.Text.getDefaultInstance();
    }

    public static final int ROUNDED_RECTANGLE_FIELD_NUMBER = 9;
    /**
     * <code>optional .mediapipe.RenderAnnotation.RoundedRectangle rounded_rectangle = 9;</code>
     */
    public boolean hasRoundedRectangle() {
      return dataCase_ == 9;
    }
    /**
     * <code>optional .mediapipe.RenderAnnotation.RoundedRectangle rounded_rectangle = 9;</code>
     */
    public mediapipe.RenderDataOuterClass.RenderAnnotation.RoundedRectangle getRoundedRectangle() {
      if (dataCase_ == 9) {
         return (mediapipe.RenderDataOuterClass.RenderAnnotation.RoundedRectangle) data_;
      }
      return mediapipe.RenderDataOuterClass.RenderAnnotation.RoundedRectangle.getDefaultInstance();
    }
    /**
     * <code>optional .mediapipe.RenderAnnotation.RoundedRectangle rounded_rectangle = 9;</code>
     */
    public mediapipe.RenderDataOuterClass.RenderAnnotation.RoundedRectangleOrBuilder getRoundedRectangleOrBuilder() {
      if (dataCase_ == 9) {
         return (mediapipe.RenderDataOuterClass.RenderAnnotation.RoundedRectangle) data_;
      }
      return mediapipe.RenderDataOuterClass.RenderAnnotation.RoundedRectangle.getDefaultInstance();
    }

    public static final int FILLED_ROUNDED_RECTANGLE_FIELD_NUMBER = 10;
    /**
     * <code>optional .mediapipe.RenderAnnotation.FilledRoundedRectangle filled_rounded_rectangle = 10;</code>
     */
    public boolean hasFilledRoundedRectangle() {
      return dataCase_ == 10;
    }
    /**
     * <code>optional .mediapipe.RenderAnnotation.FilledRoundedRectangle filled_rounded_rectangle = 10;</code>
     */
    public mediapipe.RenderDataOuterClass.RenderAnnotation.FilledRoundedRectangle getFilledRoundedRectangle() {
      if (dataCase_ == 10) {
         return (mediapipe.RenderDataOuterClass.RenderAnnotation.FilledRoundedRectangle) data_;
      }
      return mediapipe.RenderDataOuterClass.RenderAnnotation.FilledRoundedRectangle.getDefaultInstance();
    }
    /**
     * <code>optional .mediapipe.RenderAnnotation.FilledRoundedRectangle filled_rounded_rectangle = 10;</code>
     */
    public mediapipe.RenderDataOuterClass.RenderAnnotation.FilledRoundedRectangleOrBuilder getFilledRoundedRectangleOrBuilder() {
      if (dataCase_ == 10) {
         return (mediapipe.RenderDataOuterClass.RenderAnnotation.FilledRoundedRectangle) data_;
      }
      return mediapipe.RenderDataOuterClass.RenderAnnotation.FilledRoundedRectangle.getDefaultInstance();
    }

    public static final int GRADIENT_LINE_FIELD_NUMBER = 14;
    /**
     * <code>optional .mediapipe.RenderAnnotation.GradientLine gradient_line = 14;</code>
     */
    public boolean hasGradientLine() {
      return dataCase_ == 14;
    }
    /**
     * <code>optional .mediapipe.RenderAnnotation.GradientLine gradient_line = 14;</code>
     */
    public mediapipe.RenderDataOuterClass.RenderAnnotation.GradientLine getGradientLine() {
      if (dataCase_ == 14) {
         return (mediapipe.RenderDataOuterClass.RenderAnnotation.GradientLine) data_;
      }
      return mediapipe.RenderDataOuterClass.RenderAnnotation.GradientLine.getDefaultInstance();
    }
    /**
     * <code>optional .mediapipe.RenderAnnotation.GradientLine gradient_line = 14;</code>
     */
    public mediapipe.RenderDataOuterClass.RenderAnnotation.GradientLineOrBuilder getGradientLineOrBuilder() {
      if (dataCase_ == 14) {
         return (mediapipe.RenderDataOuterClass.RenderAnnotation.GradientLine) data_;
      }
      return mediapipe.RenderDataOuterClass.RenderAnnotation.GradientLine.getDefaultInstance();
    }

    public static final int THICKNESS_FIELD_NUMBER = 11;
    private double thickness_;
    /**
     * <pre>
     * Thickness for drawing the annotation.
     * </pre>
     *
     * <code>optional double thickness = 11 [default = 1];</code>
     */
    public boolean hasThickness() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    /**
     * <pre>
     * Thickness for drawing the annotation.
     * </pre>
     *
     * <code>optional double thickness = 11 [default = 1];</code>
     */
    public double getThickness() {
      return thickness_;
    }

    public static final int COLOR_FIELD_NUMBER = 12;
    private mediapipe.ColorOuterClass.Color color_;
    /**
     * <pre>
     * Color for drawing the annotation. For FilledRectangle and FilledOval, this
     * color is used only for drawing the boundary.
     * </pre>
     *
     * <code>optional .mediapipe.Color color = 12;</code>
     */
    public boolean hasColor() {
      return ((bitField0_ & 0x00001000) == 0x00001000);
    }
    /**
     * <pre>
     * Color for drawing the annotation. For FilledRectangle and FilledOval, this
     * color is used only for drawing the boundary.
     * </pre>
     *
     * <code>optional .mediapipe.Color color = 12;</code>
     */
    public mediapipe.ColorOuterClass.Color getColor() {
      return color_ == null ? mediapipe.ColorOuterClass.Color.getDefaultInstance() : color_;
    }
    /**
     * <pre>
     * Color for drawing the annotation. For FilledRectangle and FilledOval, this
     * color is used only for drawing the boundary.
     * </pre>
     *
     * <code>optional .mediapipe.Color color = 12;</code>
     */
    public mediapipe.ColorOuterClass.ColorOrBuilder getColorOrBuilder() {
      return color_ == null ? mediapipe.ColorOuterClass.Color.getDefaultInstance() : color_;
    }

    public static final int SCENE_TAG_FIELD_NUMBER = 13;
    private volatile java.lang.Object sceneTag_;
    /**
     * <pre>
     * A hint regarding what this annotation is for. Should be unique across all
     * annotation types.
     * </pre>
     *
     * <code>optional string scene_tag = 13;</code>
     */
    public boolean hasSceneTag() {
      return ((bitField0_ & 0x00002000) == 0x00002000);
    }
    /**
     * <pre>
     * A hint regarding what this annotation is for. Should be unique across all
     * annotation types.
     * </pre>
     *
     * <code>optional string scene_tag = 13;</code>
     */
    public java.lang.String getSceneTag() {
      java.lang.Object ref = sceneTag_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          sceneTag_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     * A hint regarding what this annotation is for. Should be unique across all
     * annotation types.
     * </pre>
     *
     * <code>optional string scene_tag = 13;</code>
     */
    public com.google.protobuf.ByteString
        getSceneTagBytes() {
      java.lang.Object ref = sceneTag_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        sceneTag_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (dataCase_ == 1) {
        output.writeMessage(1, (mediapipe.RenderDataOuterClass.RenderAnnotation.Rectangle) data_);
      }
      if (dataCase_ == 2) {
        output.writeMessage(2, (mediapipe.RenderDataOuterClass.RenderAnnotation.FilledRectangle) data_);
      }
      if (dataCase_ == 3) {
        output.writeMessage(3, (mediapipe.RenderDataOuterClass.RenderAnnotation.Oval) data_);
      }
      if (dataCase_ == 4) {
        output.writeMessage(4, (mediapipe.RenderDataOuterClass.RenderAnnotation.FilledOval) data_);
      }
      if (dataCase_ == 5) {
        output.writeMessage(5, (mediapipe.RenderDataOuterClass.RenderAnnotation.Point) data_);
      }
      if (dataCase_ == 6) {
        output.writeMessage(6, (mediapipe.RenderDataOuterClass.RenderAnnotation.Line) data_);
      }
      if (dataCase_ == 7) {
        output.writeMessage(7, (mediapipe.RenderDataOuterClass.RenderAnnotation.Arrow) data_);
      }
      if (dataCase_ == 8) {
        output.writeMessage(8, (mediapipe.RenderDataOuterClass.RenderAnnotation.Text) data_);
      }
      if (dataCase_ == 9) {
        output.writeMessage(9, (mediapipe.RenderDataOuterClass.RenderAnnotation.RoundedRectangle) data_);
      }
      if (dataCase_ == 10) {
        output.writeMessage(10, (mediapipe.RenderDataOuterClass.RenderAnnotation.FilledRoundedRectangle) data_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeDouble(11, thickness_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        output.writeMessage(12, getColor());
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 13, sceneTag_);
      }
      if (dataCase_ == 14) {
        output.writeMessage(14, (mediapipe.RenderDataOuterClass.RenderAnnotation.GradientLine) data_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (dataCase_ == 1) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, (mediapipe.RenderDataOuterClass.RenderAnnotation.Rectangle) data_);
      }
      if (dataCase_ == 2) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, (mediapipe.RenderDataOuterClass.RenderAnnotation.FilledRectangle) data_);
      }
      if (dataCase_ == 3) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, (mediapipe.RenderDataOuterClass.RenderAnnotation.Oval) data_);
      }
      if (dataCase_ == 4) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, (mediapipe.RenderDataOuterClass.RenderAnnotation.FilledOval) data_);
      }
      if (dataCase_ == 5) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, (mediapipe.RenderDataOuterClass.RenderAnnotation.Point) data_);
      }
      if (dataCase_ == 6) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, (mediapipe.RenderDataOuterClass.RenderAnnotation.Line) data_);
      }
      if (dataCase_ == 7) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, (mediapipe.RenderDataOuterClass.RenderAnnotation.Arrow) data_);
      }
      if (dataCase_ == 8) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(8, (mediapipe.RenderDataOuterClass.RenderAnnotation.Text) data_);
      }
      if (dataCase_ == 9) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(9, (mediapipe.RenderDataOuterClass.RenderAnnotation.RoundedRectangle) data_);
      }
      if (dataCase_ == 10) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(10, (mediapipe.RenderDataOuterClass.RenderAnnotation.FilledRoundedRectangle) data_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(11, thickness_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(12, getColor());
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(13, sceneTag_);
      }
      if (dataCase_ == 14) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(14, (mediapipe.RenderDataOuterClass.RenderAnnotation.GradientLine) data_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof mediapipe.RenderDataOuterClass.RenderAnnotation)) {
        return super.equals(obj);
      }
      mediapipe.RenderDataOuterClass.RenderAnnotation other = (mediapipe.RenderDataOuterClass.RenderAnnotation) obj;

      boolean result = true;
      result = result && (hasThickness() == other.hasThickness());
      if (hasThickness()) {
        result = result && (
            java.lang.Double.doubleToLongBits(getThickness())
            == java.lang.Double.doubleToLongBits(
                other.getThickness()));
      }
      result = result && (hasColor() == other.hasColor());
      if (hasColor()) {
        result = result && getColor()
            .equals(other.getColor());
      }
      result = result && (hasSceneTag() == other.hasSceneTag());
      if (hasSceneTag()) {
        result = result && getSceneTag()
            .equals(other.getSceneTag());
      }
      result = result && getDataCase().equals(
          other.getDataCase());
      if (!result) return false;
      switch (dataCase_) {
        case 1:
          result = result && getRectangle()
              .equals(other.getRectangle());
          break;
        case 2:
          result = result && getFilledRectangle()
              .equals(other.getFilledRectangle());
          break;
        case 3:
          result = result && getOval()
              .equals(other.getOval());
          break;
        case 4:
          result = result && getFilledOval()
              .equals(other.getFilledOval());
          break;
        case 5:
          result = result && getPoint()
              .equals(other.getPoint());
          break;
        case 6:
          result = result && getLine()
              .equals(other.getLine());
          break;
        case 7:
          result = result && getArrow()
              .equals(other.getArrow());
          break;
        case 8:
          result = result && getText()
              .equals(other.getText());
          break;
        case 9:
          result = result && getRoundedRectangle()
              .equals(other.getRoundedRectangle());
          break;
        case 10:
          result = result && getFilledRoundedRectangle()
              .equals(other.getFilledRoundedRectangle());
          break;
        case 14:
          result = result && getGradientLine()
              .equals(other.getGradientLine());
          break;
        case 0:
        default:
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      if (hasThickness()) {
        hash = (37 * hash) + THICKNESS_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getThickness()));
      }
      if (hasColor()) {
        hash = (37 * hash) + COLOR_FIELD_NUMBER;
        hash = (53 * hash) + getColor().hashCode();
      }
      if (hasSceneTag()) {
        hash = (37 * hash) + SCENE_TAG_FIELD_NUMBER;
        hash = (53 * hash) + getSceneTag().hashCode();
      }
      switch (dataCase_) {
        case 1:
          hash = (37 * hash) + RECTANGLE_FIELD_NUMBER;
          hash = (53 * hash) + getRectangle().hashCode();
          break;
        case 2:
          hash = (37 * hash) + FILLED_RECTANGLE_FIELD_NUMBER;
          hash = (53 * hash) + getFilledRectangle().hashCode();
          break;
        case 3:
          hash = (37 * hash) + OVAL_FIELD_NUMBER;
          hash = (53 * hash) + getOval().hashCode();
          break;
        case 4:
          hash = (37 * hash) + FILLED_OVAL_FIELD_NUMBER;
          hash = (53 * hash) + getFilledOval().hashCode();
          break;
        case 5:
          hash = (37 * hash) + POINT_FIELD_NUMBER;
          hash = (53 * hash) + getPoint().hashCode();
          break;
        case 6:
          hash = (37 * hash) + LINE_FIELD_NUMBER;
          hash = (53 * hash) + getLine().hashCode();
          break;
        case 7:
          hash = (37 * hash) + ARROW_FIELD_NUMBER;
          hash = (53 * hash) + getArrow().hashCode();
          break;
        case 8:
          hash = (37 * hash) + TEXT_FIELD_NUMBER;
          hash = (53 * hash) + getText().hashCode();
          break;
        case 9:
          hash = (37 * hash) + ROUNDED_RECTANGLE_FIELD_NUMBER;
          hash = (53 * hash) + getRoundedRectangle().hashCode();
          break;
        case 10:
          hash = (37 * hash) + FILLED_ROUNDED_RECTANGLE_FIELD_NUMBER;
          hash = (53 * hash) + getFilledRoundedRectangle().hashCode();
          break;
        case 14:
          hash = (37 * hash) + GRADIENT_LINE_FIELD_NUMBER;
          hash = (53 * hash) + getGradientLine().hashCode();
          break;
        case 0:
        default:
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static mediapipe.RenderDataOuterClass.RenderAnnotation parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static mediapipe.RenderDataOuterClass.RenderAnnotation parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static mediapipe.RenderDataOuterClass.RenderAnnotation parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static mediapipe.RenderDataOuterClass.RenderAnnotation parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static mediapipe.RenderDataOuterClass.RenderAnnotation parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static mediapipe.RenderDataOuterClass.RenderAnnotation parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static mediapipe.RenderDataOuterClass.RenderAnnotation parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static mediapipe.RenderDataOuterClass.RenderAnnotation parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static mediapipe.RenderDataOuterClass.RenderAnnotation parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static mediapipe.RenderDataOuterClass.RenderAnnotation parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(mediapipe.RenderDataOuterClass.RenderAnnotation prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code mediapipe.RenderAnnotation}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:mediapipe.RenderAnnotation)
        mediapipe.RenderDataOuterClass.RenderAnnotationOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return mediapipe.RenderDataOuterClass.internal_static_mediapipe_RenderAnnotation_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return mediapipe.RenderDataOuterClass.internal_static_mediapipe_RenderAnnotation_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                mediapipe.RenderDataOuterClass.RenderAnnotation.class, mediapipe.RenderDataOuterClass.RenderAnnotation.Builder.class);
      }

      // Construct using mediapipe.RenderDataOuterClass.RenderAnnotation.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getColorFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        thickness_ = 1D;
        bitField0_ = (bitField0_ & ~0x00000800);
        if (colorBuilder_ == null) {
          color_ = null;
        } else {
          colorBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00001000);
        sceneTag_ = "";
        bitField0_ = (bitField0_ & ~0x00002000);
        dataCase_ = 0;
        data_ = null;
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return mediapipe.RenderDataOuterClass.internal_static_mediapipe_RenderAnnotation_descriptor;
      }

      public mediapipe.RenderDataOuterClass.RenderAnnotation getDefaultInstanceForType() {
        return mediapipe.RenderDataOuterClass.RenderAnnotation.getDefaultInstance();
      }

      public mediapipe.RenderDataOuterClass.RenderAnnotation build() {
        mediapipe.RenderDataOuterClass.RenderAnnotation result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public mediapipe.RenderDataOuterClass.RenderAnnotation buildPartial() {
        mediapipe.RenderDataOuterClass.RenderAnnotation result = new mediapipe.RenderDataOuterClass.RenderAnnotation(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (dataCase_ == 1) {
          if (rectangleBuilder_ == null) {
            result.data_ = data_;
          } else {
            result.data_ = rectangleBuilder_.build();
          }
        }
        if (dataCase_ == 2) {
          if (filledRectangleBuilder_ == null) {
            result.data_ = data_;
          } else {
            result.data_ = filledRectangleBuilder_.build();
          }
        }
        if (dataCase_ == 3) {
          if (ovalBuilder_ == null) {
            result.data_ = data_;
          } else {
            result.data_ = ovalBuilder_.build();
          }
        }
        if (dataCase_ == 4) {
          if (filledOvalBuilder_ == null) {
            result.data_ = data_;
          } else {
            result.data_ = filledOvalBuilder_.build();
          }
        }
        if (dataCase_ == 5) {
          if (pointBuilder_ == null) {
            result.data_ = data_;
          } else {
            result.data_ = pointBuilder_.build();
          }
        }
        if (dataCase_ == 6) {
          if (lineBuilder_ == null) {
            result.data_ = data_;
          } else {
            result.data_ = lineBuilder_.build();
          }
        }
        if (dataCase_ == 7) {
          if (arrowBuilder_ == null) {
            result.data_ = data_;
          } else {
            result.data_ = arrowBuilder_.build();
          }
        }
        if (dataCase_ == 8) {
          if (textBuilder_ == null) {
            result.data_ = data_;
          } else {
            result.data_ = textBuilder_.build();
          }
        }
        if (dataCase_ == 9) {
          if (roundedRectangleBuilder_ == null) {
            result.data_ = data_;
          } else {
            result.data_ = roundedRectangleBuilder_.build();
          }
        }
        if (dataCase_ == 10) {
          if (filledRoundedRectangleBuilder_ == null) {
            result.data_ = data_;
          } else {
            result.data_ = filledRoundedRectangleBuilder_.build();
          }
        }
        if (dataCase_ == 14) {
          if (gradientLineBuilder_ == null) {
            result.data_ = data_;
          } else {
            result.data_ = gradientLineBuilder_.build();
          }
        }
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000800;
        }
        result.thickness_ = thickness_;
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00001000;
        }
        if (colorBuilder_ == null) {
          result.color_ = color_;
        } else {
          result.color_ = colorBuilder_.build();
        }
        if (((from_bitField0_ & 0x00002000) == 0x00002000)) {
          to_bitField0_ |= 0x00002000;
        }
        result.sceneTag_ = sceneTag_;
        result.bitField0_ = to_bitField0_;
        result.dataCase_ = dataCase_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof mediapipe.RenderDataOuterClass.RenderAnnotation) {
          return mergeFrom((mediapipe.RenderDataOuterClass.RenderAnnotation)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(mediapipe.RenderDataOuterClass.RenderAnnotation other) {
        if (other == mediapipe.RenderDataOuterClass.RenderAnnotation.getDefaultInstance()) return this;
        if (other.hasThickness()) {
          setThickness(other.getThickness());
        }
        if (other.hasColor()) {
          mergeColor(other.getColor());
        }
        if (other.hasSceneTag()) {
          bitField0_ |= 0x00002000;
          sceneTag_ = other.sceneTag_;
          onChanged();
        }
        switch (other.getDataCase()) {
          case RECTANGLE: {
            mergeRectangle(other.getRectangle());
            break;
          }
          case FILLED_RECTANGLE: {
            mergeFilledRectangle(other.getFilledRectangle());
            break;
          }
          case OVAL: {
            mergeOval(other.getOval());
            break;
          }
          case FILLED_OVAL: {
            mergeFilledOval(other.getFilledOval());
            break;
          }
          case POINT: {
            mergePoint(other.getPoint());
            break;
          }
          case LINE: {
            mergeLine(other.getLine());
            break;
          }
          case ARROW: {
            mergeArrow(other.getArrow());
            break;
          }
          case TEXT: {
            mergeText(other.getText());
            break;
          }
          case ROUNDED_RECTANGLE: {
            mergeRoundedRectangle(other.getRoundedRectangle());
            break;
          }
          case FILLED_ROUNDED_RECTANGLE: {
            mergeFilledRoundedRectangle(other.getFilledRoundedRectangle());
            break;
          }
          case GRADIENT_LINE: {
            mergeGradientLine(other.getGradientLine());
            break;
          }
          case DATA_NOT_SET: {
            break;
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        mediapipe.RenderDataOuterClass.RenderAnnotation parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (mediapipe.RenderDataOuterClass.RenderAnnotation) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int dataCase_ = 0;
      private java.lang.Object data_;
      public DataCase
          getDataCase() {
        return DataCase.forNumber(
            dataCase_);
      }

      public Builder clearData() {
        dataCase_ = 0;
        data_ = null;
        onChanged();
        return this;
      }

      private int bitField0_;

      private com.google.protobuf.SingleFieldBuilderV3<
          mediapipe.RenderDataOuterClass.RenderAnnotation.Rectangle, mediapipe.RenderDataOuterClass.RenderAnnotation.Rectangle.Builder, mediapipe.RenderDataOuterClass.RenderAnnotation.RectangleOrBuilder> rectangleBuilder_;
      /**
       * <code>optional .mediapipe.RenderAnnotation.Rectangle rectangle = 1;</code>
       */
      public boolean hasRectangle() {
        return dataCase_ == 1;
      }
      /**
       * <code>optional .mediapipe.RenderAnnotation.Rectangle rectangle = 1;</code>
       */
      public mediapipe.RenderDataOuterClass.RenderAnnotation.Rectangle getRectangle() {
        if (rectangleBuilder_ == null) {
          if (dataCase_ == 1) {
            return (mediapipe.RenderDataOuterClass.RenderAnnotation.Rectangle) data_;
          }
          return mediapipe.RenderDataOuterClass.RenderAnnotation.Rectangle.getDefaultInstance();
        } else {
          if (dataCase_ == 1) {
            return rectangleBuilder_.getMessage();
          }
          return mediapipe.RenderDataOuterClass.RenderAnnotation.Rectangle.getDefaultInstance();
        }
      }
      /**
       * <code>optional .mediapipe.RenderAnnotation.Rectangle rectangle = 1;</code>
       */
      public Builder setRectangle(mediapipe.RenderDataOuterClass.RenderAnnotation.Rectangle value) {
        if (rectangleBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          data_ = value;
          onChanged();
        } else {
          rectangleBuilder_.setMessage(value);
        }
        dataCase_ = 1;
        return this;
      }
      /**
       * <code>optional .mediapipe.RenderAnnotation.Rectangle rectangle = 1;</code>
       */
      public Builder setRectangle(
          mediapipe.RenderDataOuterClass.RenderAnnotation.Rectangle.Builder builderForValue) {
        if (rectangleBuilder_ == null) {
          data_ = builderForValue.build();
          onChanged();
        } else {
          rectangleBuilder_.setMessage(builderForValue.build());
        }
        dataCase_ = 1;
        return this;
      }
      /**
       * <code>optional .mediapipe.RenderAnnotation.Rectangle rectangle = 1;</code>
       */
      public Builder mergeRectangle(mediapipe.RenderDataOuterClass.RenderAnnotation.Rectangle value) {
        if (rectangleBuilder_ == null) {
          if (dataCase_ == 1 &&
              data_ != mediapipe.RenderDataOuterClass.RenderAnnotation.Rectangle.getDefaultInstance()) {
            data_ = mediapipe.RenderDataOuterClass.RenderAnnotation.Rectangle.newBuilder((mediapipe.RenderDataOuterClass.RenderAnnotation.Rectangle) data_)
                .mergeFrom(value).buildPartial();
          } else {
            data_ = value;
          }
          onChanged();
        } else {
          if (dataCase_ == 1) {
            rectangleBuilder_.mergeFrom(value);
          }
          rectangleBuilder_.setMessage(value);
        }
        dataCase_ = 1;
        return this;
      }
      /**
       * <code>optional .mediapipe.RenderAnnotation.Rectangle rectangle = 1;</code>
       */
      public Builder clearRectangle() {
        if (rectangleBuilder_ == null) {
          if (dataCase_ == 1) {
            dataCase_ = 0;
            data_ = null;
            onChanged();
          }
        } else {
          if (dataCase_ == 1) {
            dataCase_ = 0;
            data_ = null;
          }
          rectangleBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>optional .mediapipe.RenderAnnotation.Rectangle rectangle = 1;</code>
       */
      public mediapipe.RenderDataOuterClass.RenderAnnotation.Rectangle.Builder getRectangleBuilder() {
        return getRectangleFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .mediapipe.RenderAnnotation.Rectangle rectangle = 1;</code>
       */
      public mediapipe.RenderDataOuterClass.RenderAnnotation.RectangleOrBuilder getRectangleOrBuilder() {
        if ((dataCase_ == 1) && (rectangleBuilder_ != null)) {
          return rectangleBuilder_.getMessageOrBuilder();
        } else {
          if (dataCase_ == 1) {
            return (mediapipe.RenderDataOuterClass.RenderAnnotation.Rectangle) data_;
          }
          return mediapipe.RenderDataOuterClass.RenderAnnotation.Rectangle.getDefaultInstance();
        }
      }
      /**
       * <code>optional .mediapipe.RenderAnnotation.Rectangle rectangle = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          mediapipe.RenderDataOuterClass.RenderAnnotation.Rectangle, mediapipe.RenderDataOuterClass.RenderAnnotation.Rectangle.Builder, mediapipe.RenderDataOuterClass.RenderAnnotation.RectangleOrBuilder> 
          getRectangleFieldBuilder() {
        if (rectangleBuilder_ == null) {
          if (!(dataCase_ == 1)) {
            data_ = mediapipe.RenderDataOuterClass.RenderAnnotation.Rectangle.getDefaultInstance();
          }
          rectangleBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              mediapipe.RenderDataOuterClass.RenderAnnotation.Rectangle, mediapipe.RenderDataOuterClass.RenderAnnotation.Rectangle.Builder, mediapipe.RenderDataOuterClass.RenderAnnotation.RectangleOrBuilder>(
                  (mediapipe.RenderDataOuterClass.RenderAnnotation.Rectangle) data_,
                  getParentForChildren(),
                  isClean());
          data_ = null;
        }
        dataCase_ = 1;
        onChanged();;
        return rectangleBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          mediapipe.RenderDataOuterClass.RenderAnnotation.FilledRectangle, mediapipe.RenderDataOuterClass.RenderAnnotation.FilledRectangle.Builder, mediapipe.RenderDataOuterClass.RenderAnnotation.FilledRectangleOrBuilder> filledRectangleBuilder_;
      /**
       * <code>optional .mediapipe.RenderAnnotation.FilledRectangle filled_rectangle = 2;</code>
       */
      public boolean hasFilledRectangle() {
        return dataCase_ == 2;
      }
      /**
       * <code>optional .mediapipe.RenderAnnotation.FilledRectangle filled_rectangle = 2;</code>
       */
      public mediapipe.RenderDataOuterClass.RenderAnnotation.FilledRectangle getFilledRectangle() {
        if (filledRectangleBuilder_ == null) {
          if (dataCase_ == 2) {
            return (mediapipe.RenderDataOuterClass.RenderAnnotation.FilledRectangle) data_;
          }
          return mediapipe.RenderDataOuterClass.RenderAnnotation.FilledRectangle.getDefaultInstance();
        } else {
          if (dataCase_ == 2) {
            return filledRectangleBuilder_.getMessage();
          }
          return mediapipe.RenderDataOuterClass.RenderAnnotation.FilledRectangle.getDefaultInstance();
        }
      }
      /**
       * <code>optional .mediapipe.RenderAnnotation.FilledRectangle filled_rectangle = 2;</code>
       */
      public Builder setFilledRectangle(mediapipe.RenderDataOuterClass.RenderAnnotation.FilledRectangle value) {
        if (filledRectangleBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          data_ = value;
          onChanged();
        } else {
          filledRectangleBuilder_.setMessage(value);
        }
        dataCase_ = 2;
        return this;
      }
      /**
       * <code>optional .mediapipe.RenderAnnotation.FilledRectangle filled_rectangle = 2;</code>
       */
      public Builder setFilledRectangle(
          mediapipe.RenderDataOuterClass.RenderAnnotation.FilledRectangle.Builder builderForValue) {
        if (filledRectangleBuilder_ == null) {
          data_ = builderForValue.build();
          onChanged();
        } else {
          filledRectangleBuilder_.setMessage(builderForValue.build());
        }
        dataCase_ = 2;
        return this;
      }
      /**
       * <code>optional .mediapipe.RenderAnnotation.FilledRectangle filled_rectangle = 2;</code>
       */
      public Builder mergeFilledRectangle(mediapipe.RenderDataOuterClass.RenderAnnotation.FilledRectangle value) {
        if (filledRectangleBuilder_ == null) {
          if (dataCase_ == 2 &&
              data_ != mediapipe.RenderDataOuterClass.RenderAnnotation.FilledRectangle.getDefaultInstance()) {
            data_ = mediapipe.RenderDataOuterClass.RenderAnnotation.FilledRectangle.newBuilder((mediapipe.RenderDataOuterClass.RenderAnnotation.FilledRectangle) data_)
                .mergeFrom(value).buildPartial();
          } else {
            data_ = value;
          }
          onChanged();
        } else {
          if (dataCase_ == 2) {
            filledRectangleBuilder_.mergeFrom(value);
          }
          filledRectangleBuilder_.setMessage(value);
        }
        dataCase_ = 2;
        return this;
      }
      /**
       * <code>optional .mediapipe.RenderAnnotation.FilledRectangle filled_rectangle = 2;</code>
       */
      public Builder clearFilledRectangle() {
        if (filledRectangleBuilder_ == null) {
          if (dataCase_ == 2) {
            dataCase_ = 0;
            data_ = null;
            onChanged();
          }
        } else {
          if (dataCase_ == 2) {
            dataCase_ = 0;
            data_ = null;
          }
          filledRectangleBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>optional .mediapipe.RenderAnnotation.FilledRectangle filled_rectangle = 2;</code>
       */
      public mediapipe.RenderDataOuterClass.RenderAnnotation.FilledRectangle.Builder getFilledRectangleBuilder() {
        return getFilledRectangleFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .mediapipe.RenderAnnotation.FilledRectangle filled_rectangle = 2;</code>
       */
      public mediapipe.RenderDataOuterClass.RenderAnnotation.FilledRectangleOrBuilder getFilledRectangleOrBuilder() {
        if ((dataCase_ == 2) && (filledRectangleBuilder_ != null)) {
          return filledRectangleBuilder_.getMessageOrBuilder();
        } else {
          if (dataCase_ == 2) {
            return (mediapipe.RenderDataOuterClass.RenderAnnotation.FilledRectangle) data_;
          }
          return mediapipe.RenderDataOuterClass.RenderAnnotation.FilledRectangle.getDefaultInstance();
        }
      }
      /**
       * <code>optional .mediapipe.RenderAnnotation.FilledRectangle filled_rectangle = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          mediapipe.RenderDataOuterClass.RenderAnnotation.FilledRectangle, mediapipe.RenderDataOuterClass.RenderAnnotation.FilledRectangle.Builder, mediapipe.RenderDataOuterClass.RenderAnnotation.FilledRectangleOrBuilder> 
          getFilledRectangleFieldBuilder() {
        if (filledRectangleBuilder_ == null) {
          if (!(dataCase_ == 2)) {
            data_ = mediapipe.RenderDataOuterClass.RenderAnnotation.FilledRectangle.getDefaultInstance();
          }
          filledRectangleBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              mediapipe.RenderDataOuterClass.RenderAnnotation.FilledRectangle, mediapipe.RenderDataOuterClass.RenderAnnotation.FilledRectangle.Builder, mediapipe.RenderDataOuterClass.RenderAnnotation.FilledRectangleOrBuilder>(
                  (mediapipe.RenderDataOuterClass.RenderAnnotation.FilledRectangle) data_,
                  getParentForChildren(),
                  isClean());
          data_ = null;
        }
        dataCase_ = 2;
        onChanged();;
        return filledRectangleBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          mediapipe.RenderDataOuterClass.RenderAnnotation.Oval, mediapipe.RenderDataOuterClass.RenderAnnotation.Oval.Builder, mediapipe.RenderDataOuterClass.RenderAnnotation.OvalOrBuilder> ovalBuilder_;
      /**
       * <code>optional .mediapipe.RenderAnnotation.Oval oval = 3;</code>
       */
      public boolean hasOval() {
        return dataCase_ == 3;
      }
      /**
       * <code>optional .mediapipe.RenderAnnotation.Oval oval = 3;</code>
       */
      public mediapipe.RenderDataOuterClass.RenderAnnotation.Oval getOval() {
        if (ovalBuilder_ == null) {
          if (dataCase_ == 3) {
            return (mediapipe.RenderDataOuterClass.RenderAnnotation.Oval) data_;
          }
          return mediapipe.RenderDataOuterClass.RenderAnnotation.Oval.getDefaultInstance();
        } else {
          if (dataCase_ == 3) {
            return ovalBuilder_.getMessage();
          }
          return mediapipe.RenderDataOuterClass.RenderAnnotation.Oval.getDefaultInstance();
        }
      }
      /**
       * <code>optional .mediapipe.RenderAnnotation.Oval oval = 3;</code>
       */
      public Builder setOval(mediapipe.RenderDataOuterClass.RenderAnnotation.Oval value) {
        if (ovalBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          data_ = value;
          onChanged();
        } else {
          ovalBuilder_.setMessage(value);
        }
        dataCase_ = 3;
        return this;
      }
      /**
       * <code>optional .mediapipe.RenderAnnotation.Oval oval = 3;</code>
       */
      public Builder setOval(
          mediapipe.RenderDataOuterClass.RenderAnnotation.Oval.Builder builderForValue) {
        if (ovalBuilder_ == null) {
          data_ = builderForValue.build();
          onChanged();
        } else {
          ovalBuilder_.setMessage(builderForValue.build());
        }
        dataCase_ = 3;
        return this;
      }
      /**
       * <code>optional .mediapipe.RenderAnnotation.Oval oval = 3;</code>
       */
      public Builder mergeOval(mediapipe.RenderDataOuterClass.RenderAnnotation.Oval value) {
        if (ovalBuilder_ == null) {
          if (dataCase_ == 3 &&
              data_ != mediapipe.RenderDataOuterClass.RenderAnnotation.Oval.getDefaultInstance()) {
            data_ = mediapipe.RenderDataOuterClass.RenderAnnotation.Oval.newBuilder((mediapipe.RenderDataOuterClass.RenderAnnotation.Oval) data_)
                .mergeFrom(value).buildPartial();
          } else {
            data_ = value;
          }
          onChanged();
        } else {
          if (dataCase_ == 3) {
            ovalBuilder_.mergeFrom(value);
          }
          ovalBuilder_.setMessage(value);
        }
        dataCase_ = 3;
        return this;
      }
      /**
       * <code>optional .mediapipe.RenderAnnotation.Oval oval = 3;</code>
       */
      public Builder clearOval() {
        if (ovalBuilder_ == null) {
          if (dataCase_ == 3) {
            dataCase_ = 0;
            data_ = null;
            onChanged();
          }
        } else {
          if (dataCase_ == 3) {
            dataCase_ = 0;
            data_ = null;
          }
          ovalBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>optional .mediapipe.RenderAnnotation.Oval oval = 3;</code>
       */
      public mediapipe.RenderDataOuterClass.RenderAnnotation.Oval.Builder getOvalBuilder() {
        return getOvalFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .mediapipe.RenderAnnotation.Oval oval = 3;</code>
       */
      public mediapipe.RenderDataOuterClass.RenderAnnotation.OvalOrBuilder getOvalOrBuilder() {
        if ((dataCase_ == 3) && (ovalBuilder_ != null)) {
          return ovalBuilder_.getMessageOrBuilder();
        } else {
          if (dataCase_ == 3) {
            return (mediapipe.RenderDataOuterClass.RenderAnnotation.Oval) data_;
          }
          return mediapipe.RenderDataOuterClass.RenderAnnotation.Oval.getDefaultInstance();
        }
      }
      /**
       * <code>optional .mediapipe.RenderAnnotation.Oval oval = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          mediapipe.RenderDataOuterClass.RenderAnnotation.Oval, mediapipe.RenderDataOuterClass.RenderAnnotation.Oval.Builder, mediapipe.RenderDataOuterClass.RenderAnnotation.OvalOrBuilder> 
          getOvalFieldBuilder() {
        if (ovalBuilder_ == null) {
          if (!(dataCase_ == 3)) {
            data_ = mediapipe.RenderDataOuterClass.RenderAnnotation.Oval.getDefaultInstance();
          }
          ovalBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              mediapipe.RenderDataOuterClass.RenderAnnotation.Oval, mediapipe.RenderDataOuterClass.RenderAnnotation.Oval.Builder, mediapipe.RenderDataOuterClass.RenderAnnotation.OvalOrBuilder>(
                  (mediapipe.RenderDataOuterClass.RenderAnnotation.Oval) data_,
                  getParentForChildren(),
                  isClean());
          data_ = null;
        }
        dataCase_ = 3;
        onChanged();;
        return ovalBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          mediapipe.RenderDataOuterClass.RenderAnnotation.FilledOval, mediapipe.RenderDataOuterClass.RenderAnnotation.FilledOval.Builder, mediapipe.RenderDataOuterClass.RenderAnnotation.FilledOvalOrBuilder> filledOvalBuilder_;
      /**
       * <code>optional .mediapipe.RenderAnnotation.FilledOval filled_oval = 4;</code>
       */
      public boolean hasFilledOval() {
        return dataCase_ == 4;
      }
      /**
       * <code>optional .mediapipe.RenderAnnotation.FilledOval filled_oval = 4;</code>
       */
      public mediapipe.RenderDataOuterClass.RenderAnnotation.FilledOval getFilledOval() {
        if (filledOvalBuilder_ == null) {
          if (dataCase_ == 4) {
            return (mediapipe.RenderDataOuterClass.RenderAnnotation.FilledOval) data_;
          }
          return mediapipe.RenderDataOuterClass.RenderAnnotation.FilledOval.getDefaultInstance();
        } else {
          if (dataCase_ == 4) {
            return filledOvalBuilder_.getMessage();
          }
          return mediapipe.RenderDataOuterClass.RenderAnnotation.FilledOval.getDefaultInstance();
        }
      }
      /**
       * <code>optional .mediapipe.RenderAnnotation.FilledOval filled_oval = 4;</code>
       */
      public Builder setFilledOval(mediapipe.RenderDataOuterClass.RenderAnnotation.FilledOval value) {
        if (filledOvalBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          data_ = value;
          onChanged();
        } else {
          filledOvalBuilder_.setMessage(value);
        }
        dataCase_ = 4;
        return this;
      }
      /**
       * <code>optional .mediapipe.RenderAnnotation.FilledOval filled_oval = 4;</code>
       */
      public Builder setFilledOval(
          mediapipe.RenderDataOuterClass.RenderAnnotation.FilledOval.Builder builderForValue) {
        if (filledOvalBuilder_ == null) {
          data_ = builderForValue.build();
          onChanged();
        } else {
          filledOvalBuilder_.setMessage(builderForValue.build());
        }
        dataCase_ = 4;
        return this;
      }
      /**
       * <code>optional .mediapipe.RenderAnnotation.FilledOval filled_oval = 4;</code>
       */
      public Builder mergeFilledOval(mediapipe.RenderDataOuterClass.RenderAnnotation.FilledOval value) {
        if (filledOvalBuilder_ == null) {
          if (dataCase_ == 4 &&
              data_ != mediapipe.RenderDataOuterClass.RenderAnnotation.FilledOval.getDefaultInstance()) {
            data_ = mediapipe.RenderDataOuterClass.RenderAnnotation.FilledOval.newBuilder((mediapipe.RenderDataOuterClass.RenderAnnotation.FilledOval) data_)
                .mergeFrom(value).buildPartial();
          } else {
            data_ = value;
          }
          onChanged();
        } else {
          if (dataCase_ == 4) {
            filledOvalBuilder_.mergeFrom(value);
          }
          filledOvalBuilder_.setMessage(value);
        }
        dataCase_ = 4;
        return this;
      }
      /**
       * <code>optional .mediapipe.RenderAnnotation.FilledOval filled_oval = 4;</code>
       */
      public Builder clearFilledOval() {
        if (filledOvalBuilder_ == null) {
          if (dataCase_ == 4) {
            dataCase_ = 0;
            data_ = null;
            onChanged();
          }
        } else {
          if (dataCase_ == 4) {
            dataCase_ = 0;
            data_ = null;
          }
          filledOvalBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>optional .mediapipe.RenderAnnotation.FilledOval filled_oval = 4;</code>
       */
      public mediapipe.RenderDataOuterClass.RenderAnnotation.FilledOval.Builder getFilledOvalBuilder() {
        return getFilledOvalFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .mediapipe.RenderAnnotation.FilledOval filled_oval = 4;</code>
       */
      public mediapipe.RenderDataOuterClass.RenderAnnotation.FilledOvalOrBuilder getFilledOvalOrBuilder() {
        if ((dataCase_ == 4) && (filledOvalBuilder_ != null)) {
          return filledOvalBuilder_.getMessageOrBuilder();
        } else {
          if (dataCase_ == 4) {
            return (mediapipe.RenderDataOuterClass.RenderAnnotation.FilledOval) data_;
          }
          return mediapipe.RenderDataOuterClass.RenderAnnotation.FilledOval.getDefaultInstance();
        }
      }
      /**
       * <code>optional .mediapipe.RenderAnnotation.FilledOval filled_oval = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          mediapipe.RenderDataOuterClass.RenderAnnotation.FilledOval, mediapipe.RenderDataOuterClass.RenderAnnotation.FilledOval.Builder, mediapipe.RenderDataOuterClass.RenderAnnotation.FilledOvalOrBuilder> 
          getFilledOvalFieldBuilder() {
        if (filledOvalBuilder_ == null) {
          if (!(dataCase_ == 4)) {
            data_ = mediapipe.RenderDataOuterClass.RenderAnnotation.FilledOval.getDefaultInstance();
          }
          filledOvalBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              mediapipe.RenderDataOuterClass.RenderAnnotation.FilledOval, mediapipe.RenderDataOuterClass.RenderAnnotation.FilledOval.Builder, mediapipe.RenderDataOuterClass.RenderAnnotation.FilledOvalOrBuilder>(
                  (mediapipe.RenderDataOuterClass.RenderAnnotation.FilledOval) data_,
                  getParentForChildren(),
                  isClean());
          data_ = null;
        }
        dataCase_ = 4;
        onChanged();;
        return filledOvalBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          mediapipe.RenderDataOuterClass.RenderAnnotation.Point, mediapipe.RenderDataOuterClass.RenderAnnotation.Point.Builder, mediapipe.RenderDataOuterClass.RenderAnnotation.PointOrBuilder> pointBuilder_;
      /**
       * <code>optional .mediapipe.RenderAnnotation.Point point = 5;</code>
       */
      public boolean hasPoint() {
        return dataCase_ == 5;
      }
      /**
       * <code>optional .mediapipe.RenderAnnotation.Point point = 5;</code>
       */
      public mediapipe.RenderDataOuterClass.RenderAnnotation.Point getPoint() {
        if (pointBuilder_ == null) {
          if (dataCase_ == 5) {
            return (mediapipe.RenderDataOuterClass.RenderAnnotation.Point) data_;
          }
          return mediapipe.RenderDataOuterClass.RenderAnnotation.Point.getDefaultInstance();
        } else {
          if (dataCase_ == 5) {
            return pointBuilder_.getMessage();
          }
          return mediapipe.RenderDataOuterClass.RenderAnnotation.Point.getDefaultInstance();
        }
      }
      /**
       * <code>optional .mediapipe.RenderAnnotation.Point point = 5;</code>
       */
      public Builder setPoint(mediapipe.RenderDataOuterClass.RenderAnnotation.Point value) {
        if (pointBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          data_ = value;
          onChanged();
        } else {
          pointBuilder_.setMessage(value);
        }
        dataCase_ = 5;
        return this;
      }
      /**
       * <code>optional .mediapipe.RenderAnnotation.Point point = 5;</code>
       */
      public Builder setPoint(
          mediapipe.RenderDataOuterClass.RenderAnnotation.Point.Builder builderForValue) {
        if (pointBuilder_ == null) {
          data_ = builderForValue.build();
          onChanged();
        } else {
          pointBuilder_.setMessage(builderForValue.build());
        }
        dataCase_ = 5;
        return this;
      }
      /**
       * <code>optional .mediapipe.RenderAnnotation.Point point = 5;</code>
       */
      public Builder mergePoint(mediapipe.RenderDataOuterClass.RenderAnnotation.Point value) {
        if (pointBuilder_ == null) {
          if (dataCase_ == 5 &&
              data_ != mediapipe.RenderDataOuterClass.RenderAnnotation.Point.getDefaultInstance()) {
            data_ = mediapipe.RenderDataOuterClass.RenderAnnotation.Point.newBuilder((mediapipe.RenderDataOuterClass.RenderAnnotation.Point) data_)
                .mergeFrom(value).buildPartial();
          } else {
            data_ = value;
          }
          onChanged();
        } else {
          if (dataCase_ == 5) {
            pointBuilder_.mergeFrom(value);
          }
          pointBuilder_.setMessage(value);
        }
        dataCase_ = 5;
        return this;
      }
      /**
       * <code>optional .mediapipe.RenderAnnotation.Point point = 5;</code>
       */
      public Builder clearPoint() {
        if (pointBuilder_ == null) {
          if (dataCase_ == 5) {
            dataCase_ = 0;
            data_ = null;
            onChanged();
          }
        } else {
          if (dataCase_ == 5) {
            dataCase_ = 0;
            data_ = null;
          }
          pointBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>optional .mediapipe.RenderAnnotation.Point point = 5;</code>
       */
      public mediapipe.RenderDataOuterClass.RenderAnnotation.Point.Builder getPointBuilder() {
        return getPointFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .mediapipe.RenderAnnotation.Point point = 5;</code>
       */
      public mediapipe.RenderDataOuterClass.RenderAnnotation.PointOrBuilder getPointOrBuilder() {
        if ((dataCase_ == 5) && (pointBuilder_ != null)) {
          return pointBuilder_.getMessageOrBuilder();
        } else {
          if (dataCase_ == 5) {
            return (mediapipe.RenderDataOuterClass.RenderAnnotation.Point) data_;
          }
          return mediapipe.RenderDataOuterClass.RenderAnnotation.Point.getDefaultInstance();
        }
      }
      /**
       * <code>optional .mediapipe.RenderAnnotation.Point point = 5;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          mediapipe.RenderDataOuterClass.RenderAnnotation.Point, mediapipe.RenderDataOuterClass.RenderAnnotation.Point.Builder, mediapipe.RenderDataOuterClass.RenderAnnotation.PointOrBuilder> 
          getPointFieldBuilder() {
        if (pointBuilder_ == null) {
          if (!(dataCase_ == 5)) {
            data_ = mediapipe.RenderDataOuterClass.RenderAnnotation.Point.getDefaultInstance();
          }
          pointBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              mediapipe.RenderDataOuterClass.RenderAnnotation.Point, mediapipe.RenderDataOuterClass.RenderAnnotation.Point.Builder, mediapipe.RenderDataOuterClass.RenderAnnotation.PointOrBuilder>(
                  (mediapipe.RenderDataOuterClass.RenderAnnotation.Point) data_,
                  getParentForChildren(),
                  isClean());
          data_ = null;
        }
        dataCase_ = 5;
        onChanged();;
        return pointBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          mediapipe.RenderDataOuterClass.RenderAnnotation.Line, mediapipe.RenderDataOuterClass.RenderAnnotation.Line.Builder, mediapipe.RenderDataOuterClass.RenderAnnotation.LineOrBuilder> lineBuilder_;
      /**
       * <code>optional .mediapipe.RenderAnnotation.Line line = 6;</code>
       */
      public boolean hasLine() {
        return dataCase_ == 6;
      }
      /**
       * <code>optional .mediapipe.RenderAnnotation.Line line = 6;</code>
       */
      public mediapipe.RenderDataOuterClass.RenderAnnotation.Line getLine() {
        if (lineBuilder_ == null) {
          if (dataCase_ == 6) {
            return (mediapipe.RenderDataOuterClass.RenderAnnotation.Line) data_;
          }
          return mediapipe.RenderDataOuterClass.RenderAnnotation.Line.getDefaultInstance();
        } else {
          if (dataCase_ == 6) {
            return lineBuilder_.getMessage();
          }
          return mediapipe.RenderDataOuterClass.RenderAnnotation.Line.getDefaultInstance();
        }
      }
      /**
       * <code>optional .mediapipe.RenderAnnotation.Line line = 6;</code>
       */
      public Builder setLine(mediapipe.RenderDataOuterClass.RenderAnnotation.Line value) {
        if (lineBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          data_ = value;
          onChanged();
        } else {
          lineBuilder_.setMessage(value);
        }
        dataCase_ = 6;
        return this;
      }
      /**
       * <code>optional .mediapipe.RenderAnnotation.Line line = 6;</code>
       */
      public Builder setLine(
          mediapipe.RenderDataOuterClass.RenderAnnotation.Line.Builder builderForValue) {
        if (lineBuilder_ == null) {
          data_ = builderForValue.build();
          onChanged();
        } else {
          lineBuilder_.setMessage(builderForValue.build());
        }
        dataCase_ = 6;
        return this;
      }
      /**
       * <code>optional .mediapipe.RenderAnnotation.Line line = 6;</code>
       */
      public Builder mergeLine(mediapipe.RenderDataOuterClass.RenderAnnotation.Line value) {
        if (lineBuilder_ == null) {
          if (dataCase_ == 6 &&
              data_ != mediapipe.RenderDataOuterClass.RenderAnnotation.Line.getDefaultInstance()) {
            data_ = mediapipe.RenderDataOuterClass.RenderAnnotation.Line.newBuilder((mediapipe.RenderDataOuterClass.RenderAnnotation.Line) data_)
                .mergeFrom(value).buildPartial();
          } else {
            data_ = value;
          }
          onChanged();
        } else {
          if (dataCase_ == 6) {
            lineBuilder_.mergeFrom(value);
          }
          lineBuilder_.setMessage(value);
        }
        dataCase_ = 6;
        return this;
      }
      /**
       * <code>optional .mediapipe.RenderAnnotation.Line line = 6;</code>
       */
      public Builder clearLine() {
        if (lineBuilder_ == null) {
          if (dataCase_ == 6) {
            dataCase_ = 0;
            data_ = null;
            onChanged();
          }
        } else {
          if (dataCase_ == 6) {
            dataCase_ = 0;
            data_ = null;
          }
          lineBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>optional .mediapipe.RenderAnnotation.Line line = 6;</code>
       */
      public mediapipe.RenderDataOuterClass.RenderAnnotation.Line.Builder getLineBuilder() {
        return getLineFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .mediapipe.RenderAnnotation.Line line = 6;</code>
       */
      public mediapipe.RenderDataOuterClass.RenderAnnotation.LineOrBuilder getLineOrBuilder() {
        if ((dataCase_ == 6) && (lineBuilder_ != null)) {
          return lineBuilder_.getMessageOrBuilder();
        } else {
          if (dataCase_ == 6) {
            return (mediapipe.RenderDataOuterClass.RenderAnnotation.Line) data_;
          }
          return mediapipe.RenderDataOuterClass.RenderAnnotation.Line.getDefaultInstance();
        }
      }
      /**
       * <code>optional .mediapipe.RenderAnnotation.Line line = 6;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          mediapipe.RenderDataOuterClass.RenderAnnotation.Line, mediapipe.RenderDataOuterClass.RenderAnnotation.Line.Builder, mediapipe.RenderDataOuterClass.RenderAnnotation.LineOrBuilder> 
          getLineFieldBuilder() {
        if (lineBuilder_ == null) {
          if (!(dataCase_ == 6)) {
            data_ = mediapipe.RenderDataOuterClass.RenderAnnotation.Line.getDefaultInstance();
          }
          lineBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              mediapipe.RenderDataOuterClass.RenderAnnotation.Line, mediapipe.RenderDataOuterClass.RenderAnnotation.Line.Builder, mediapipe.RenderDataOuterClass.RenderAnnotation.LineOrBuilder>(
                  (mediapipe.RenderDataOuterClass.RenderAnnotation.Line) data_,
                  getParentForChildren(),
                  isClean());
          data_ = null;
        }
        dataCase_ = 6;
        onChanged();;
        return lineBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          mediapipe.RenderDataOuterClass.RenderAnnotation.Arrow, mediapipe.RenderDataOuterClass.RenderAnnotation.Arrow.Builder, mediapipe.RenderDataOuterClass.RenderAnnotation.ArrowOrBuilder> arrowBuilder_;
      /**
       * <code>optional .mediapipe.RenderAnnotation.Arrow arrow = 7;</code>
       */
      public boolean hasArrow() {
        return dataCase_ == 7;
      }
      /**
       * <code>optional .mediapipe.RenderAnnotation.Arrow arrow = 7;</code>
       */
      public mediapipe.RenderDataOuterClass.RenderAnnotation.Arrow getArrow() {
        if (arrowBuilder_ == null) {
          if (dataCase_ == 7) {
            return (mediapipe.RenderDataOuterClass.RenderAnnotation.Arrow) data_;
          }
          return mediapipe.RenderDataOuterClass.RenderAnnotation.Arrow.getDefaultInstance();
        } else {
          if (dataCase_ == 7) {
            return arrowBuilder_.getMessage();
          }
          return mediapipe.RenderDataOuterClass.RenderAnnotation.Arrow.getDefaultInstance();
        }
      }
      /**
       * <code>optional .mediapipe.RenderAnnotation.Arrow arrow = 7;</code>
       */
      public Builder setArrow(mediapipe.RenderDataOuterClass.RenderAnnotation.Arrow value) {
        if (arrowBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          data_ = value;
          onChanged();
        } else {
          arrowBuilder_.setMessage(value);
        }
        dataCase_ = 7;
        return this;
      }
      /**
       * <code>optional .mediapipe.RenderAnnotation.Arrow arrow = 7;</code>
       */
      public Builder setArrow(
          mediapipe.RenderDataOuterClass.RenderAnnotation.Arrow.Builder builderForValue) {
        if (arrowBuilder_ == null) {
          data_ = builderForValue.build();
          onChanged();
        } else {
          arrowBuilder_.setMessage(builderForValue.build());
        }
        dataCase_ = 7;
        return this;
      }
      /**
       * <code>optional .mediapipe.RenderAnnotation.Arrow arrow = 7;</code>
       */
      public Builder mergeArrow(mediapipe.RenderDataOuterClass.RenderAnnotation.Arrow value) {
        if (arrowBuilder_ == null) {
          if (dataCase_ == 7 &&
              data_ != mediapipe.RenderDataOuterClass.RenderAnnotation.Arrow.getDefaultInstance()) {
            data_ = mediapipe.RenderDataOuterClass.RenderAnnotation.Arrow.newBuilder((mediapipe.RenderDataOuterClass.RenderAnnotation.Arrow) data_)
                .mergeFrom(value).buildPartial();
          } else {
            data_ = value;
          }
          onChanged();
        } else {
          if (dataCase_ == 7) {
            arrowBuilder_.mergeFrom(value);
          }
          arrowBuilder_.setMessage(value);
        }
        dataCase_ = 7;
        return this;
      }
      /**
       * <code>optional .mediapipe.RenderAnnotation.Arrow arrow = 7;</code>
       */
      public Builder clearArrow() {
        if (arrowBuilder_ == null) {
          if (dataCase_ == 7) {
            dataCase_ = 0;
            data_ = null;
            onChanged();
          }
        } else {
          if (dataCase_ == 7) {
            dataCase_ = 0;
            data_ = null;
          }
          arrowBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>optional .mediapipe.RenderAnnotation.Arrow arrow = 7;</code>
       */
      public mediapipe.RenderDataOuterClass.RenderAnnotation.Arrow.Builder getArrowBuilder() {
        return getArrowFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .mediapipe.RenderAnnotation.Arrow arrow = 7;</code>
       */
      public mediapipe.RenderDataOuterClass.RenderAnnotation.ArrowOrBuilder getArrowOrBuilder() {
        if ((dataCase_ == 7) && (arrowBuilder_ != null)) {
          return arrowBuilder_.getMessageOrBuilder();
        } else {
          if (dataCase_ == 7) {
            return (mediapipe.RenderDataOuterClass.RenderAnnotation.Arrow) data_;
          }
          return mediapipe.RenderDataOuterClass.RenderAnnotation.Arrow.getDefaultInstance();
        }
      }
      /**
       * <code>optional .mediapipe.RenderAnnotation.Arrow arrow = 7;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          mediapipe.RenderDataOuterClass.RenderAnnotation.Arrow, mediapipe.RenderDataOuterClass.RenderAnnotation.Arrow.Builder, mediapipe.RenderDataOuterClass.RenderAnnotation.ArrowOrBuilder> 
          getArrowFieldBuilder() {
        if (arrowBuilder_ == null) {
          if (!(dataCase_ == 7)) {
            data_ = mediapipe.RenderDataOuterClass.RenderAnnotation.Arrow.getDefaultInstance();
          }
          arrowBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              mediapipe.RenderDataOuterClass.RenderAnnotation.Arrow, mediapipe.RenderDataOuterClass.RenderAnnotation.Arrow.Builder, mediapipe.RenderDataOuterClass.RenderAnnotation.ArrowOrBuilder>(
                  (mediapipe.RenderDataOuterClass.RenderAnnotation.Arrow) data_,
                  getParentForChildren(),
                  isClean());
          data_ = null;
        }
        dataCase_ = 7;
        onChanged();;
        return arrowBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          mediapipe.RenderDataOuterClass.RenderAnnotation.Text, mediapipe.RenderDataOuterClass.RenderAnnotation.Text.Builder, mediapipe.RenderDataOuterClass.RenderAnnotation.TextOrBuilder> textBuilder_;
      /**
       * <code>optional .mediapipe.RenderAnnotation.Text text = 8;</code>
       */
      public boolean hasText() {
        return dataCase_ == 8;
      }
      /**
       * <code>optional .mediapipe.RenderAnnotation.Text text = 8;</code>
       */
      public mediapipe.RenderDataOuterClass.RenderAnnotation.Text getText() {
        if (textBuilder_ == null) {
          if (dataCase_ == 8) {
            return (mediapipe.RenderDataOuterClass.RenderAnnotation.Text) data_;
          }
          return mediapipe.RenderDataOuterClass.RenderAnnotation.Text.getDefaultInstance();
        } else {
          if (dataCase_ == 8) {
            return textBuilder_.getMessage();
          }
          return mediapipe.RenderDataOuterClass.RenderAnnotation.Text.getDefaultInstance();
        }
      }
      /**
       * <code>optional .mediapipe.RenderAnnotation.Text text = 8;</code>
       */
      public Builder setText(mediapipe.RenderDataOuterClass.RenderAnnotation.Text value) {
        if (textBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          data_ = value;
          onChanged();
        } else {
          textBuilder_.setMessage(value);
        }
        dataCase_ = 8;
        return this;
      }
      /**
       * <code>optional .mediapipe.RenderAnnotation.Text text = 8;</code>
       */
      public Builder setText(
          mediapipe.RenderDataOuterClass.RenderAnnotation.Text.Builder builderForValue) {
        if (textBuilder_ == null) {
          data_ = builderForValue.build();
          onChanged();
        } else {
          textBuilder_.setMessage(builderForValue.build());
        }
        dataCase_ = 8;
        return this;
      }
      /**
       * <code>optional .mediapipe.RenderAnnotation.Text text = 8;</code>
       */
      public Builder mergeText(mediapipe.RenderDataOuterClass.RenderAnnotation.Text value) {
        if (textBuilder_ == null) {
          if (dataCase_ == 8 &&
              data_ != mediapipe.RenderDataOuterClass.RenderAnnotation.Text.getDefaultInstance()) {
            data_ = mediapipe.RenderDataOuterClass.RenderAnnotation.Text.newBuilder((mediapipe.RenderDataOuterClass.RenderAnnotation.Text) data_)
                .mergeFrom(value).buildPartial();
          } else {
            data_ = value;
          }
          onChanged();
        } else {
          if (dataCase_ == 8) {
            textBuilder_.mergeFrom(value);
          }
          textBuilder_.setMessage(value);
        }
        dataCase_ = 8;
        return this;
      }
      /**
       * <code>optional .mediapipe.RenderAnnotation.Text text = 8;</code>
       */
      public Builder clearText() {
        if (textBuilder_ == null) {
          if (dataCase_ == 8) {
            dataCase_ = 0;
            data_ = null;
            onChanged();
          }
        } else {
          if (dataCase_ == 8) {
            dataCase_ = 0;
            data_ = null;
          }
          textBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>optional .mediapipe.RenderAnnotation.Text text = 8;</code>
       */
      public mediapipe.RenderDataOuterClass.RenderAnnotation.Text.Builder getTextBuilder() {
        return getTextFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .mediapipe.RenderAnnotation.Text text = 8;</code>
       */
      public mediapipe.RenderDataOuterClass.RenderAnnotation.TextOrBuilder getTextOrBuilder() {
        if ((dataCase_ == 8) && (textBuilder_ != null)) {
          return textBuilder_.getMessageOrBuilder();
        } else {
          if (dataCase_ == 8) {
            return (mediapipe.RenderDataOuterClass.RenderAnnotation.Text) data_;
          }
          return mediapipe.RenderDataOuterClass.RenderAnnotation.Text.getDefaultInstance();
        }
      }
      /**
       * <code>optional .mediapipe.RenderAnnotation.Text text = 8;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          mediapipe.RenderDataOuterClass.RenderAnnotation.Text, mediapipe.RenderDataOuterClass.RenderAnnotation.Text.Builder, mediapipe.RenderDataOuterClass.RenderAnnotation.TextOrBuilder> 
          getTextFieldBuilder() {
        if (textBuilder_ == null) {
          if (!(dataCase_ == 8)) {
            data_ = mediapipe.RenderDataOuterClass.RenderAnnotation.Text.getDefaultInstance();
          }
          textBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              mediapipe.RenderDataOuterClass.RenderAnnotation.Text, mediapipe.RenderDataOuterClass.RenderAnnotation.Text.Builder, mediapipe.RenderDataOuterClass.RenderAnnotation.TextOrBuilder>(
                  (mediapipe.RenderDataOuterClass.RenderAnnotation.Text) data_,
                  getParentForChildren(),
                  isClean());
          data_ = null;
        }
        dataCase_ = 8;
        onChanged();;
        return textBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          mediapipe.RenderDataOuterClass.RenderAnnotation.RoundedRectangle, mediapipe.RenderDataOuterClass.RenderAnnotation.RoundedRectangle.Builder, mediapipe.RenderDataOuterClass.RenderAnnotation.RoundedRectangleOrBuilder> roundedRectangleBuilder_;
      /**
       * <code>optional .mediapipe.RenderAnnotation.RoundedRectangle rounded_rectangle = 9;</code>
       */
      public boolean hasRoundedRectangle() {
        return dataCase_ == 9;
      }
      /**
       * <code>optional .mediapipe.RenderAnnotation.RoundedRectangle rounded_rectangle = 9;</code>
       */
      public mediapipe.RenderDataOuterClass.RenderAnnotation.RoundedRectangle getRoundedRectangle() {
        if (roundedRectangleBuilder_ == null) {
          if (dataCase_ == 9) {
            return (mediapipe.RenderDataOuterClass.RenderAnnotation.RoundedRectangle) data_;
          }
          return mediapipe.RenderDataOuterClass.RenderAnnotation.RoundedRectangle.getDefaultInstance();
        } else {
          if (dataCase_ == 9) {
            return roundedRectangleBuilder_.getMessage();
          }
          return mediapipe.RenderDataOuterClass.RenderAnnotation.RoundedRectangle.getDefaultInstance();
        }
      }
      /**
       * <code>optional .mediapipe.RenderAnnotation.RoundedRectangle rounded_rectangle = 9;</code>
       */
      public Builder setRoundedRectangle(mediapipe.RenderDataOuterClass.RenderAnnotation.RoundedRectangle value) {
        if (roundedRectangleBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          data_ = value;
          onChanged();
        } else {
          roundedRectangleBuilder_.setMessage(value);
        }
        dataCase_ = 9;
        return this;
      }
      /**
       * <code>optional .mediapipe.RenderAnnotation.RoundedRectangle rounded_rectangle = 9;</code>
       */
      public Builder setRoundedRectangle(
          mediapipe.RenderDataOuterClass.RenderAnnotation.RoundedRectangle.Builder builderForValue) {
        if (roundedRectangleBuilder_ == null) {
          data_ = builderForValue.build();
          onChanged();
        } else {
          roundedRectangleBuilder_.setMessage(builderForValue.build());
        }
        dataCase_ = 9;
        return this;
      }
      /**
       * <code>optional .mediapipe.RenderAnnotation.RoundedRectangle rounded_rectangle = 9;</code>
       */
      public Builder mergeRoundedRectangle(mediapipe.RenderDataOuterClass.RenderAnnotation.RoundedRectangle value) {
        if (roundedRectangleBuilder_ == null) {
          if (dataCase_ == 9 &&
              data_ != mediapipe.RenderDataOuterClass.RenderAnnotation.RoundedRectangle.getDefaultInstance()) {
            data_ = mediapipe.RenderDataOuterClass.RenderAnnotation.RoundedRectangle.newBuilder((mediapipe.RenderDataOuterClass.RenderAnnotation.RoundedRectangle) data_)
                .mergeFrom(value).buildPartial();
          } else {
            data_ = value;
          }
          onChanged();
        } else {
          if (dataCase_ == 9) {
            roundedRectangleBuilder_.mergeFrom(value);
          }
          roundedRectangleBuilder_.setMessage(value);
        }
        dataCase_ = 9;
        return this;
      }
      /**
       * <code>optional .mediapipe.RenderAnnotation.RoundedRectangle rounded_rectangle = 9;</code>
       */
      public Builder clearRoundedRectangle() {
        if (roundedRectangleBuilder_ == null) {
          if (dataCase_ == 9) {
            dataCase_ = 0;
            data_ = null;
            onChanged();
          }
        } else {
          if (dataCase_ == 9) {
            dataCase_ = 0;
            data_ = null;
          }
          roundedRectangleBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>optional .mediapipe.RenderAnnotation.RoundedRectangle rounded_rectangle = 9;</code>
       */
      public mediapipe.RenderDataOuterClass.RenderAnnotation.RoundedRectangle.Builder getRoundedRectangleBuilder() {
        return getRoundedRectangleFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .mediapipe.RenderAnnotation.RoundedRectangle rounded_rectangle = 9;</code>
       */
      public mediapipe.RenderDataOuterClass.RenderAnnotation.RoundedRectangleOrBuilder getRoundedRectangleOrBuilder() {
        if ((dataCase_ == 9) && (roundedRectangleBuilder_ != null)) {
          return roundedRectangleBuilder_.getMessageOrBuilder();
        } else {
          if (dataCase_ == 9) {
            return (mediapipe.RenderDataOuterClass.RenderAnnotation.RoundedRectangle) data_;
          }
          return mediapipe.RenderDataOuterClass.RenderAnnotation.RoundedRectangle.getDefaultInstance();
        }
      }
      /**
       * <code>optional .mediapipe.RenderAnnotation.RoundedRectangle rounded_rectangle = 9;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          mediapipe.RenderDataOuterClass.RenderAnnotation.RoundedRectangle, mediapipe.RenderDataOuterClass.RenderAnnotation.RoundedRectangle.Builder, mediapipe.RenderDataOuterClass.RenderAnnotation.RoundedRectangleOrBuilder> 
          getRoundedRectangleFieldBuilder() {
        if (roundedRectangleBuilder_ == null) {
          if (!(dataCase_ == 9)) {
            data_ = mediapipe.RenderDataOuterClass.RenderAnnotation.RoundedRectangle.getDefaultInstance();
          }
          roundedRectangleBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              mediapipe.RenderDataOuterClass.RenderAnnotation.RoundedRectangle, mediapipe.RenderDataOuterClass.RenderAnnotation.RoundedRectangle.Builder, mediapipe.RenderDataOuterClass.RenderAnnotation.RoundedRectangleOrBuilder>(
                  (mediapipe.RenderDataOuterClass.RenderAnnotation.RoundedRectangle) data_,
                  getParentForChildren(),
                  isClean());
          data_ = null;
        }
        dataCase_ = 9;
        onChanged();;
        return roundedRectangleBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          mediapipe.RenderDataOuterClass.RenderAnnotation.FilledRoundedRectangle, mediapipe.RenderDataOuterClass.RenderAnnotation.FilledRoundedRectangle.Builder, mediapipe.RenderDataOuterClass.RenderAnnotation.FilledRoundedRectangleOrBuilder> filledRoundedRectangleBuilder_;
      /**
       * <code>optional .mediapipe.RenderAnnotation.FilledRoundedRectangle filled_rounded_rectangle = 10;</code>
       */
      public boolean hasFilledRoundedRectangle() {
        return dataCase_ == 10;
      }
      /**
       * <code>optional .mediapipe.RenderAnnotation.FilledRoundedRectangle filled_rounded_rectangle = 10;</code>
       */
      public mediapipe.RenderDataOuterClass.RenderAnnotation.FilledRoundedRectangle getFilledRoundedRectangle() {
        if (filledRoundedRectangleBuilder_ == null) {
          if (dataCase_ == 10) {
            return (mediapipe.RenderDataOuterClass.RenderAnnotation.FilledRoundedRectangle) data_;
          }
          return mediapipe.RenderDataOuterClass.RenderAnnotation.FilledRoundedRectangle.getDefaultInstance();
        } else {
          if (dataCase_ == 10) {
            return filledRoundedRectangleBuilder_.getMessage();
          }
          return mediapipe.RenderDataOuterClass.RenderAnnotation.FilledRoundedRectangle.getDefaultInstance();
        }
      }
      /**
       * <code>optional .mediapipe.RenderAnnotation.FilledRoundedRectangle filled_rounded_rectangle = 10;</code>
       */
      public Builder setFilledRoundedRectangle(mediapipe.RenderDataOuterClass.RenderAnnotation.FilledRoundedRectangle value) {
        if (filledRoundedRectangleBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          data_ = value;
          onChanged();
        } else {
          filledRoundedRectangleBuilder_.setMessage(value);
        }
        dataCase_ = 10;
        return this;
      }
      /**
       * <code>optional .mediapipe.RenderAnnotation.FilledRoundedRectangle filled_rounded_rectangle = 10;</code>
       */
      public Builder setFilledRoundedRectangle(
          mediapipe.RenderDataOuterClass.RenderAnnotation.FilledRoundedRectangle.Builder builderForValue) {
        if (filledRoundedRectangleBuilder_ == null) {
          data_ = builderForValue.build();
          onChanged();
        } else {
          filledRoundedRectangleBuilder_.setMessage(builderForValue.build());
        }
        dataCase_ = 10;
        return this;
      }
      /**
       * <code>optional .mediapipe.RenderAnnotation.FilledRoundedRectangle filled_rounded_rectangle = 10;</code>
       */
      public Builder mergeFilledRoundedRectangle(mediapipe.RenderDataOuterClass.RenderAnnotation.FilledRoundedRectangle value) {
        if (filledRoundedRectangleBuilder_ == null) {
          if (dataCase_ == 10 &&
              data_ != mediapipe.RenderDataOuterClass.RenderAnnotation.FilledRoundedRectangle.getDefaultInstance()) {
            data_ = mediapipe.RenderDataOuterClass.RenderAnnotation.FilledRoundedRectangle.newBuilder((mediapipe.RenderDataOuterClass.RenderAnnotation.FilledRoundedRectangle) data_)
                .mergeFrom(value).buildPartial();
          } else {
            data_ = value;
          }
          onChanged();
        } else {
          if (dataCase_ == 10) {
            filledRoundedRectangleBuilder_.mergeFrom(value);
          }
          filledRoundedRectangleBuilder_.setMessage(value);
        }
        dataCase_ = 10;
        return this;
      }
      /**
       * <code>optional .mediapipe.RenderAnnotation.FilledRoundedRectangle filled_rounded_rectangle = 10;</code>
       */
      public Builder clearFilledRoundedRectangle() {
        if (filledRoundedRectangleBuilder_ == null) {
          if (dataCase_ == 10) {
            dataCase_ = 0;
            data_ = null;
            onChanged();
          }
        } else {
          if (dataCase_ == 10) {
            dataCase_ = 0;
            data_ = null;
          }
          filledRoundedRectangleBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>optional .mediapipe.RenderAnnotation.FilledRoundedRectangle filled_rounded_rectangle = 10;</code>
       */
      public mediapipe.RenderDataOuterClass.RenderAnnotation.FilledRoundedRectangle.Builder getFilledRoundedRectangleBuilder() {
        return getFilledRoundedRectangleFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .mediapipe.RenderAnnotation.FilledRoundedRectangle filled_rounded_rectangle = 10;</code>
       */
      public mediapipe.RenderDataOuterClass.RenderAnnotation.FilledRoundedRectangleOrBuilder getFilledRoundedRectangleOrBuilder() {
        if ((dataCase_ == 10) && (filledRoundedRectangleBuilder_ != null)) {
          return filledRoundedRectangleBuilder_.getMessageOrBuilder();
        } else {
          if (dataCase_ == 10) {
            return (mediapipe.RenderDataOuterClass.RenderAnnotation.FilledRoundedRectangle) data_;
          }
          return mediapipe.RenderDataOuterClass.RenderAnnotation.FilledRoundedRectangle.getDefaultInstance();
        }
      }
      /**
       * <code>optional .mediapipe.RenderAnnotation.FilledRoundedRectangle filled_rounded_rectangle = 10;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          mediapipe.RenderDataOuterClass.RenderAnnotation.FilledRoundedRectangle, mediapipe.RenderDataOuterClass.RenderAnnotation.FilledRoundedRectangle.Builder, mediapipe.RenderDataOuterClass.RenderAnnotation.FilledRoundedRectangleOrBuilder> 
          getFilledRoundedRectangleFieldBuilder() {
        if (filledRoundedRectangleBuilder_ == null) {
          if (!(dataCase_ == 10)) {
            data_ = mediapipe.RenderDataOuterClass.RenderAnnotation.FilledRoundedRectangle.getDefaultInstance();
          }
          filledRoundedRectangleBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              mediapipe.RenderDataOuterClass.RenderAnnotation.FilledRoundedRectangle, mediapipe.RenderDataOuterClass.RenderAnnotation.FilledRoundedRectangle.Builder, mediapipe.RenderDataOuterClass.RenderAnnotation.FilledRoundedRectangleOrBuilder>(
                  (mediapipe.RenderDataOuterClass.RenderAnnotation.FilledRoundedRectangle) data_,
                  getParentForChildren(),
                  isClean());
          data_ = null;
        }
        dataCase_ = 10;
        onChanged();;
        return filledRoundedRectangleBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          mediapipe.RenderDataOuterClass.RenderAnnotation.GradientLine, mediapipe.RenderDataOuterClass.RenderAnnotation.GradientLine.Builder, mediapipe.RenderDataOuterClass.RenderAnnotation.GradientLineOrBuilder> gradientLineBuilder_;
      /**
       * <code>optional .mediapipe.RenderAnnotation.GradientLine gradient_line = 14;</code>
       */
      public boolean hasGradientLine() {
        return dataCase_ == 14;
      }
      /**
       * <code>optional .mediapipe.RenderAnnotation.GradientLine gradient_line = 14;</code>
       */
      public mediapipe.RenderDataOuterClass.RenderAnnotation.GradientLine getGradientLine() {
        if (gradientLineBuilder_ == null) {
          if (dataCase_ == 14) {
            return (mediapipe.RenderDataOuterClass.RenderAnnotation.GradientLine) data_;
          }
          return mediapipe.RenderDataOuterClass.RenderAnnotation.GradientLine.getDefaultInstance();
        } else {
          if (dataCase_ == 14) {
            return gradientLineBuilder_.getMessage();
          }
          return mediapipe.RenderDataOuterClass.RenderAnnotation.GradientLine.getDefaultInstance();
        }
      }
      /**
       * <code>optional .mediapipe.RenderAnnotation.GradientLine gradient_line = 14;</code>
       */
      public Builder setGradientLine(mediapipe.RenderDataOuterClass.RenderAnnotation.GradientLine value) {
        if (gradientLineBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          data_ = value;
          onChanged();
        } else {
          gradientLineBuilder_.setMessage(value);
        }
        dataCase_ = 14;
        return this;
      }
      /**
       * <code>optional .mediapipe.RenderAnnotation.GradientLine gradient_line = 14;</code>
       */
      public Builder setGradientLine(
          mediapipe.RenderDataOuterClass.RenderAnnotation.GradientLine.Builder builderForValue) {
        if (gradientLineBuilder_ == null) {
          data_ = builderForValue.build();
          onChanged();
        } else {
          gradientLineBuilder_.setMessage(builderForValue.build());
        }
        dataCase_ = 14;
        return this;
      }
      /**
       * <code>optional .mediapipe.RenderAnnotation.GradientLine gradient_line = 14;</code>
       */
      public Builder mergeGradientLine(mediapipe.RenderDataOuterClass.RenderAnnotation.GradientLine value) {
        if (gradientLineBuilder_ == null) {
          if (dataCase_ == 14 &&
              data_ != mediapipe.RenderDataOuterClass.RenderAnnotation.GradientLine.getDefaultInstance()) {
            data_ = mediapipe.RenderDataOuterClass.RenderAnnotation.GradientLine.newBuilder((mediapipe.RenderDataOuterClass.RenderAnnotation.GradientLine) data_)
                .mergeFrom(value).buildPartial();
          } else {
            data_ = value;
          }
          onChanged();
        } else {
          if (dataCase_ == 14) {
            gradientLineBuilder_.mergeFrom(value);
          }
          gradientLineBuilder_.setMessage(value);
        }
        dataCase_ = 14;
        return this;
      }
      /**
       * <code>optional .mediapipe.RenderAnnotation.GradientLine gradient_line = 14;</code>
       */
      public Builder clearGradientLine() {
        if (gradientLineBuilder_ == null) {
          if (dataCase_ == 14) {
            dataCase_ = 0;
            data_ = null;
            onChanged();
          }
        } else {
          if (dataCase_ == 14) {
            dataCase_ = 0;
            data_ = null;
          }
          gradientLineBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>optional .mediapipe.RenderAnnotation.GradientLine gradient_line = 14;</code>
       */
      public mediapipe.RenderDataOuterClass.RenderAnnotation.GradientLine.Builder getGradientLineBuilder() {
        return getGradientLineFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .mediapipe.RenderAnnotation.GradientLine gradient_line = 14;</code>
       */
      public mediapipe.RenderDataOuterClass.RenderAnnotation.GradientLineOrBuilder getGradientLineOrBuilder() {
        if ((dataCase_ == 14) && (gradientLineBuilder_ != null)) {
          return gradientLineBuilder_.getMessageOrBuilder();
        } else {
          if (dataCase_ == 14) {
            return (mediapipe.RenderDataOuterClass.RenderAnnotation.GradientLine) data_;
          }
          return mediapipe.RenderDataOuterClass.RenderAnnotation.GradientLine.getDefaultInstance();
        }
      }
      /**
       * <code>optional .mediapipe.RenderAnnotation.GradientLine gradient_line = 14;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          mediapipe.RenderDataOuterClass.RenderAnnotation.GradientLine, mediapipe.RenderDataOuterClass.RenderAnnotation.GradientLine.Builder, mediapipe.RenderDataOuterClass.RenderAnnotation.GradientLineOrBuilder> 
          getGradientLineFieldBuilder() {
        if (gradientLineBuilder_ == null) {
          if (!(dataCase_ == 14)) {
            data_ = mediapipe.RenderDataOuterClass.RenderAnnotation.GradientLine.getDefaultInstance();
          }
          gradientLineBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              mediapipe.RenderDataOuterClass.RenderAnnotation.GradientLine, mediapipe.RenderDataOuterClass.RenderAnnotation.GradientLine.Builder, mediapipe.RenderDataOuterClass.RenderAnnotation.GradientLineOrBuilder>(
                  (mediapipe.RenderDataOuterClass.RenderAnnotation.GradientLine) data_,
                  getParentForChildren(),
                  isClean());
          data_ = null;
        }
        dataCase_ = 14;
        onChanged();;
        return gradientLineBuilder_;
      }

      private double thickness_ = 1D;
      /**
       * <pre>
       * Thickness for drawing the annotation.
       * </pre>
       *
       * <code>optional double thickness = 11 [default = 1];</code>
       */
      public boolean hasThickness() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      /**
       * <pre>
       * Thickness for drawing the annotation.
       * </pre>
       *
       * <code>optional double thickness = 11 [default = 1];</code>
       */
      public double getThickness() {
        return thickness_;
      }
      /**
       * <pre>
       * Thickness for drawing the annotation.
       * </pre>
       *
       * <code>optional double thickness = 11 [default = 1];</code>
       */
      public Builder setThickness(double value) {
        bitField0_ |= 0x00000800;
        thickness_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Thickness for drawing the annotation.
       * </pre>
       *
       * <code>optional double thickness = 11 [default = 1];</code>
       */
      public Builder clearThickness() {
        bitField0_ = (bitField0_ & ~0x00000800);
        thickness_ = 1D;
        onChanged();
        return this;
      }

      private mediapipe.ColorOuterClass.Color color_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          mediapipe.ColorOuterClass.Color, mediapipe.ColorOuterClass.Color.Builder, mediapipe.ColorOuterClass.ColorOrBuilder> colorBuilder_;
      /**
       * <pre>
       * Color for drawing the annotation. For FilledRectangle and FilledOval, this
       * color is used only for drawing the boundary.
       * </pre>
       *
       * <code>optional .mediapipe.Color color = 12;</code>
       */
      public boolean hasColor() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      /**
       * <pre>
       * Color for drawing the annotation. For FilledRectangle and FilledOval, this
       * color is used only for drawing the boundary.
       * </pre>
       *
       * <code>optional .mediapipe.Color color = 12;</code>
       */
      public mediapipe.ColorOuterClass.Color getColor() {
        if (colorBuilder_ == null) {
          return color_ == null ? mediapipe.ColorOuterClass.Color.getDefaultInstance() : color_;
        } else {
          return colorBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Color for drawing the annotation. For FilledRectangle and FilledOval, this
       * color is used only for drawing the boundary.
       * </pre>
       *
       * <code>optional .mediapipe.Color color = 12;</code>
       */
      public Builder setColor(mediapipe.ColorOuterClass.Color value) {
        if (colorBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          color_ = value;
          onChanged();
        } else {
          colorBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00001000;
        return this;
      }
      /**
       * <pre>
       * Color for drawing the annotation. For FilledRectangle and FilledOval, this
       * color is used only for drawing the boundary.
       * </pre>
       *
       * <code>optional .mediapipe.Color color = 12;</code>
       */
      public Builder setColor(
          mediapipe.ColorOuterClass.Color.Builder builderForValue) {
        if (colorBuilder_ == null) {
          color_ = builderForValue.build();
          onChanged();
        } else {
          colorBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00001000;
        return this;
      }
      /**
       * <pre>
       * Color for drawing the annotation. For FilledRectangle and FilledOval, this
       * color is used only for drawing the boundary.
       * </pre>
       *
       * <code>optional .mediapipe.Color color = 12;</code>
       */
      public Builder mergeColor(mediapipe.ColorOuterClass.Color value) {
        if (colorBuilder_ == null) {
          if (((bitField0_ & 0x00001000) == 0x00001000) &&
              color_ != null &&
              color_ != mediapipe.ColorOuterClass.Color.getDefaultInstance()) {
            color_ =
              mediapipe.ColorOuterClass.Color.newBuilder(color_).mergeFrom(value).buildPartial();
          } else {
            color_ = value;
          }
          onChanged();
        } else {
          colorBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00001000;
        return this;
      }
      /**
       * <pre>
       * Color for drawing the annotation. For FilledRectangle and FilledOval, this
       * color is used only for drawing the boundary.
       * </pre>
       *
       * <code>optional .mediapipe.Color color = 12;</code>
       */
      public Builder clearColor() {
        if (colorBuilder_ == null) {
          color_ = null;
          onChanged();
        } else {
          colorBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00001000);
        return this;
      }
      /**
       * <pre>
       * Color for drawing the annotation. For FilledRectangle and FilledOval, this
       * color is used only for drawing the boundary.
       * </pre>
       *
       * <code>optional .mediapipe.Color color = 12;</code>
       */
      public mediapipe.ColorOuterClass.Color.Builder getColorBuilder() {
        bitField0_ |= 0x00001000;
        onChanged();
        return getColorFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Color for drawing the annotation. For FilledRectangle and FilledOval, this
       * color is used only for drawing the boundary.
       * </pre>
       *
       * <code>optional .mediapipe.Color color = 12;</code>
       */
      public mediapipe.ColorOuterClass.ColorOrBuilder getColorOrBuilder() {
        if (colorBuilder_ != null) {
          return colorBuilder_.getMessageOrBuilder();
        } else {
          return color_ == null ?
              mediapipe.ColorOuterClass.Color.getDefaultInstance() : color_;
        }
      }
      /**
       * <pre>
       * Color for drawing the annotation. For FilledRectangle and FilledOval, this
       * color is used only for drawing the boundary.
       * </pre>
       *
       * <code>optional .mediapipe.Color color = 12;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          mediapipe.ColorOuterClass.Color, mediapipe.ColorOuterClass.Color.Builder, mediapipe.ColorOuterClass.ColorOrBuilder> 
          getColorFieldBuilder() {
        if (colorBuilder_ == null) {
          colorBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              mediapipe.ColorOuterClass.Color, mediapipe.ColorOuterClass.Color.Builder, mediapipe.ColorOuterClass.ColorOrBuilder>(
                  getColor(),
                  getParentForChildren(),
                  isClean());
          color_ = null;
        }
        return colorBuilder_;
      }

      private java.lang.Object sceneTag_ = "";
      /**
       * <pre>
       * A hint regarding what this annotation is for. Should be unique across all
       * annotation types.
       * </pre>
       *
       * <code>optional string scene_tag = 13;</code>
       */
      public boolean hasSceneTag() {
        return ((bitField0_ & 0x00002000) == 0x00002000);
      }
      /**
       * <pre>
       * A hint regarding what this annotation is for. Should be unique across all
       * annotation types.
       * </pre>
       *
       * <code>optional string scene_tag = 13;</code>
       */
      public java.lang.String getSceneTag() {
        java.lang.Object ref = sceneTag_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            sceneTag_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * A hint regarding what this annotation is for. Should be unique across all
       * annotation types.
       * </pre>
       *
       * <code>optional string scene_tag = 13;</code>
       */
      public com.google.protobuf.ByteString
          getSceneTagBytes() {
        java.lang.Object ref = sceneTag_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          sceneTag_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * A hint regarding what this annotation is for. Should be unique across all
       * annotation types.
       * </pre>
       *
       * <code>optional string scene_tag = 13;</code>
       */
      public Builder setSceneTag(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00002000;
        sceneTag_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A hint regarding what this annotation is for. Should be unique across all
       * annotation types.
       * </pre>
       *
       * <code>optional string scene_tag = 13;</code>
       */
      public Builder clearSceneTag() {
        bitField0_ = (bitField0_ & ~0x00002000);
        sceneTag_ = getDefaultInstance().getSceneTag();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A hint regarding what this annotation is for. Should be unique across all
       * annotation types.
       * </pre>
       *
       * <code>optional string scene_tag = 13;</code>
       */
      public Builder setSceneTagBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00002000;
        sceneTag_ = value;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:mediapipe.RenderAnnotation)
    }

    // @@protoc_insertion_point(class_scope:mediapipe.RenderAnnotation)
    private static final mediapipe.RenderDataOuterClass.RenderAnnotation DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new mediapipe.RenderDataOuterClass.RenderAnnotation();
    }

    public static mediapipe.RenderDataOuterClass.RenderAnnotation getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<RenderAnnotation>
        PARSER = new com.google.protobuf.AbstractParser<RenderAnnotation>() {
      public RenderAnnotation parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new RenderAnnotation(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<RenderAnnotation> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<RenderAnnotation> getParserForType() {
      return PARSER;
    }

    public mediapipe.RenderDataOuterClass.RenderAnnotation getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface RenderViewportOrBuilder extends
      // @@protoc_insertion_point(interface_extends:mediapipe.RenderViewport)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * A unique identifier for this viewport.
     * </pre>
     *
     * <code>optional string id = 1;</code>
     */
    boolean hasId();
    /**
     * <pre>
     * A unique identifier for this viewport.
     * </pre>
     *
     * <code>optional string id = 1;</code>
     */
    java.lang.String getId();
    /**
     * <pre>
     * A unique identifier for this viewport.
     * </pre>
     *
     * <code>optional string id = 1;</code>
     */
    com.google.protobuf.ByteString
        getIdBytes();

    /**
     * <pre>
     * The width and height of this viewport in absolute pixels.
     * Normalized coordinates on annotations destined for this viewport as
     * normalized relative to these absolute pixel dimensions.
     * Camera feeds destined for this viewport will be rescaled to match these
     * dimensions.
     * Note: It is not expected that mid-stream resizing should be possible --
     * the visualizer is epxected to use the first dimensions it sees for a given
     * viewport and ignore any ignore subsequent changes.
     * </pre>
     *
     * <code>optional int32 width_px = 2;</code>
     */
    boolean hasWidthPx();
    /**
     * <pre>
     * The width and height of this viewport in absolute pixels.
     * Normalized coordinates on annotations destined for this viewport as
     * normalized relative to these absolute pixel dimensions.
     * Camera feeds destined for this viewport will be rescaled to match these
     * dimensions.
     * Note: It is not expected that mid-stream resizing should be possible --
     * the visualizer is epxected to use the first dimensions it sees for a given
     * viewport and ignore any ignore subsequent changes.
     * </pre>
     *
     * <code>optional int32 width_px = 2;</code>
     */
    int getWidthPx();

    /**
     * <code>optional int32 height_px = 3;</code>
     */
    boolean hasHeightPx();
    /**
     * <code>optional int32 height_px = 3;</code>
     */
    int getHeightPx();

    /**
     * <pre>
     * Set to true if this viewport should render its annotations overtop of a
     * (rescaled to width/height) copy of the camera feed.
     * </pre>
     *
     * <code>optional bool compose_on_video = 4;</code>
     */
    boolean hasComposeOnVideo();
    /**
     * <pre>
     * Set to true if this viewport should render its annotations overtop of a
     * (rescaled to width/height) copy of the camera feed.
     * </pre>
     *
     * <code>optional bool compose_on_video = 4;</code>
     */
    boolean getComposeOnVideo();
  }
  /**
   * <pre>
   * Represents a destination viewport to render annotations into, when specified
   * in RenderData.
   * </pre>
   *
   * Protobuf type {@code mediapipe.RenderViewport}
   */
  public  static final class RenderViewport extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:mediapipe.RenderViewport)
      RenderViewportOrBuilder {
    // Use RenderViewport.newBuilder() to construct.
    private RenderViewport(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private RenderViewport() {
      id_ = "";
      widthPx_ = 0;
      heightPx_ = 0;
      composeOnVideo_ = false;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private RenderViewport(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000001;
              id_ = bs;
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              widthPx_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              heightPx_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              composeOnVideo_ = input.readBool();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return mediapipe.RenderDataOuterClass.internal_static_mediapipe_RenderViewport_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return mediapipe.RenderDataOuterClass.internal_static_mediapipe_RenderViewport_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              mediapipe.RenderDataOuterClass.RenderViewport.class, mediapipe.RenderDataOuterClass.RenderViewport.Builder.class);
    }

    private int bitField0_;
    public static final int ID_FIELD_NUMBER = 1;
    private volatile java.lang.Object id_;
    /**
     * <pre>
     * A unique identifier for this viewport.
     * </pre>
     *
     * <code>optional string id = 1;</code>
     */
    public boolean hasId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <pre>
     * A unique identifier for this viewport.
     * </pre>
     *
     * <code>optional string id = 1;</code>
     */
    public java.lang.String getId() {
      java.lang.Object ref = id_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          id_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     * A unique identifier for this viewport.
     * </pre>
     *
     * <code>optional string id = 1;</code>
     */
    public com.google.protobuf.ByteString
        getIdBytes() {
      java.lang.Object ref = id_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        id_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int WIDTH_PX_FIELD_NUMBER = 2;
    private int widthPx_;
    /**
     * <pre>
     * The width and height of this viewport in absolute pixels.
     * Normalized coordinates on annotations destined for this viewport as
     * normalized relative to these absolute pixel dimensions.
     * Camera feeds destined for this viewport will be rescaled to match these
     * dimensions.
     * Note: It is not expected that mid-stream resizing should be possible --
     * the visualizer is epxected to use the first dimensions it sees for a given
     * viewport and ignore any ignore subsequent changes.
     * </pre>
     *
     * <code>optional int32 width_px = 2;</code>
     */
    public boolean hasWidthPx() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <pre>
     * The width and height of this viewport in absolute pixels.
     * Normalized coordinates on annotations destined for this viewport as
     * normalized relative to these absolute pixel dimensions.
     * Camera feeds destined for this viewport will be rescaled to match these
     * dimensions.
     * Note: It is not expected that mid-stream resizing should be possible --
     * the visualizer is epxected to use the first dimensions it sees for a given
     * viewport and ignore any ignore subsequent changes.
     * </pre>
     *
     * <code>optional int32 width_px = 2;</code>
     */
    public int getWidthPx() {
      return widthPx_;
    }

    public static final int HEIGHT_PX_FIELD_NUMBER = 3;
    private int heightPx_;
    /**
     * <code>optional int32 height_px = 3;</code>
     */
    public boolean hasHeightPx() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 height_px = 3;</code>
     */
    public int getHeightPx() {
      return heightPx_;
    }

    public static final int COMPOSE_ON_VIDEO_FIELD_NUMBER = 4;
    private boolean composeOnVideo_;
    /**
     * <pre>
     * Set to true if this viewport should render its annotations overtop of a
     * (rescaled to width/height) copy of the camera feed.
     * </pre>
     *
     * <code>optional bool compose_on_video = 4;</code>
     */
    public boolean hasComposeOnVideo() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <pre>
     * Set to true if this viewport should render its annotations overtop of a
     * (rescaled to width/height) copy of the camera feed.
     * </pre>
     *
     * <code>optional bool compose_on_video = 4;</code>
     */
    public boolean getComposeOnVideo() {
      return composeOnVideo_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, id_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, widthPx_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, heightPx_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBool(4, composeOnVideo_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, id_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, widthPx_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, heightPx_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(4, composeOnVideo_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof mediapipe.RenderDataOuterClass.RenderViewport)) {
        return super.equals(obj);
      }
      mediapipe.RenderDataOuterClass.RenderViewport other = (mediapipe.RenderDataOuterClass.RenderViewport) obj;

      boolean result = true;
      result = result && (hasId() == other.hasId());
      if (hasId()) {
        result = result && getId()
            .equals(other.getId());
      }
      result = result && (hasWidthPx() == other.hasWidthPx());
      if (hasWidthPx()) {
        result = result && (getWidthPx()
            == other.getWidthPx());
      }
      result = result && (hasHeightPx() == other.hasHeightPx());
      if (hasHeightPx()) {
        result = result && (getHeightPx()
            == other.getHeightPx());
      }
      result = result && (hasComposeOnVideo() == other.hasComposeOnVideo());
      if (hasComposeOnVideo()) {
        result = result && (getComposeOnVideo()
            == other.getComposeOnVideo());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      if (hasId()) {
        hash = (37 * hash) + ID_FIELD_NUMBER;
        hash = (53 * hash) + getId().hashCode();
      }
      if (hasWidthPx()) {
        hash = (37 * hash) + WIDTH_PX_FIELD_NUMBER;
        hash = (53 * hash) + getWidthPx();
      }
      if (hasHeightPx()) {
        hash = (37 * hash) + HEIGHT_PX_FIELD_NUMBER;
        hash = (53 * hash) + getHeightPx();
      }
      if (hasComposeOnVideo()) {
        hash = (37 * hash) + COMPOSE_ON_VIDEO_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getComposeOnVideo());
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static mediapipe.RenderDataOuterClass.RenderViewport parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static mediapipe.RenderDataOuterClass.RenderViewport parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static mediapipe.RenderDataOuterClass.RenderViewport parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static mediapipe.RenderDataOuterClass.RenderViewport parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static mediapipe.RenderDataOuterClass.RenderViewport parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static mediapipe.RenderDataOuterClass.RenderViewport parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static mediapipe.RenderDataOuterClass.RenderViewport parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static mediapipe.RenderDataOuterClass.RenderViewport parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static mediapipe.RenderDataOuterClass.RenderViewport parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static mediapipe.RenderDataOuterClass.RenderViewport parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(mediapipe.RenderDataOuterClass.RenderViewport prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Represents a destination viewport to render annotations into, when specified
     * in RenderData.
     * </pre>
     *
     * Protobuf type {@code mediapipe.RenderViewport}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:mediapipe.RenderViewport)
        mediapipe.RenderDataOuterClass.RenderViewportOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return mediapipe.RenderDataOuterClass.internal_static_mediapipe_RenderViewport_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return mediapipe.RenderDataOuterClass.internal_static_mediapipe_RenderViewport_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                mediapipe.RenderDataOuterClass.RenderViewport.class, mediapipe.RenderDataOuterClass.RenderViewport.Builder.class);
      }

      // Construct using mediapipe.RenderDataOuterClass.RenderViewport.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        id_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        widthPx_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        heightPx_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        composeOnVideo_ = false;
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return mediapipe.RenderDataOuterClass.internal_static_mediapipe_RenderViewport_descriptor;
      }

      public mediapipe.RenderDataOuterClass.RenderViewport getDefaultInstanceForType() {
        return mediapipe.RenderDataOuterClass.RenderViewport.getDefaultInstance();
      }

      public mediapipe.RenderDataOuterClass.RenderViewport build() {
        mediapipe.RenderDataOuterClass.RenderViewport result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public mediapipe.RenderDataOuterClass.RenderViewport buildPartial() {
        mediapipe.RenderDataOuterClass.RenderViewport result = new mediapipe.RenderDataOuterClass.RenderViewport(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.id_ = id_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.widthPx_ = widthPx_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.heightPx_ = heightPx_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.composeOnVideo_ = composeOnVideo_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof mediapipe.RenderDataOuterClass.RenderViewport) {
          return mergeFrom((mediapipe.RenderDataOuterClass.RenderViewport)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(mediapipe.RenderDataOuterClass.RenderViewport other) {
        if (other == mediapipe.RenderDataOuterClass.RenderViewport.getDefaultInstance()) return this;
        if (other.hasId()) {
          bitField0_ |= 0x00000001;
          id_ = other.id_;
          onChanged();
        }
        if (other.hasWidthPx()) {
          setWidthPx(other.getWidthPx());
        }
        if (other.hasHeightPx()) {
          setHeightPx(other.getHeightPx());
        }
        if (other.hasComposeOnVideo()) {
          setComposeOnVideo(other.getComposeOnVideo());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        mediapipe.RenderDataOuterClass.RenderViewport parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (mediapipe.RenderDataOuterClass.RenderViewport) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object id_ = "";
      /**
       * <pre>
       * A unique identifier for this viewport.
       * </pre>
       *
       * <code>optional string id = 1;</code>
       */
      public boolean hasId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <pre>
       * A unique identifier for this viewport.
       * </pre>
       *
       * <code>optional string id = 1;</code>
       */
      public java.lang.String getId() {
        java.lang.Object ref = id_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            id_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * A unique identifier for this viewport.
       * </pre>
       *
       * <code>optional string id = 1;</code>
       */
      public com.google.protobuf.ByteString
          getIdBytes() {
        java.lang.Object ref = id_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          id_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * A unique identifier for this viewport.
       * </pre>
       *
       * <code>optional string id = 1;</code>
       */
      public Builder setId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A unique identifier for this viewport.
       * </pre>
       *
       * <code>optional string id = 1;</code>
       */
      public Builder clearId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        id_ = getDefaultInstance().getId();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A unique identifier for this viewport.
       * </pre>
       *
       * <code>optional string id = 1;</code>
       */
      public Builder setIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        id_ = value;
        onChanged();
        return this;
      }

      private int widthPx_ ;
      /**
       * <pre>
       * The width and height of this viewport in absolute pixels.
       * Normalized coordinates on annotations destined for this viewport as
       * normalized relative to these absolute pixel dimensions.
       * Camera feeds destined for this viewport will be rescaled to match these
       * dimensions.
       * Note: It is not expected that mid-stream resizing should be possible --
       * the visualizer is epxected to use the first dimensions it sees for a given
       * viewport and ignore any ignore subsequent changes.
       * </pre>
       *
       * <code>optional int32 width_px = 2;</code>
       */
      public boolean hasWidthPx() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <pre>
       * The width and height of this viewport in absolute pixels.
       * Normalized coordinates on annotations destined for this viewport as
       * normalized relative to these absolute pixel dimensions.
       * Camera feeds destined for this viewport will be rescaled to match these
       * dimensions.
       * Note: It is not expected that mid-stream resizing should be possible --
       * the visualizer is epxected to use the first dimensions it sees for a given
       * viewport and ignore any ignore subsequent changes.
       * </pre>
       *
       * <code>optional int32 width_px = 2;</code>
       */
      public int getWidthPx() {
        return widthPx_;
      }
      /**
       * <pre>
       * The width and height of this viewport in absolute pixels.
       * Normalized coordinates on annotations destined for this viewport as
       * normalized relative to these absolute pixel dimensions.
       * Camera feeds destined for this viewport will be rescaled to match these
       * dimensions.
       * Note: It is not expected that mid-stream resizing should be possible --
       * the visualizer is epxected to use the first dimensions it sees for a given
       * viewport and ignore any ignore subsequent changes.
       * </pre>
       *
       * <code>optional int32 width_px = 2;</code>
       */
      public Builder setWidthPx(int value) {
        bitField0_ |= 0x00000002;
        widthPx_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The width and height of this viewport in absolute pixels.
       * Normalized coordinates on annotations destined for this viewport as
       * normalized relative to these absolute pixel dimensions.
       * Camera feeds destined for this viewport will be rescaled to match these
       * dimensions.
       * Note: It is not expected that mid-stream resizing should be possible --
       * the visualizer is epxected to use the first dimensions it sees for a given
       * viewport and ignore any ignore subsequent changes.
       * </pre>
       *
       * <code>optional int32 width_px = 2;</code>
       */
      public Builder clearWidthPx() {
        bitField0_ = (bitField0_ & ~0x00000002);
        widthPx_ = 0;
        onChanged();
        return this;
      }

      private int heightPx_ ;
      /**
       * <code>optional int32 height_px = 3;</code>
       */
      public boolean hasHeightPx() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 height_px = 3;</code>
       */
      public int getHeightPx() {
        return heightPx_;
      }
      /**
       * <code>optional int32 height_px = 3;</code>
       */
      public Builder setHeightPx(int value) {
        bitField0_ |= 0x00000004;
        heightPx_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 height_px = 3;</code>
       */
      public Builder clearHeightPx() {
        bitField0_ = (bitField0_ & ~0x00000004);
        heightPx_ = 0;
        onChanged();
        return this;
      }

      private boolean composeOnVideo_ ;
      /**
       * <pre>
       * Set to true if this viewport should render its annotations overtop of a
       * (rescaled to width/height) copy of the camera feed.
       * </pre>
       *
       * <code>optional bool compose_on_video = 4;</code>
       */
      public boolean hasComposeOnVideo() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <pre>
       * Set to true if this viewport should render its annotations overtop of a
       * (rescaled to width/height) copy of the camera feed.
       * </pre>
       *
       * <code>optional bool compose_on_video = 4;</code>
       */
      public boolean getComposeOnVideo() {
        return composeOnVideo_;
      }
      /**
       * <pre>
       * Set to true if this viewport should render its annotations overtop of a
       * (rescaled to width/height) copy of the camera feed.
       * </pre>
       *
       * <code>optional bool compose_on_video = 4;</code>
       */
      public Builder setComposeOnVideo(boolean value) {
        bitField0_ |= 0x00000008;
        composeOnVideo_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Set to true if this viewport should render its annotations overtop of a
       * (rescaled to width/height) copy of the camera feed.
       * </pre>
       *
       * <code>optional bool compose_on_video = 4;</code>
       */
      public Builder clearComposeOnVideo() {
        bitField0_ = (bitField0_ & ~0x00000008);
        composeOnVideo_ = false;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:mediapipe.RenderViewport)
    }

    // @@protoc_insertion_point(class_scope:mediapipe.RenderViewport)
    private static final mediapipe.RenderDataOuterClass.RenderViewport DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new mediapipe.RenderDataOuterClass.RenderViewport();
    }

    public static mediapipe.RenderDataOuterClass.RenderViewport getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<RenderViewport>
        PARSER = new com.google.protobuf.AbstractParser<RenderViewport>() {
      public RenderViewport parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new RenderViewport(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<RenderViewport> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<RenderViewport> getParserForType() {
      return PARSER;
    }

    public mediapipe.RenderDataOuterClass.RenderViewport getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_mediapipe_RenderData_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_mediapipe_RenderData_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_mediapipe_RenderAnnotation_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_mediapipe_RenderAnnotation_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_mediapipe_RenderAnnotation_Rectangle_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_mediapipe_RenderAnnotation_Rectangle_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_mediapipe_RenderAnnotation_FilledRectangle_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_mediapipe_RenderAnnotation_FilledRectangle_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_mediapipe_RenderAnnotation_RoundedRectangle_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_mediapipe_RenderAnnotation_RoundedRectangle_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_mediapipe_RenderAnnotation_FilledRoundedRectangle_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_mediapipe_RenderAnnotation_FilledRoundedRectangle_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_mediapipe_RenderAnnotation_Oval_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_mediapipe_RenderAnnotation_Oval_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_mediapipe_RenderAnnotation_FilledOval_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_mediapipe_RenderAnnotation_FilledOval_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_mediapipe_RenderAnnotation_Point_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_mediapipe_RenderAnnotation_Point_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_mediapipe_RenderAnnotation_Line_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_mediapipe_RenderAnnotation_Line_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_mediapipe_RenderAnnotation_GradientLine_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_mediapipe_RenderAnnotation_GradientLine_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_mediapipe_RenderAnnotation_Arrow_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_mediapipe_RenderAnnotation_Arrow_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_mediapipe_RenderAnnotation_Text_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_mediapipe_RenderAnnotation_Text_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_mediapipe_RenderViewport_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_mediapipe_RenderViewport_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n mediapipe/util/render_data.proto\022\tmedi" +
      "apipe\032\032mediapipe/util/color.proto\"\215\001\n\nRe" +
      "nderData\0227\n\022render_annotations\030\001 \003(\0132\033.m" +
      "ediapipe.RenderAnnotation\022\023\n\013scene_class" +
      "\030\002 \001(\t\0221\n\016scene_viewport\030\003 \001(\0132\031.mediapi" +
      "pe.RenderViewport\"\320\020\n\020RenderAnnotation\022:" +
      "\n\trectangle\030\001 \001(\0132%.mediapipe.RenderAnno" +
      "tation.RectangleH\000\022G\n\020filled_rectangle\030\002" +
      " \001(\0132+.mediapipe.RenderAnnotation.Filled" +
      "RectangleH\000\0220\n\004oval\030\003 \001(\0132 .mediapipe.Re",
      "nderAnnotation.OvalH\000\022=\n\013filled_oval\030\004 \001" +
      "(\0132&.mediapipe.RenderAnnotation.FilledOv" +
      "alH\000\0222\n\005point\030\005 \001(\0132!.mediapipe.RenderAn" +
      "notation.PointH\000\0220\n\004line\030\006 \001(\0132 .mediapi" +
      "pe.RenderAnnotation.LineH\000\0222\n\005arrow\030\007 \001(" +
      "\0132!.mediapipe.RenderAnnotation.ArrowH\000\0220" +
      "\n\004text\030\010 \001(\0132 .mediapipe.RenderAnnotatio" +
      "n.TextH\000\022I\n\021rounded_rectangle\030\t \001(\0132,.me" +
      "diapipe.RenderAnnotation.RoundedRectangl" +
      "eH\000\022V\n\030filled_rounded_rectangle\030\n \001(\01322.",
      "mediapipe.RenderAnnotation.FilledRounded" +
      "RectangleH\000\022A\n\rgradient_line\030\016 \001(\0132(.med" +
      "iapipe.RenderAnnotation.GradientLineH\000\022\024" +
      "\n\tthickness\030\013 \001(\001:\0011\022\037\n\005color\030\014 \001(\0132\020.me" +
      "diapipe.Color\022\021\n\tscene_tag\030\r \001(\t\032r\n\tRect" +
      "angle\022\014\n\004left\030\001 \001(\001\022\013\n\003top\030\002 \001(\001\022\r\n\005righ" +
      "t\030\003 \001(\001\022\016\n\006bottom\030\004 \001(\001\022\031\n\nnormalized\030\005 " +
      "\001(\010:\005false\022\020\n\010rotation\030\006 \001(\001\032q\n\017FilledRe" +
      "ctangle\0228\n\trectangle\030\001 \001(\0132%.mediapipe.R" +
      "enderAnnotation.Rectangle\022$\n\nfill_color\030",
      "\002 \001(\0132\020.mediapipe.Color\032|\n\020RoundedRectan" +
      "gle\0228\n\trectangle\030\001 \001(\0132%.mediapipe.Rende" +
      "rAnnotation.Rectangle\022\030\n\rcorner_radius\030\002" +
      " \001(\005:\0010\022\024\n\tline_type\030\003 \001(\005:\0014\032\207\001\n\026Filled" +
      "RoundedRectangle\022G\n\021rounded_rectangle\030\001 " +
      "\001(\0132,.mediapipe.RenderAnnotation.Rounded" +
      "Rectangle\022$\n\nfill_color\030\002 \001(\0132\020.mediapip" +
      "e.Color\032@\n\004Oval\0228\n\trectangle\030\001 \001(\0132%.med" +
      "iapipe.RenderAnnotation.Rectangle\032b\n\nFil" +
      "ledOval\022.\n\004oval\030\001 \001(\0132 .mediapipe.Render",
      "Annotation.Oval\022$\n\nfill_color\030\002 \001(\0132\020.me" +
      "diapipe.Color\0328\n\005Point\022\t\n\001x\030\001 \001(\001\022\t\n\001y\030\002" +
      " \001(\001\022\031\n\nnormalized\030\003 \001(\010:\005false\032\326\001\n\004Line" +
      "\022\017\n\007x_start\030\001 \001(\001\022\017\n\007y_start\030\002 \001(\001\022\r\n\005x_" +
      "end\030\003 \001(\001\022\r\n\005y_end\030\004 \001(\001\022\031\n\nnormalized\030\005" +
      " \001(\010:\005false\022C\n\tline_type\030\006 \001(\0162).mediapi" +
      "pe.RenderAnnotation.Line.LineType:\005SOLID" +
      "\".\n\010LineType\022\013\n\007UNKNOWN\020\000\022\t\n\005SOLID\020\001\022\n\n\006" +
      "DASHED\020\002\032\255\001\n\014GradientLine\022\017\n\007x_start\030\001 \001" +
      "(\001\022\017\n\007y_start\030\002 \001(\001\022\r\n\005x_end\030\003 \001(\001\022\r\n\005y_",
      "end\030\004 \001(\001\022\031\n\nnormalized\030\005 \001(\010:\005false\022 \n\006" +
      "color1\030\006 \001(\0132\020.mediapipe.Color\022 \n\006color2" +
      "\030\007 \001(\0132\020.mediapipe.Color\032b\n\005Arrow\022\017\n\007x_s" +
      "tart\030\001 \001(\001\022\017\n\007y_start\030\002 \001(\001\022\r\n\005x_end\030\003 \001" +
      "(\001\022\r\n\005y_end\030\004 \001(\001\022\031\n\nnormalized\030\005 \001(\010:\005f" +
      "alse\032\205\001\n\004Text\022\024\n\014display_text\030\001 \001(\t\022\014\n\004l" +
      "eft\030\002 \001(\001\022\020\n\010baseline\030\003 \001(\001\022\026\n\013font_heig" +
      "ht\030\004 \001(\001:\0018\022\031\n\nnormalized\030\005 \001(\010:\005false\022\024" +
      "\n\tfont_face\030\006 \001(\005:\0010B\006\n\004data\"[\n\016RenderVi" +
      "ewport\022\n\n\002id\030\001 \001(\t\022\020\n\010width_px\030\002 \001(\005\022\021\n\t",
      "height_px\030\003 \001(\005\022\030\n\020compose_on_video\030\004 \001(" +
      "\010"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          mediapipe.ColorOuterClass.getDescriptor(),
        }, assigner);
    internal_static_mediapipe_RenderData_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_mediapipe_RenderData_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_mediapipe_RenderData_descriptor,
        new java.lang.String[] { "RenderAnnotations", "SceneClass", "SceneViewport", });
    internal_static_mediapipe_RenderAnnotation_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_mediapipe_RenderAnnotation_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_mediapipe_RenderAnnotation_descriptor,
        new java.lang.String[] { "Rectangle", "FilledRectangle", "Oval", "FilledOval", "Point", "Line", "Arrow", "Text", "RoundedRectangle", "FilledRoundedRectangle", "GradientLine", "Thickness", "Color", "SceneTag", "Data", });
    internal_static_mediapipe_RenderAnnotation_Rectangle_descriptor =
      internal_static_mediapipe_RenderAnnotation_descriptor.getNestedTypes().get(0);
    internal_static_mediapipe_RenderAnnotation_Rectangle_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_mediapipe_RenderAnnotation_Rectangle_descriptor,
        new java.lang.String[] { "Left", "Top", "Right", "Bottom", "Normalized", "Rotation", });
    internal_static_mediapipe_RenderAnnotation_FilledRectangle_descriptor =
      internal_static_mediapipe_RenderAnnotation_descriptor.getNestedTypes().get(1);
    internal_static_mediapipe_RenderAnnotation_FilledRectangle_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_mediapipe_RenderAnnotation_FilledRectangle_descriptor,
        new java.lang.String[] { "Rectangle", "FillColor", });
    internal_static_mediapipe_RenderAnnotation_RoundedRectangle_descriptor =
      internal_static_mediapipe_RenderAnnotation_descriptor.getNestedTypes().get(2);
    internal_static_mediapipe_RenderAnnotation_RoundedRectangle_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_mediapipe_RenderAnnotation_RoundedRectangle_descriptor,
        new java.lang.String[] { "Rectangle", "CornerRadius", "LineType", });
    internal_static_mediapipe_RenderAnnotation_FilledRoundedRectangle_descriptor =
      internal_static_mediapipe_RenderAnnotation_descriptor.getNestedTypes().get(3);
    internal_static_mediapipe_RenderAnnotation_FilledRoundedRectangle_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_mediapipe_RenderAnnotation_FilledRoundedRectangle_descriptor,
        new java.lang.String[] { "RoundedRectangle", "FillColor", });
    internal_static_mediapipe_RenderAnnotation_Oval_descriptor =
      internal_static_mediapipe_RenderAnnotation_descriptor.getNestedTypes().get(4);
    internal_static_mediapipe_RenderAnnotation_Oval_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_mediapipe_RenderAnnotation_Oval_descriptor,
        new java.lang.String[] { "Rectangle", });
    internal_static_mediapipe_RenderAnnotation_FilledOval_descriptor =
      internal_static_mediapipe_RenderAnnotation_descriptor.getNestedTypes().get(5);
    internal_static_mediapipe_RenderAnnotation_FilledOval_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_mediapipe_RenderAnnotation_FilledOval_descriptor,
        new java.lang.String[] { "Oval", "FillColor", });
    internal_static_mediapipe_RenderAnnotation_Point_descriptor =
      internal_static_mediapipe_RenderAnnotation_descriptor.getNestedTypes().get(6);
    internal_static_mediapipe_RenderAnnotation_Point_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_mediapipe_RenderAnnotation_Point_descriptor,
        new java.lang.String[] { "X", "Y", "Normalized", });
    internal_static_mediapipe_RenderAnnotation_Line_descriptor =
      internal_static_mediapipe_RenderAnnotation_descriptor.getNestedTypes().get(7);
    internal_static_mediapipe_RenderAnnotation_Line_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_mediapipe_RenderAnnotation_Line_descriptor,
        new java.lang.String[] { "XStart", "YStart", "XEnd", "YEnd", "Normalized", "LineType", });
    internal_static_mediapipe_RenderAnnotation_GradientLine_descriptor =
      internal_static_mediapipe_RenderAnnotation_descriptor.getNestedTypes().get(8);
    internal_static_mediapipe_RenderAnnotation_GradientLine_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_mediapipe_RenderAnnotation_GradientLine_descriptor,
        new java.lang.String[] { "XStart", "YStart", "XEnd", "YEnd", "Normalized", "Color1", "Color2", });
    internal_static_mediapipe_RenderAnnotation_Arrow_descriptor =
      internal_static_mediapipe_RenderAnnotation_descriptor.getNestedTypes().get(9);
    internal_static_mediapipe_RenderAnnotation_Arrow_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_mediapipe_RenderAnnotation_Arrow_descriptor,
        new java.lang.String[] { "XStart", "YStart", "XEnd", "YEnd", "Normalized", });
    internal_static_mediapipe_RenderAnnotation_Text_descriptor =
      internal_static_mediapipe_RenderAnnotation_descriptor.getNestedTypes().get(10);
    internal_static_mediapipe_RenderAnnotation_Text_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_mediapipe_RenderAnnotation_Text_descriptor,
        new java.lang.String[] { "DisplayText", "Left", "Baseline", "FontHeight", "Normalized", "FontFace", });
    internal_static_mediapipe_RenderViewport_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_mediapipe_RenderViewport_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_mediapipe_RenderViewport_descriptor,
        new java.lang.String[] { "Id", "WidthPx", "HeightPx", "ComposeOnVideo", });
    mediapipe.ColorOuterClass.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
