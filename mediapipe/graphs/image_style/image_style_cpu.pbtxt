# MediaPipe graph that performs face mesh with TensorFlow Lite on CPU.

# Input image. (ImageFrame)
input_stream: "input_video"

# Output image with rendered results. (ImageFrame)
output_stream: "output_video"


node {
  calculator: "FlowLimiterCalculator"
  input_stream: "input_video"
  input_stream: "FINISHED:output_video"
  input_stream_info: {
    tag_index: "FINISHED"
    back_edge: true
  }
  output_stream: "throttled_input_video"
}


node: {
  calculator: "ToImageCalculator"
  input_stream: "IMAGE_CPU:throttled_input_video"
  output_stream: "IMAGE:image_input_video"
}

node {
  calculator: "ImageToTensorCalculator"
  input_stream: "IMAGE:image_input_video"
  output_stream: "TENSORS:input_tensor"
  options: {
    [mediapipe.ImageToTensorCalculatorOptions.ext] {
      output_tensor_width: 256
      output_tensor_height: 256
      keep_aspect_ratio: true
      output_tensor_float_range {
        min: -1.0
        max: 1.0
      }
      border_mode: BORDER_ZERO
    }
  }
}


node {
  calculator: "InferenceCalculator"
  input_stream: "TENSORS:input_tensor"
  output_stream: "TENSORS:output_tensor"
  options: {
    [mediapipe.InferenceCalculatorOptions.ext] {
      model_path: "mediapipe/models/model_float32.tflite"
      delegate { xnnpack {} }
    }
  }
}


node {
  calculator: "TensorsToSegmentationCalculator"
  input_stream: "TENSORS:output_tensor"
  output_stream: "MASK:output"
  options: {
    [mediapipe.TensorsToSegmentationCalculatorOptions.ext] {
      activation: NONE
    }
 }
}

node{
  calculator: "FromImageCalculator"
  input_stream: "IMAGE:output"
  output_stream: "IMAGE_CPU:output_video"
}

